{"version":3,"file":"index.e560bc38.js","sources":["../../vite/modulepreload-polyfill","../../src/Helpers/interface.ts","../../src/geometryStyle.ts","../../src/Helpers/constants.ts","../../src/Helpers/pointDefs.ts","../../src/Helpers/helper.ts","../../src/Helpers/rangeManager.ts","../../src/Helpers/transform.ts","../../src/ui/barStyleManager.ts","../../src/Helpers/selBox.ts","../../node_modules/@popperjs/core/lib/enums.js","../../node_modules/@popperjs/core/lib/dom-utils/getNodeName.js","../../node_modules/@popperjs/core/lib/dom-utils/getWindow.js","../../node_modules/@popperjs/core/lib/dom-utils/instanceOf.js","../../node_modules/@popperjs/core/lib/modifiers/applyStyles.js","../../node_modules/@popperjs/core/lib/utils/getBasePlacement.js","../../node_modules/@popperjs/core/lib/utils/math.js","../../node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js","../../node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js","../../node_modules/@popperjs/core/lib/dom-utils/contains.js","../../node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js","../../node_modules/@popperjs/core/lib/dom-utils/isTableElement.js","../../node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js","../../node_modules/@popperjs/core/lib/dom-utils/getParentNode.js","../../node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js","../../node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js","../../node_modules/@popperjs/core/lib/utils/within.js","../../node_modules/@popperjs/core/lib/utils/getFreshSideObject.js","../../node_modules/@popperjs/core/lib/utils/mergePaddingObject.js","../../node_modules/@popperjs/core/lib/utils/expandToHashMap.js","../../node_modules/@popperjs/core/lib/modifiers/arrow.js","../../node_modules/@popperjs/core/lib/utils/getVariation.js","../../node_modules/@popperjs/core/lib/modifiers/computeStyles.js","../../node_modules/@popperjs/core/lib/modifiers/eventListeners.js","../../node_modules/@popperjs/core/lib/utils/getOppositePlacement.js","../../node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js","../../node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js","../../node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js","../../node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js","../../node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js","../../node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js","../../node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js","../../node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js","../../node_modules/@popperjs/core/lib/utils/rectToClientRect.js","../../node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js","../../node_modules/@popperjs/core/lib/utils/computeOffsets.js","../../node_modules/@popperjs/core/lib/utils/detectOverflow.js","../../node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js","../../node_modules/@popperjs/core/lib/modifiers/flip.js","../../node_modules/@popperjs/core/lib/modifiers/hide.js","../../node_modules/@popperjs/core/lib/modifiers/offset.js","../../node_modules/@popperjs/core/lib/modifiers/popperOffsets.js","../../node_modules/@popperjs/core/lib/utils/getAltAxis.js","../../node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","../../node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js","../../node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js","../../node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js","../../node_modules/@popperjs/core/lib/utils/orderModifiers.js","../../node_modules/@popperjs/core/lib/utils/debounce.js","../../node_modules/@popperjs/core/lib/utils/mergeByName.js","../../node_modules/@popperjs/core/lib/createPopper.js","../../node_modules/@popperjs/core/lib/popper.js","../../node_modules/tippy.js/dist/tippy.esm.js","../../src/Helpers/selectionContext.ts","../../src/Helpers/geometry.ts","../../src/Helpers/tuft.ts","../../src/Server/Model/visual.ts","../../src/Server/Model/Visuals/circle.ts","../../src/Server/Model/Visuals/line.ts","../../src/Server/Model/Visuals/shape.ts","../../src/Server/Model/Visuals/text.ts","../../src/Server/svgManager.ts","../../src/dialogs.ts","../../src/Gestures/panZoom.ts","../../src/requests.ts","../../src/redline.ts","../../src/ui/confirmationDialog.ts","../../src/ui/createRedlineDialog.ts","../../src/Helpers/textParams.ts","../../src/ui/textStyleManager.ts","../../src/ui/redlinePlatform.ts","../../src/ui/redlinesManagement.ts","../../src/ui/toolbar.ts","../../src/svgArea.ts","../../src/index.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import { Interface } from \"readline\";\r\nimport { GeometryStyle } from \"../geometryStyle\";\r\nimport Redline from \"../redline\";\r\nimport { RedlinePlatform } from \"../ui/redlinePlatform\";\r\nimport { IPoint } from \"./pointDefs\";\r\nimport { SelBox } from \"./selBox\";\r\nexport enum OsPlatform {\r\n    Mac_OS,\r\n    iOS,\r\n    Windows,\r\n    Android,\r\n    Linux,\r\n    Unknown\r\n  }\r\nexport enum loadType {\r\n    json,\r\n    htmlFragment\r\n}\r\nexport enum sliderEvents {\r\n    stop,\r\n    change\r\n}\r\nexport enum backColor {\r\n    white,\r\n    black\r\n}\r\nexport enum PanZoomEvt {\r\n    stop,\r\n    pan,\r\n    zoom,\r\n    select,\r\n    edit\r\n}\r\nexport enum NodeName {\r\n    path,\r\n    line,\r\n    text,\r\n    tspan,\r\n    circle,\r\n    ellipse,\r\n    rect,\r\n    g,\r\n    use,\r\n    defs,\r\n    pattern,\r\n    clipPath,\r\n    svg\r\n}\r\nexport enum DrawingType{\r\n    smart,\r\n    preview\r\n}\r\nexport interface ISize {\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nexport interface IBox extends ISize {    \r\n    origin: IPoint;\r\n}\r\n\r\nexport interface ITransformParameters {\r\n    trl: IPoint;\r\n    bb?:IPoint;\r\n    scl: number;\r\n}\r\nexport interface IClosestOnLine{\r\n    p:IPoint;\r\n    part:number;\r\n}\r\nexport interface IDialog {\r\n    parent: HTMLElement;\r\n    panel: HTMLElement\r\n    updateTheme?(bc: backColor, btns: any): void;\r\n    set?(): void;\r\n    load(t?: string): void;\r\n    events(): void;\r\n}\r\nexport interface IRedline {\r\n    id: string;\r\n    name: string;\r\n    visuals?: any[];\r\n    visible: boolean\r\n}\r\nexport interface IRedlineFull extends IRedline {\r\n    active: boolean,\r\n    selected: boolean\r\n}\r\nexport interface ICursorResult {\r\n    cancel: boolean;\r\n    _id?: any[]\r\n}\r\nexport interface ILevel{\r\n    name:string;\r\n    number: number,\r\n    description: string,\r\n    count:number,\r\n    stroke: string,\r\n    \"stroke-width\": string,\r\n    visible: boolean\r\n}\r\nexport interface IDrawing{\r\n    id:number;\r\n    name:string;\r\n    visuals:any[];\r\n    levels:ILevel[];\r\n    patterns?:any[];\r\n}\r\nexport interface IEntityInWindow {\r\n    all:boolean;\r\n    part:boolean;\r\n    out:boolean;\r\n}\r\nexport enum RedlineTyp {\r\n    none=0,\r\n    line = 1,\r\n    shp = 2,\r\n    redlinetext = 14,\r\n    circle = 5,\r\n  }\r\n  export enum RedlineMethod{\r\n    select,\r\n    copy,\r\n    edit\r\n  }\r\n  export enum TypeConstant {\r\n    line = 1,\r\n    lines = 11,\r\n    shp = 2,\r\n    arc = 3,\r\n    text = 40,\r\n    redlinetext = 14,\r\n    circle = 5,\r\n    ellipse = 6,\r\n    lineString = 7,\r\n    solidHole = 9,\r\n    cell = 10,\r\n    reference = 20,\r\n    link = 30\r\n  }\r\n  export enum vertexType{\r\n    vertex,\r\n    interVertex,\r\n    tuft\r\n  }\r\n  export enum StyleKey {\r\n    fill,\r\n    stroke,\r\n    \"stroke-width\",\r\n    \"stroke-dasharray\",\r\n    \"stroke-opacity\",\r\n    \"fill-opacity\"\r\n  }\r\n  export interface ITuft {\r\n    idx: number;\r\n    redline: Redline;\r\n    type:vertexType;\r\n    target: HTMLElement;\r\n    pad: HTMLElement;\r\n    visual:IRedlineVisual\r\n    style?: string;\r\n    center: IPoint;\r\n    updatePos(c: IPoint,dynamic:boolean): void;\r\n    draw(winPoint:IPoint):void;\r\n    finalize(ev: PointerEvent):void;\r\n    events(): void;\r\n    dynamic:boolean;\r\n    finalized:boolean;\r\n  }\r\n  \r\n  export interface IVisual {\r\n    handle?: string;\r\n    valid: boolean;\r\n    style: any;\r\n    points?: IPoint[];\r\n    level?: string;\r\n    range:IBox;\r\n    create(): HTMLElement;\r\n    style2String(): string;\r\n    patternId?: string;\r\n    trf: ITransformParameters;\r\n    type?: TypeConstant;\r\n    fillable:boolean;\r\n  }\r\n  \r\n\r\n  export interface IRedlineVisual {\r\n    _id:string;\r\n    redline:Redline;\r\n    redlinetyp: RedlineTyp; // vybera len podskupinu z typeConstant ktora je vhodna pre redline\r\n    isEdited: boolean; // priznak ze prvok je v stave editovania (taky moze byt iba 1)\r\n    selBox: SelBox;\r\n    nodeList: ITuft[]; // zoznam editovacich nodov\r\n    interNodeList: ITuft[]; // zoznam pomocnych editovacich nodov na ciare medzi nodmi v strede\r\n    elem:HTMLElement;\r\n    pad: HTMLElement;\r\n    snapPoint:IPoint;\r\n    // spolocne s IVisual start\r\n    patternId?: string;\r\n    trf: ITransformParameters;\r\n    type?: TypeConstant;\r\n    fillable:boolean;\r\n    valid: boolean;\r\n    style: any;\r\n    points?: IPoint[];\r\n    level?: string;\r\n    range:IBox;\r\n    save():JSON\r\n    // spolocne s IVisual end\r\n    move(dt: IPoint): void; // posunutie prvku\r\n    copy(): IRedlineVisual; // vytvori kopiu prvku\r\n    edit(): void; // da editovany prvok do modu s chlpami (pinmy), umozni ho editovat\r\n    dynamic(nod:ITuft):void; // mení len pozíciu daného bodu\r\n    removeVertex(pin: ITuft): void;// odstrani vybrany vrchol z pWin aj points\r\n    create(): HTMLElement;\r\n    draw():void;\r\n    setStyle():void\r\n    addPoint(p:IPoint);\r\n    init(pad:HTMLElement):void;\r\n    getRange():IBox;\r\n    finalize():void;\r\n    toVisual():any;\r\n    getClosestPoint(realP:IPoint,bufer:number):IPoint|null;// realPoint\r\n    getSelfClosestPoint(realP:IPoint,bufer:number,idx:number):IClosest|null;// iba pre line a shape ma zmysel\r\n    firstStep(r: Redline, stl: GeometryStyle, _id: string, p?: IPoint):void\r\n  }\r\n  export interface IClosest{\r\n    d:number;\r\n    p:IPoint;\r\n  }\r\n  export interface IClosestRedlineVisual{\r\n    closest:IClosest\r\n    visual:IRedlineVisual\r\n  }\r\n  export interface IGeometryStyle {\r\n    stroke: string;\r\n    fill?: string;\r\n    \"stroke-width\": number;\r\n    \"stroke-opacity\"?: number;\r\n    \"fill-opacity\"?: number;\r\n    \"stroke-dasharray\"?: string\r\n  }\r\n  export interface IBarStyleManager {\r\n    bar: HTMLElement;\r\n    button: HTMLElement;\r\n    picker: HTMLInputElement;\r\n    inputs: NodeListOf<HTMLInputElement>;\r\n    chBoxes: NodeListOf<HTMLInputElement>;\r\n    setPreview(): void;\r\n    updateColor(): void;\r\n    modifiVisual(keyValue:any,c:IRedlineVisual):void;\r\n    modifiVisuals(keyValue: any): void;\r\n    showHide(pos: IPoint): void;\r\n    pos: IPoint;\r\n    events(): void;\r\n    redlinePlatform: RedlinePlatform;\r\n  }\r\n    export enum TextJustification {\r\n    LT,\r\n    LC,\r\n    LB,\r\n    CT,\r\n    CC,\r\n    CB,\r\n    RT,\r\n    RC,\r\n    RB\r\n  }\r\n  export interface ITextParams {\r\n    font: string;\r\n    size: number;\r\n    gap: number;\r\n    color: string;\r\n    alignment: TextJustification;\r\n    lines: string[];\r\n    angle: number;\r\n    bold: boolean;\r\n    italic: boolean;\r\n    underline: boolean;\r\n  }","import { svgArea } from \".\";\r\nimport { Round, updateColor } from \"./Helpers/helper\";\r\nimport { backColor } from \"./Helpers/interface\";\r\nimport { IGeometryStyle, StyleKey } from \"./Helpers/interface\";\r\n\r\n\r\nexport const standardStyles: string[] = [\"2 6\", \"8 3\", \"14 4\", \"10 4 4 4\", \"3 5\", \"6 3 2 3 2 3\", \"10 3 3 3\"];\r\nconst sw:string=\"stroke-width\";\r\nconst sd:string=\"stroke-dasharray\";\r\nconst fo:string=\"fill-opacity\";\r\nconst so:string=\"stroke-opacity\";\r\nexport class GeometryStyle{\r\n    stroke:string;\r\n    fill?:string\r\n    \"stroke-width\"?:number;\r\n    \"stroke-dasharray\"?:number;\r\n    \"stroke-opacity\"?:number;\r\n    \"fill-opacity\"?:number;\r\n    static getLineStyle(n:number){\r\n        let r:string=\"\";\r\n        if(n>0){\r\n            r=standardStyles[n-1];\r\n        }\r\n        return r;\r\n    }\r\n    static get(s:StyleKey):string|undefined{\r\n        const strokeBar:HTMLElement=svgArea.container.querySelector(\"div[id='rdl-stroke-manager']\");\r\n        const fillBar:HTMLElement=svgArea.container.querySelector(\"div[id='rdl-fill-manager']\");\r\n        let input:HTMLInputElement;\r\n        const q:string=StyleKey[s];\r\n        if(q.startsWith(\"fill\")){\r\n            input=fillBar.querySelector(`input[key=\"${q}\"]`);\r\n        } else{\r\n            input=strokeBar.querySelector(`input[key=\"${q}\"]`);\r\n        }\r\n        if(input){\r\n            return input.value;\r\n        }\r\n        return undefined;\r\n    }\r\n    static init(stl:any):GeometryStyle{\r\n        const gs=new GeometryStyle(false);\r\n        let key: string;\r\n        for (key in stl) {\r\n           if (gs.hasOwnProperty(key)){\r\n                gs[key]=stl[key];\r\n            }\r\n          }\r\n        return gs;\r\n    }\r\n    constructor(byBar:boolean=true){\r\n        if(byBar){\r\n            this.stroke=GeometryStyle.get(StyleKey.stroke);\r\n            let test:any;\r\n            test=GeometryStyle.get(StyleKey[\"stroke-width\"]);\r\n            this[\"stroke-width\"]=parseInt(test,10);\r\n            test=parseFloat(GeometryStyle.get(StyleKey[\"stroke-opacity\"]));\r\n            if(test===0){\r\n                this[\"stroke-opacity\"]=undefined;    \r\n            } else{\r\n                this[\"stroke-opacity\"]=Round( 1-test,1);\r\n            }\r\n            test=parseFloat(GeometryStyle.get(StyleKey[\"fill-opacity\"]));\r\n            if(test===0){\r\n                this[\"fill-opacity\"]=undefined;    \r\n            } else{\r\n                this[\"fill-opacity\"]=Round( 1-test,1);\r\n            }\r\n            test=parseInt(GeometryStyle.get(StyleKey[\"stroke-dasharray\"]),10);\r\n            this[\"stroke-dasharray\"]=(test)?test:undefined;\r\n        }\r\n    }\r\n}","export const svgNs: string = \"http://www.w3.org/2000/svg\";\r\nexport const svgLink: string = \"http://www.w3.org/1999/xlink\";\r\n","export interface IPoint {\r\n    x: number;\r\n    y: number;\r\n    Clone(): IPoint;\r\n    SubtractPoint(point: IPoint): IPoint;\r\n    AddPoint(point: IPoint): IPoint;\r\n    toString(): string;\r\n}\r\nexport class Point implements IPoint {\r\n    static PointFromObject(o: any): Point {\r\n        return new Point(o.x, o.y);\r\n    }\r\n    static PointsFromObjects(oo: any): IPoint[] {\r\n        const ret: IPoint[] = [];\r\n        const h:number = oo.length;\r\n        for (let i: number = 0; i < h; i++) {\r\n            ret.push(Point.PointFromObject(oo[i]));\r\n        }\r\n        return ret;\r\n    }\r\n    static ExactPoint(b: IPoint, r: number = 0):IPoint {\r\n        return new Point(parseFloat(b.x.toFixed(r)), parseFloat(b.y.toFixed(r)));\r\n    }\r\n    static Rotate(origin: Point, angle: number, b: Point): Point {\r\n        if (angle === 0) {\r\n            return b.Clone();\r\n        }\r\n        const s: number = Math.sin(angle);\r\n        const c: number = Math.cos(angle);\r\n        const p: Point = new Point(b.x - origin.x, b.y - origin.y);\r\n        const x: number = p.x * c - p.y * s;\r\n        const y: number = p.x * s + p.y * c;\r\n        return new Point(origin.x + x, origin.y + y);\r\n    }\r\n    static String2Points(t: string): Point[] {\r\n        const res: any = t.match(/-?\\d+(\\.\\d+)?/g);\r\n        const length: number = res.length;\r\n        let i: number = 0;\r\n        const ret: Point[] = [];\r\n        while (i < length) {\r\n            const p: Point = new Point(\r\n                Number.parseFloat(res[i]),\r\n                Number.parseFloat(res[i + 1])\r\n            );\r\n            ret.push(p);\r\n            i += 2;\r\n        }\r\n        return ret;\r\n    }\r\n     Clone(): IPoint {\r\n        return new Point(this.x, this.y);\r\n    }\r\n    SubtractPoint(point: IPoint): IPoint {\r\n        return new Point(this.x - point.x, this.y - point.y);\r\n    }\r\n    AddPoint(point: IPoint): IPoint {\r\n        return new Point(point.x + this.x, point.y + this.y);\r\n    }\r\n    x: number = 0;\r\n    y: number = 0;\r\n    toString(): string {\r\n        return this.y < 0 ? this.x + \"\" + this.y : this.x + \" \" + this.y;\r\n    }\r\n    constructor(x?: number, y?: number) {\r\n        this.x = x === undefined ? 0 : x;\r\n        this.y = y === undefined ? 0 : y;\r\n    }\r\n}","import { type } from \"os\";\r\nimport tippy from \"tippy.js\";\r\nimport { GeometryStyle } from \"../geometryStyle\";\r\nimport { svgArea } from \"..\";\r\nimport { svgNs } from \"./constants\";\r\nimport { backColor, IBox, loadType, NodeName, OsPlatform, TextJustification } from \"./interface\";\r\nimport { IPoint, Point } from \"./pointDefs\";\r\nimport { RangeManager } from \"./rangeManager\";\r\nimport * as exp from \"constants\";\r\nexport var OS: any;\r\nexport const getOS = (): void => {\r\n  const userAgent: any = window.navigator.userAgent,\r\n    platform: any = window.navigator.platform,\r\n    macosPlatforms: any = [\"Macintosh\", \"MacIntel\", \"MacPPC\", \"Mac68K\"],\r\n    windowsPlatforms: any = [\"Win32\", \"Win64\", \"Windows\", \"WinCE\"],\r\n    iosPlatforms: any = [\"iPhone\", \"iPad\", \"iPod\"];\r\n  OS = OsPlatform.Unknown;\r\n  if (macosPlatforms.indexOf(platform) !== -1) {\r\n    OS = OsPlatform.Mac_OS;\r\n  } else if (iosPlatforms.indexOf(platform) !== -1) {\r\n    OS = OsPlatform.iOS;\r\n  } else if (windowsPlatforms.indexOf(platform) !== -1) {\r\n    OS = OsPlatform.Windows;\r\n  } else if (/Android/.test(userAgent)) {\r\n    OS = OsPlatform.Android;\r\n  } else if (OS === OsPlatform.Unknown && /Linux/.test(platform)) {\r\n    OS = OsPlatform.Linux;\r\n  }\r\n}\r\nexport const loadData = async (path: string): Promise<string> => {\r\n  return await (await fetch(path).then()).text();\r\n}\r\n\r\nexport const createFragment = (htmlStr: string): HTMLElement => {\r\n  const frag: any = document.createDocumentFragment(), temp: any = document.createElement(\"div\");\r\n  temp.innerHTML = htmlStr.trim(); while (temp.firstChild) { frag.appendChild(temp.firstChild); }\r\n  let ret: any = undefined;\r\n  let h = frag.children.length;\r\n  if (h > 0) {\r\n    for (let i = 0; i < h; i++) {\r\n      const e = frag.children[i];\r\n      if (e.toString() !== \"[object HTMLScriptElement]\") {\r\n        if (!ret) {\r\n          ret = []\r\n        }\r\n        ret.push(e);\r\n      }\r\n    }\r\n  }\r\n  if (ret) {\r\n    if (ret.length === 1) {\r\n      return ret[0];\r\n    } else {\r\n      const div = document.createElement(\"div\");\r\n      div.setAttribute(\"children-fragment-list\", \"\")\r\n      ret.forEach(e => {\r\n        div.appendChild(e);\r\n      });\r\n      return div;\r\n    }\r\n  }\r\n  return null;\r\n}\r\nexport const createGuid = (): string => {\r\n  const S4 = (): string => {\r\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n  }\r\n  return (S4() + S4() + \"-\" + S4() + \"-4\" + S4().substring(0, 3) + \"-\" + S4() + \"-\" + S4() + S4() + S4()).toLowerCase();\r\n}\r\nexport function CreateSvgObject(name: NodeName, j: any): HTMLElement {\r\n  const nod: string = NodeName[name];\r\n  const e: Element = document.createElementNS(svgNs, nod);\r\n  let key: string;\r\n  // tslint:disable-next-line:forin\r\n  for (key in j) {\r\n    e.setAttribute(key, j[key]);\r\n  }\r\n  return (e as HTMLElement);\r\n}\r\n\r\nexport const Round = (n: number, digits?: number): number => {\r\n  if (digits === undefined) {\r\n    digits = 2;\r\n  }\r\n  return parseFloat(n.toFixed(digits));\r\n}\r\n\r\nexport const getSize = (svgArea: HTMLElement): IPoint => {\r\n  return new Point(svgArea.clientWidth, svgArea.clientHeight);\r\n}\r\n\r\nexport const styleFromObject = (obj: any): string => {\r\n  const t: string[] = [];\r\n  for (const key in obj) {\r\n    if (obj[key] !== null && obj[key] !== undefined) {\r\n      if (key === \"stroke-dasharray\") {\r\n        t.push(key + \":\" + GeometryStyle.getLineStyle(obj[key]));\r\n      } else {\r\n        let value = obj[key];\r\n        if (key === \"stroke\" || key === \"fill\") {\r\n          value = updateColor(value, svgArea.background);\r\n        }\r\n        t.push(key + \":\" + value);\r\n      }\r\n    }\r\n  }\r\n  return t.join(\";\")\r\n}\r\n\r\nexport const MiniPath = (a: IPoint, b: IPoint): string => {\r\n  let d: string = \"\";\r\n  const m: IPoint = new Point(Round(a.x - b.x, 1), Round(a.y - b.y, 1));\r\n  if (m.x === 0 && m.y !== 0) {\r\n    d += \"v\" + m.y;\r\n  } else if (m.x !== 0 && m.y === 0) {\r\n    d += \"h\" + m.x;\r\n  } else if (m.x !== 0 && m.y !== 0) {\r\n    d += \"l\" + m.x + \" \" + m.y;\r\n  }\r\n  return d;\r\n}\r\nexport const PathFromPoints = (bb: IPoint[], cutFirst: boolean = false): string => {\r\n  if (bb === undefined || bb.length === 0) {\r\n    return \"\";\r\n  }\r\n  const length: number = bb.length;\r\n  let d: string = cutFirst === true ? \"\" : \"M\" + bb[0].toString();\r\n  if (length > 1) {\r\n    for (let i: number = 1; i < length; i++) {\r\n      d += MiniPath(bb[i], bb[i - 1]);\r\n    }\r\n  }\r\n  return d;\r\n}\r\nexport const Distance = (a: IPoint, b: IPoint): number => {\r\n  if (a && b) {\r\n    const A: number = b.x - a.x;\r\n    const B: number = b.y - a.y;\r\n    return Math.sqrt(A * A + B * B);\r\n  } return 0;\r\n}\r\n\r\nexport const updateColor = (value: string, bc: backColor): string => {\r\n  let q: string = value.toLowerCase();\r\n  if (q === \"#ffffff\" || q === \"white\") { q = \"#fff\"; }\r\n  if (q === \"#000000\" || q === \"black\") { q = \"#000\"; }\r\n  if (q === \"#fff\" && bc === backColor.white) { q = \"#000\"; }\r\n  if (q === \"#000\" && bc === backColor.black) { q = \"#fff\"; }\r\n  return q;\r\n}\r\n\r\nexport const RemoveChildren = (n: HTMLElement): void => {\r\n  if (n) {\r\n    while (n.firstChild) {\r\n      n.removeChild(n.firstChild);\r\n    }\r\n  }\r\n}\r\nexport const GetOrigin = (just: TextJustification, pts: IPoint[]): IPoint => {\r\n  const T = TextJustification;\r\n  const getMidPoint = (a: IPoint, b: IPoint): IPoint => {\r\n    return new Point(\r\n      (a.x + b.x) / 2,\r\n      (a.y + b.y) / 2\r\n    )\r\n  }\r\n  // pts sú 4 body od lavo dole proti smeru hod. ručičiek\r\n  let ret: IPoint;\r\n  switch (just) {\r\n    case T.LT:\r\n      ret = pts[3];\r\n      break;\r\n    case T.LC:\r\n      ret = getMidPoint(pts[0], pts[3]);\r\n      break;\r\n    case T.LB:\r\n      ret = pts[0];\r\n      break;\r\n    case T.CT:\r\n      ret = getMidPoint(pts[2], pts[3]);\r\n      break;\r\n    case T.CC:\r\n      ret = getMidPoint(pts[0], pts[2]);\r\n      break;\r\n    case T.CB:\r\n      ret = getMidPoint(pts[0], pts[1]);\r\n      break;\r\n    case T.RT:\r\n      ret = pts[2];\r\n      break;\r\n    case T.RC:\r\n      ret = getMidPoint(pts[1], pts[2]);\r\n      break;\r\n    case T.RB:\r\n      ret = pts[1];\r\n      break;\r\n  }\r\n  return ret;\r\n}\r\nexport const GetScreenCordinates = (obj): IPoint => {\r\n  var p: IPoint = new Point(obj.offsetLeft, obj.offsetTop);\r\n  p.x += Math.round(obj.offsetWidth / 2);\r\n  p.y += Math.round(obj.offsetHeight / 2);\r\n  while (obj.offsetParent) {\r\n    p.x = p.x + obj.offsetParent.offsetLeft;\r\n    p.y = p.y + obj.offsetParent.offsetTop;\r\n    if (obj == document.getElementsByTagName(\"body\")[0]) {\r\n      break;\r\n    }\r\n    else {\r\n      obj = obj.offsetParent;\r\n    }\r\n  }\r\n  return p;\r\n}\r\nexport const CloneJson=(src:any):any=>{\r\n  return JSON.parse(JSON.stringify(src))\r\n}","import { ITransformParameters, TextJustification, TypeConstant } from \"./interface\";\r\nimport { CreateSvgObject, Round } from \"./helper\";\r\nimport { IBox, IEntityInWindow } from \"./interface\";\r\nimport { IPoint, Point } from \"./pointDefs\";\r\nimport { Geometry } from \"./geometry\";\r\n\r\nexport class RangeManager {\r\n  static getRangePoints(rg: IBox): IPoint[] {\r\n    let tl: IPoint = new Point(rg.origin.x, rg.origin.y);\r\n    let br: IPoint = new Point(rg.origin.x + rg.width, rg.origin.y - rg.height);\r\n    let tr: IPoint = new Point(br.x, tl.y);\r\n    let bl: IPoint = new Point(tl.x, br.y);\r\n    return [tl, tr, br, bl];\r\n  }\r\n  static isRange(e: any): boolean {\r\n    const props: string[] = [\"origin\", \"width\", \"height\"];\r\n    let ret: boolean = true;\r\n    props.forEach(function (prop) {\r\n      if (e.hasOwnProperty(prop) === false) {\r\n        ret = false;\r\n        return;\r\n      }\r\n    });\r\n    return ret;\r\n  }\r\n  static rangeByPoints(b: Point[], realPosition: boolean): IBox {\r\n    const length: number = b.length;\r\n    const rg: IBox = { origin: new Point(), width: 0, height: 0 };\r\n    if (b.length < 0) {\r\n      throw new Error(\"Range undefined\");\r\n    }\r\n    if (length < 2) {\r\n      rg.origin = b[0];\r\n      rg.width = rg.height = 0;\r\n      return rg;\r\n    }\r\n    const origin: Point = new Point(b[0].x, b[0].y);\r\n    const oB: Point = origin.Clone();\r\n    for (let i: number = 1; i < length; i++) {\r\n      const n: Point = b[i];\r\n      if (n.x < origin.x) {\r\n        origin.x = n.x;\r\n      }\r\n      if (n.x > oB.x) {\r\n        oB.x = n.x;\r\n      }\r\n      if (n.y < origin.y) {\r\n        origin.y = n.y;\r\n      }\r\n      if (n.y > oB.y) {\r\n        oB.y = n.y;\r\n      }\r\n    }\r\n    const width: number = Round(oB.x - origin.x, 4);\r\n    const height: number = Round(oB.y - origin.y, 4);\r\n    if (realPosition === true) {\r\n      origin.y += height;\r\n    }\r\n    rg.origin = origin;\r\n    rg.width = width;\r\n    rg.height = height;\r\n    return rg;\r\n  }\r\n  static rangeByRanges(bb: IBox[]): IBox {\r\n    bb = bb.filter(f => (f));\r\n    const b: Point[] = new Array<Point>();\r\n    bb.forEach((box: IBox) => {\r\n      b.push(box.origin);\r\n      b.push(new Point(box.origin.x + box.width, box.origin.y - box.height));\r\n    });\r\n    return this.rangeByPoints(b, true);\r\n  }\r\n  static GetRange = (e: any): IBox | null => {\r\n    let r: any;\r\n    const hasRange: boolean = e.hasOwnProperty(\"range\");\r\n    if (hasRange === false) {\r\n      if (e.type === TypeConstant.cell) {\r\n        let ranges: IBox[] = e.visuals.map((a: { range: any; }) => a.range);\r\n        let rg: IBox = this.rangeByRanges(ranges);\r\n        e.range = rg;\r\n        return rg;\r\n      } else {\r\n        return null\r\n      };\r\n    } else {\r\n      r = e.range;\r\n    }\r\n    const p: Point = Point.PointFromObject(r.origin);\r\n    const w: number = r.width;\r\n    const h: number = r.height;\r\n    const rg: IBox = { origin: p, width: w, height: h };\r\n    return rg;\r\n  }\r\n\r\n  static getRangeRecursive = (visuals: any): IBox[] => {\r\n    const rgs: IBox[] = [];\r\n    visuals.forEach(e => {\r\n      if (e.range) {\r\n        rgs.push(e.range);\r\n      } else {\r\n        if (e.visuals) {\r\n          const r: IBox[] = this.getRangeRecursive(e.visuals);\r\n          if (r) {\r\n            rgs.push(RangeManager.rangeByRanges(r));\r\n          }\r\n        }\r\n      }\r\n    });\r\n    return rgs;\r\n  }\r\n  static circleRange(c: IPoint, r: number, realPosition: boolean): IBox {\r\n    const b: IPoint[] = [\r\n      new Point(c.x, c.y + r),\r\n      new Point(c.x - r, c.y - r),\r\n      new Point(c.x + r, c.y - r),\r\n    ]\r\n    return this.rangeByPoints(b, realPosition);\r\n  }\r\n  static ellipseRange(geom: any, realPosition: boolean): IBox {\r\n    if (geom.rx === geom.ry) {\r\n      return this.circleRange(geom.center, geom.rx, realPosition);\r\n    }\r\n    const b: IPoint[] = [];\r\n    const step: number = Math.PI / 8;\r\n    const full: number = 2 * Math.PI;\r\n    const angle = geom.angle ? geom.angle / 180 * Math.PI : 0;\r\n    let u: number = 0;\r\n    while (u < full) {\r\n      const m = geom.rx * Math.cos(u);\r\n      const n = geom.ry * Math.sin(u);\r\n      b.push(\r\n        new Point(\r\n          geom.center.x + Math.cos(angle) * m - Math.sin(angle) * n,\r\n          geom.center.y + Math.sin(angle) * m + Math.cos(angle) * n\r\n        )\r\n      )\r\n      u += step;\r\n    }\r\n    return this.rangeByPoints(b, realPosition);\r\n  }\r\n  \r\n  static RangesOverlap(rg: IBox, window: IBox, testDiadonal: boolean = true): IEntityInWindow {\r\n    const o: Point = rg.origin.Clone();\r\n    const o1: Point = window.origin.Clone();\r\n    const w: number = rg.width;\r\n    const h: number = rg.height;\r\n    const W: number = window.width;\r\n    const H: number = window.height;\r\n\r\n    let out: boolean = true;\r\n    let part: boolean = false;\r\n    let all: boolean = false;\r\n    const diagonal: number = Math.round(Math.sqrt(w * w + h * h));\r\n    if (diagonal > 1) { // inak prilis male\r\n      if (o1.x !== 0 || o1.y !== 0) {\r\n        o.x -= o1.x;\r\n        o.y -= o1.y;\r\n        o1.x = 0; o1.y = 0;\r\n      }\r\n      if (o.x + w >= 0 && o.x <= W) {\r\n        if (o.y + h >= 0 && o.y <= H) {\r\n          out = false;\r\n          part = true;\r\n        }\r\n      }\r\n      if (part) {\r\n        if (o.x >= 0 && o.x + w <= W) {\r\n          if (o.y >= 0 && o.y + h <= H) {\r\n            all = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    let ret: IEntityInWindow = {\r\n      out, part, all\r\n    }\r\n    return ret;\r\n  }\r\n\r\n}","import { AnyARecord } from \"dns\";\r\nimport { svgArea } from \"..\";\r\nimport { IRedlineVisual } from \"./interface\";\r\nimport { Visual } from \"../Server/Model/visual\";\r\nimport { Round } from \"./helper\";\r\nimport { IBox, ITransformParameters } from \"./interface\";\r\nimport { IPoint, Point } from \"./pointDefs\";\r\n\r\nexport class Transform {\r\n  static getDefaultTP(window: IBox, range: IBox): ITransformParameters {\r\n    let scl: number = window.width / range.width;\r\n    const r: number = window.height / range.height;\r\n    const trl: IPoint = new Point();\r\n    const bb: IPoint = range.origin;\r\n    if (r < scl) {\r\n      scl = r;\r\n      trl.x = Round((window.width - range.width * scl) / 2, 2);\r\n    } else {\r\n      trl.y = Round((window.height - range.height * scl) / 2, 2);\r\n    }\r\n    return { trl, scl, bb };\r\n  }\r\n  static transform2Window(b: IPoint, trf: ITransformParameters, r?: number): IPoint {\r\n    if (!r) {\r\n      r = 1;\r\n    }\r\n    const x: number = Round((b.x - trf.bb.x) * trf.scl + trf.trl.x, r);\r\n    const y: number = Round((b.y - trf.bb.y) * -trf.scl + trf.trl.y, 1);\r\n    return new Point(x, y);\r\n  }\r\n  static transformArray2Window(bb: IPoint[], trf: ITransformParameters, r?: number): IPoint[] {\r\n    const ret: IPoint[] = [];\r\n    bb.forEach(b => {\r\n      ret.push(this.transform2Window(b, trf, r))\r\n    });\r\n    return ret;\r\n  }\r\n  static scale2Window(n: number, scl: number, r?: number) {\r\n    if (!r) {\r\n      r = 2;\r\n    }\r\n    return Round(n * scl, r);\r\n  }\r\n  static transform2Real(b:IPoint,trf:ITransformParameters,r?:number):IPoint{\r\n    if (!r) { r = 3; }\r\n        return new Point(\r\n            Round((b.x - trf.trl.x) / trf.scl + trf.bb.x, r),\r\n            Round((trf.trl.y - b.y) / trf.scl + trf.bb.y, r)\r\n        );\r\n  }\r\n  static transformArray2Real(bb:IPoint[],trf:ITransformParameters,r?:number):IPoint[]{\r\n    const ret: IPoint[] = [];\r\n    bb.forEach(b => {\r\n      ret.push(this.transform2Real(b, trf, r))\r\n    });\r\n    return ret;\r\n  }\r\n  static scale2Real(n: number, scl: number, r?: number) {\r\n    if (!r) {\r\n      r = 3;\r\n    }\r\n    return Round(n / scl, r);\r\n  }\r\n  static transformToRealRange(rv:IRedlineVisual):IBox{\r\n    const v:Visual=rv as any;\r\n    const r:number=6;\r\n    const origin:IPoint=this.transform2Real(v.range.origin,v.trf,r)\r\n    const width:number=this.scale2Real(v.range.width,v.trf.scl,r);\r\n    const height:number=this.scale2Real(v.range.height,v.trf.scl,r);\r\n    return {origin,width,height}\r\n  }\r\n}","import { GeometryStyle } from \"../geometryStyle\";\r\nimport { Round, updateColor } from \"../Helpers/helper\";\r\nimport { backColor, TypeConstant } from \"../Helpers/interface\";\r\nimport { IPoint } from \"../Helpers/pointDefs\";\r\nimport { IBarStyleManager, IRedlineVisual } from \"../Helpers/interface\";\r\nimport { RedlinePlatform } from \"./redlinePlatform\";\r\nimport { RText } from \"../Server/Model/Visuals/text\";\r\n\r\nexport class BarStyleManager implements IBarStyleManager {\r\n    bar: HTMLElement;\r\n    button: HTMLElement;\r\n    picker: HTMLInputElement;\r\n    inputs: NodeListOf<HTMLInputElement>;\r\n    chBoxes: NodeListOf<HTMLInputElement>;\r\n    inputButtons: NodeListOf<HTMLInputElement>;\r\n    redlinePlatform: RedlinePlatform\r\n    preview: HTMLElement;\r\n    pos: IPoint;\r\n    static Hide(barMg: IBarStyleManager) {\r\n        barMg.bar.style.display = \"none\";\r\n        barMg.button.style.backgroundColor = \"\";\r\n        barMg.button.style.border = \"\";\r\n    }\r\n    static ShowHide(barMg: IBarStyleManager, pos: IPoint): boolean {\r\n        let ret: boolean = false;\r\n        const hide = () => {\r\n            this.Hide(barMg);\r\n            ret = true;\r\n        }\r\n        barMg.button.style.border = BarStyleManager.borderStyle;\r\n        if (barMg.bar.style.display === \"none\") {\r\n            barMg.bar.style.display = \"\";\r\n            barMg.bar.style.left = (pos.x + 30) + \"px\";\r\n            barMg.bar.style.top = (pos.y - 55) + \"px\";\r\n            barMg.pos = pos;\r\n            barMg.redlinePlatform.allBars.forEach((e: IBarStyleManager) => {\r\n                if (e !== barMg) {\r\n                    e.button.style.backgroundColor = \"\";\r\n                    e.bar.style.display = \"none\";\r\n                    e.button.style.border = \"\";\r\n                }\r\n            });\r\n            barMg.setPreview();\r\n        } else {\r\n            hide();\r\n        }\r\n        return ret;\r\n    }\r\n    static borderStyle = \"solid 2px #3C8DBC\";\r\n\r\n    updateColor(): void {\r\n        if (this.picker) {\r\n            let col: string = updateColor(this.picker.value, this.redlinePlatform.svgArea.background);\r\n            if (col === \"#000\") {\r\n                col = \"#000000\";\r\n            } else if (col === \"#fff\") {\r\n                col = \"#ffffff\";\r\n            }\r\n            this.picker.parentElement.style.backgroundColor = col;\r\n            this.picker.value = col;\r\n        }\r\n    }\r\n    setPreview(): void {\r\n        if (this.preview) {\r\n            if (this.redlinePlatform.svgArea.background === backColor.black) {\r\n                this.preview.style.backgroundColor = \"#000\";\r\n            } else {\r\n                this.preview.style.backgroundColor = \"#fff\";\r\n            }\r\n            let stroke: string = updateColor(this.picker.value, this.redlinePlatform.svgArea.background);\r\n            let pth: any = this.preview.querySelector(\"path\");\r\n            pth.setAttribute(\"stroke\", stroke);\r\n            let q: string = \"stroke-width\";\r\n            let numInput: HTMLInputElement = this.bar.querySelector(`input[type='number'][key='${q}']`);\r\n            if (numInput) {\r\n                pth.setAttribute(q, numInput.value);\r\n            }\r\n            q = \"stroke-dasharray\";\r\n            numInput = this.bar.querySelector(`input[type='number'][key='${q}']`);\r\n            if (numInput) {\r\n                let dash: string = GeometryStyle.getLineStyle(parseInt(numInput.value, 10));\r\n                if (dash) {\r\n                    pth.setAttribute(q, dash);\r\n                } else {\r\n                    pth.removeAttribute(q);\r\n                }\r\n            }\r\n            q = \"stroke-opacity\";\r\n            numInput = this.bar.querySelector(`input[type='number'][key='${q}']`);\r\n            if (numInput) {\r\n                let val: number = 1 - parseFloat(numInput.value);\r\n                pth.setAttribute(q, val);\r\n            }\r\n        }\r\n        if (this.picker) {\r\n            this.updateColor();\r\n        }\r\n    }\r\n    modifiVisual(keyValue: any, c: IRedlineVisual) {\r\n        if (c) {\r\n            if (c.type === TypeConstant.redlinetext) {\r\n                const cTx:RText=c as any;\r\n                if(keyValue.key===\"stroke\"){\r\n                    cTx.tp.color=keyValue.value;\r\n                    cTx.draw();\r\n                } else if(keyValue.key===\"stroke-opacity\"){\r\n                    let opacity:number=Number.parseFloat(keyValue.value);\r\n                    if(opacity<1){\r\n                        cTx.tp.opacity=opacity;\r\n                    } else if(opacity===1){\r\n                        cTx.tp.opacity=undefined;\r\n                    }\r\n                    cTx.draw();\r\n                }\r\n            } else {\r\n                if (keyValue.key === \"stroke-dasharray\") {\r\n                    if (keyValue.value == 0) {\r\n                        c.style[keyValue.key] = undefined;\r\n                    } else {\r\n                        c.style[keyValue.key] = parseInt(keyValue.value);\r\n                    }\r\n                    c.setStyle();\r\n                    return;\r\n                }\r\n\r\n                if (keyValue.key.endsWith(\"-opacity\")) // (stroke|fill)-opacity\r\n                {\r\n                    let val: number = 1 - parseFloat(keyValue.value);\r\n                    val = Round(val, 1);\r\n                    if (val === 1) {\r\n                        delete c.style[keyValue.key]\r\n                    } else {\r\n                        c.style[keyValue.key] = val;\r\n                    }\r\n                    c.setStyle();\r\n                    return;\r\n                }\r\n                if (c.style[keyValue.key]) {\r\n                    c.style[keyValue.key] = keyValue.value;\r\n                    c.setStyle();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    modifiVisuals(keyValue: any): void {\r\n        let cc: IRedlineVisual[] = this.redlinePlatform.redline.curVisual ? [this.redlinePlatform.redline.curVisual] : [];\r\n        cc = cc.concat(this.redlinePlatform.redline.getSelected());\r\n        if (keyValue.key === \"fill\" || keyValue.key === \"stroke\") {\r\n            keyValue.value = updateColor(keyValue.value, this.redlinePlatform.svgArea.background);\r\n        }\r\n        if (keyValue.key.startsWith(\"fill\")) {\r\n            cc = cc.filter(f => f.fillable === true);\r\n            if (keyValue.key === \"fill-add\") {\r\n                cc.forEach(c => {\r\n                    if (!c.style.fill) {\r\n                        c.style.fill = \"none\";\r\n                    }\r\n                })\r\n                keyValue.key = \"fill\";\r\n            } else if (keyValue.key === \"fill-remove\") {\r\n                cc.forEach(c => {\r\n                    if (c.style.fill) {\r\n                        delete c.style.fill\r\n                    }\r\n                    if (c.style[\"fill-opacity\"]) {\r\n                        delete c.style[\"fill-opacity\"]\r\n                    }\r\n                    c.setStyle();\r\n                })\r\n                return;\r\n            }\r\n        }\r\n        cc.forEach(c => {\r\n            this.modifiVisual(keyValue, c);\r\n        });\r\n    }\r\n    showHide(pos: IPoint): void {\r\n        BarStyleManager.ShowHide(this, pos);\r\n    }\r\n\r\n    events(): void {\r\n        let headers: NodeListOf<Element> = this.bar.querySelectorAll(\"th[key]\");\r\n        headers.forEach((e: HTMLElement) => {\r\n            e.addEventListener(\"click\", (th: any) => {\r\n                const key: string = th.target.getAttribute(\"key\");\r\n                let top: HTMLElement = th.target.parentElement.parentElement;\r\n                if (top) {\r\n                    let input: HTMLInputElement = top.querySelector(`input[key=\"${key}\"]`);\r\n                    if (input) {\r\n                        this.modifiVisuals({\r\n                            key,\r\n                            value: input.value\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n\r\n        });\r\n        let pickerMethod = (e: HTMLInputElement): void => {\r\n            let key: string = e.getAttribute(\"key\");\r\n            let value: string = updateColor(e.value, this.redlinePlatform.svgArea.background);\r\n            this.updateColor();\r\n            if (key !== \"fill\") {\r\n                this.setPreview();\r\n            }\r\n            this.modifiVisuals({ key, value });\r\n        }\r\n        if (this.picker) {\r\n            this.picker.addEventListener(\"input\", (e: any) => {\r\n                pickerMethod(e.target);\r\n            });\r\n            this.picker.addEventListener(\"change\", (e: any) => {\r\n                pickerMethod(e.target);\r\n            });\r\n        }\r\n        if (this.inputs) {\r\n            this.inputs.forEach((e: HTMLInputElement) => {\r\n                e.addEventListener(\"change\", (e: any) => {\r\n                    this.setPreview();\r\n                    let el: HTMLInputElement = e.target;\r\n                    this.modifiVisuals({\r\n                        key: el.getAttribute(\"key\"),\r\n                        value: el.value\r\n                    });\r\n                });\r\n            });\r\n        }\r\n        // if (this.chBoxes) {\r\n        //     this.chBoxes.forEach((e: HTMLInputElement) => {\r\n        //         e.addEventListener(\"change\", () => {\r\n        //         });\r\n        //     });\r\n        // }\r\n        let applyRemoveFill = this.bar.querySelectorAll(\"td.rdl-style-apply[key^='fill-']\");\r\n        applyRemoveFill.forEach((e: HTMLElement) => {\r\n            e.addEventListener(\"click\", () => {\r\n                let key: string = e.getAttribute(\"key\");\r\n                let value: string = updateColor(this.picker.value, this.redlinePlatform.svgArea.background);\r\n                this.updateColor();\r\n                this.modifiVisuals({ key, value });\r\n            });\r\n        })\r\n    }\r\n    constructor(rp: RedlinePlatform, styleBarId: string, buttonKey: string) {\r\n        this.redlinePlatform = rp;\r\n        this.bar = rp.parent.querySelector(`div[id='${styleBarId}']`);\r\n        if (this.bar) {\r\n            this.bar.style.zIndex = \"100\";\r\n            this.button = rp.parent.querySelector(`div[id=\"rdlToolbar\"] button[f=\"${buttonKey}\"]`);\r\n            this.inputs = this.bar.querySelectorAll(\"input[type='number']\");\r\n            this.chBoxes = this.bar.querySelectorAll(\"input[type='checkbox']\");\r\n            this.picker = this.bar.querySelector(\"input[type='color']\");\r\n            this.preview = this.bar.querySelector(\"div[id='rdl-stroke-preview']\");\r\n            this.events();\r\n            this.setPreview();\r\n        } else {\r\n            console.log(`Missing bar ${styleBarId}`);\r\n        }\r\n    }\r\n}","import Redline from \"../redline\";\r\nimport { IRedlineVisual, ITuft, TypeConstant } from \"./interface\";\r\nimport { CreateSvgObject, RemoveChildren } from \"./helper\";\r\nimport { IBox, NodeName } from \"./interface\";\r\nimport { IPoint, Point } from \"./pointDefs\";\r\nimport { Transform } from \"./transform\";\r\nimport { BarStyleManager } from \"../ui/barStyleManager\";\r\n\r\nexport class SelBox {\r\n    target: HTMLElement;\r\n    box: IBox;\r\n    v: IRedlineVisual;\r\n    static destroy(v: IRedlineVisual) {\r\n        if (v.selBox) {\r\n            v.selBox.target.remove();\r\n            v.selBox = undefined;\r\n        }\r\n        //v.isEdited=false;\r\n       // v.redline.panZoom.run();\r\n    }\r\n    static create(v: IRedlineVisual) {\r\n       try{\r\n        if (v.selBox) {\r\n            SelBox.destroy(v);\r\n        } else {\r\n            v.selBox = new SelBox(v);\r\n        }\r\n       }catch{}\r\n    }\r\n    events() {\r\n        let r: Redline = this.v.redline;\r\n        let t: HTMLElement = this.target;\r\n        let cursor: string;\r\n        let moving: boolean = false;\r\n        let pressed: boolean = false;\r\n        let timer;\r\n        let g: HTMLElement;\r\n        let trl: IPoint;\r\n        let selection:IRedlineVisual[];\r\n        let dockDisplStyle:string;\r\n        const changePoints = async () => {\r\n            let dt:IPoint=new Point(\r\n                Transform.scale2Real(trl.x,this.v.trf.scl),\r\n                -Transform.scale2Real(trl.y,this.v.trf.scl)\r\n            )\r\n            selection.forEach((v:IRedlineVisual)=>{\r\n                v.move(dt);\r\n            })\r\n        }\r\n        const eventEnd = async (ev: PointerEvent) => {\r\n            ev.stopPropagation();\r\n            t.style.cursor = cursor;\r\n            this.v.redline.tuftsDock.style.display=dockDisplStyle;\r\n            pressed = false;\r\n            if (moving) {\r\n                await changePoints().finally(() => {\r\n                    this.v.redline.panZoom.run();\r\n                })\r\n            }\r\n            timer = setTimeout(() => {\r\n                moving = false;\r\n                timer = null;\r\n            }, 50);\r\n        }\r\n        this.target.addEventListener(\"pointermove\", (ev: PointerEvent) => {\r\n            if (pressed) {\r\n                ev.stopPropagation();\r\n                let x: number = ev.movementX;\r\n                let y: number = ev.movementY;\r\n                if (x !== 0 || y !== 0) {\r\n                    moving = true;\r\n                }\r\n                trl = trl.AddPoint(new Point(x, y));\r\n                g.setAttribute(\"transform\", `translate(${trl.toString()})`);\r\n            }\r\n        })\r\n        t.addEventListener(\"pointerdown\", (ev: PointerEvent) => {\r\n            ev.stopPropagation();\r\n            pressed = true;\r\n            trl = new Point();\r\n            cursor = t.style.cursor;\r\n            t.style.cursor = \"grabbing\";\r\n            dockDisplStyle=this.v.redline.tuftsDock.style.display;\r\n            this.v.redline.tuftsDock.style.display=\"none\";\r\n            g = r.selBoxDock.parentNode.insertBefore(CreateSvgObject(NodeName.g, { class: \"rdl-selected-box\" }), r.selBoxDock);\r\n            selection=r.rdl.visuals.filter(f => f.selBox);\r\n            selection.forEach(v => { g.append(v.elem); g.append(v.selBox.target) });\r\n        });\r\n        this.target.addEventListener(\"pointerup\", (ev: PointerEvent) => {\r\n            if (moving) {\r\n                eventEnd(ev);\r\n            } else {\r\n                SelBox.destroy(this.v);\r\n                if(this.v.isEdited){\r\n                    this.v.isEdited=false;\r\n                    if(this.v.type===TypeConstant.redlinetext){\r\n                        BarStyleManager.Hide(this.v.redline.textManager);\r\n                    }\r\n                }\r\n    \r\n            }\r\n        });\r\n        this.target.addEventListener(\"pointerleave\", (ev: PointerEvent) => {\r\n            eventEnd(ev);\r\n        })\r\n    }\r\n    init() {\r\n        let bufer: number = this.v.redline.buffer;\r\n        let origin: IPoint = this.v.range.origin.Clone();\r\n        let x: number = Math.round(origin.x - bufer / 2);\r\n        let y: number = Math.round(origin.y - bufer / 2);\r\n        let width: number = Math.round(this.v.range.width + bufer);\r\n        let height: number = Math.round(this.v.range.height + bufer);\r\n\r\n        let style: string = \"stroke:red;stroke-width:2;stroke-dasharray:5,5;stroke-opacity:0.5;fill-opacity:0.05;fill:green;cursor:grab\";\r\n        this.target = CreateSvgObject(NodeName.rect, {\r\n            _id: this.v._id,\r\n            width, height, x, y,\r\n            style\r\n        })\r\n        this.v.redline.selBoxDock.append(this.target);\r\n        this.events();\r\n        if(this.v.isEdited){\r\n            RemoveChildren( this.v.redline.tuftsDock);\r\n            this.v.redline.tuftsDock.style.display=\"\";\r\n            this.v.edit();\r\n        }\r\n    }\r\n    constructor(v: IRedlineVisual) {\r\n        this.v = v;\r\n        this.init();\r\n    }\r\n}","export var top = 'top';\nexport var bottom = 'bottom';\nexport var right = 'right';\nexport var left = 'left';\nexport var auto = 'auto';\nexport var basePlacements = [top, bottom, right, left];\nexport var start = 'start';\nexport var end = 'end';\nexport var clippingParents = 'clippingParents';\nexport var viewport = 'viewport';\nexport var popper = 'popper';\nexport var reference = 'reference';\nexport var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n}, []);\nexport var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n}, []); // modifiers that need to read the DOM\n\nexport var beforeRead = 'beforeRead';\nexport var read = 'read';\nexport var afterRead = 'afterRead'; // pure-logic modifiers\n\nexport var beforeMain = 'beforeMain';\nexport var main = 'main';\nexport var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nexport var beforeWrite = 'beforeWrite';\nexport var write = 'write';\nexport var afterWrite = 'afterWrite';\nexport var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];","export default function getNodeName(element) {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}","export default function getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (node.toString() !== '[object Window]') {\n    var ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}","import getWindow from \"./getWindow.js\";\n\nfunction isElement(node) {\n  var OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\nfunction isHTMLElement(node) {\n  var OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\nfunction isShadowRoot(node) {\n  // IE 11 has no ShadowRoot\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  var OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nexport { isElement, isHTMLElement, isShadowRoot };","import getNodeName from \"../dom-utils/getNodeName.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    } // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0'\n    },\n    arrow: {\n      position: 'absolute'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = '';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect: effect,\n  requires: ['computeStyles']\n};","import { auto } from \"../enums.js\";\nexport default function getBasePlacement(placement) {\n  return placement.split('-')[0];\n}","export var max = Math.max;\nexport var min = Math.min;\nexport var round = Math.round;","import { isHTMLElement } from \"./instanceOf.js\";\nimport { round } from \"../utils/math.js\";\nexport default function getBoundingClientRect(element, includeScale) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  var rect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1;\n\n  if (isHTMLElement(element) && includeScale) {\n    var offsetHeight = element.offsetHeight;\n    var offsetWidth = element.offsetWidth; // Do not attempt to divide by 0, otherwise we get `Infinity` as scale\n    // Fallback to 1 in case both values are `0`\n\n    if (offsetWidth > 0) {\n      scaleX = round(rect.width) / offsetWidth || 1;\n    }\n\n    if (offsetHeight > 0) {\n      scaleY = round(rect.height) / offsetHeight || 1;\n    }\n  }\n\n  return {\n    width: rect.width / scaleX,\n    height: rect.height / scaleY,\n    top: rect.top / scaleY,\n    right: rect.right / scaleX,\n    bottom: rect.bottom / scaleY,\n    left: rect.left / scaleX,\n    x: rect.left / scaleX,\n    y: rect.top / scaleY\n  };\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\"; // Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\n\nexport default function getLayoutRect(element) {\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}","import { isShadowRoot } from \"./instanceOf.js\";\nexport default function contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}","import getWindow from \"./getWindow.js\";\nexport default function getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}","import getNodeName from \"./getNodeName.js\";\nexport default function isTableElement(element) {\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n}","import { isElement } from \"./instanceOf.js\";\nexport default function getDocumentElement(element) {\n  // $FlowFixMe[incompatible-return]: assume body is always available\n  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]\n  element.document) || window.document).documentElement;\n}","import getNodeName from \"./getNodeName.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport { isShadowRoot } from \"./instanceOf.js\";\nexport default function getParentNode(element) {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ( // DOM Element detected\n    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n\n  );\n}","import getWindow from \"./getWindow.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isHTMLElement, isShadowRoot } from \"./instanceOf.js\";\nimport isTableElement from \"./isTableElement.js\";\nimport getParentNode from \"./getParentNode.js\";\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;\n  var isIE = navigator.userAgent.indexOf('Trident') !== -1;\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    var elementCss = getComputedStyle(element);\n\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  var currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nexport default function getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}","export default function getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}","import { max as mathMax, min as mathMin } from \"./math.js\";\nexport function within(min, value, max) {\n  return mathMax(min, mathMin(value, max));\n}\nexport function withinMaxClamp(min, value, max) {\n  var v = within(min, value, max);\n  return v > max ? max : v;\n}","export default function getFreshSideObject() {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n}","import getFreshSideObject from \"./getFreshSideObject.js\";\nexport default function mergePaddingObject(paddingObject) {\n  return Object.assign({}, getFreshSideObject(), paddingObject);\n}","export default function expandToHashMap(value, keys) {\n  return keys.reduce(function (hashMap, key) {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport contains from \"../dom-utils/contains.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport { within } from \"../utils/within.js\";\nimport mergePaddingObject from \"../utils/mergePaddingObject.js\";\nimport expandToHashMap from \"../utils/expandToHashMap.js\";\nimport { left, right, basePlacements, top, bottom } from \"../enums.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar toPaddingObject = function toPaddingObject(padding, state) {\n  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : padding;\n  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n};\n\nfunction arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name,\n      options = _ref.options;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = toPaddingObject(options.padding, state);\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === 'y' ? top : left;\n  var maxProp = axis === 'y' ? bottom : right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!isHTMLElement(arrowElement)) {\n      console.error(['Popper: \"arrow\" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '));\n    }\n  }\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(['Popper: \"arrow\" modifier\\'s `element` must be a child of the popper', 'element.'].join(' '));\n    }\n\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect: effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n};","export default function getVariation(placement) {\n  return placement.split('-')[1];\n}","import { top, left, right, bottom, end } from \"../enums.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getWindow from \"../dom-utils/getWindow.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getComputedStyle from \"../dom-utils/getComputedStyle.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport { round } from \"../utils/math.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsetsByDPR(_ref) {\n  var x = _ref.x,\n      y = _ref.y;\n  var win = window;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: round(x * dpr) / dpr || 0,\n    y: round(y * dpr) / dpr || 0\n  };\n}\n\nexport function mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      variation = _ref2.variation,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive,\n      roundOffsets = _ref2.roundOffsets,\n      isFixed = _ref2.isFixed;\n  var _offsets$x = offsets.x,\n      x = _offsets$x === void 0 ? 0 : _offsets$x,\n      _offsets$y = offsets.y,\n      y = _offsets$y === void 0 ? 0 : _offsets$y;\n\n  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref3.x;\n  y = _ref3.y;\n  var hasX = offsets.hasOwnProperty('x');\n  var hasY = offsets.hasOwnProperty('y');\n  var sideX = left;\n  var sideY = top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = getOffsetParent(popper);\n    var heightProp = 'clientHeight';\n    var widthProp = 'clientWidth';\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n\n      if (getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {\n        heightProp = 'scrollHeight';\n        widthProp = 'scrollWidth';\n      }\n    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n\n    offsetParent = offsetParent;\n\n    if (placement === top || (placement === left || placement === right) && variation === end) {\n      sideY = bottom;\n      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]\n      offsetParent[heightProp];\n      y -= offsetY - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === left || (placement === top || placement === bottom) && variation === end) {\n      sideX = right;\n      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]\n      offsetParent[widthProp];\n      x -= offsetX - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref4.x;\n  y = _ref4.y;\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n  }\n\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n}\n\nfunction computeStyles(_ref5) {\n  var state = _ref5.state,\n      options = _ref5.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\n      _options$roundOffsets = options.roundOffsets,\n      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var transitionProperty = getComputedStyle(state.elements.popper).transitionProperty || '';\n\n    if (adaptive && ['transform', 'top', 'right', 'bottom', 'left'].some(function (property) {\n      return transitionProperty.indexOf(property) >= 0;\n    })) {\n      console.warn(['Popper: Detected CSS transitions on at least one of the following', 'CSS properties: \"transform\", \"top\", \"right\", \"bottom\", \"left\".', '\\n\\n', 'Disable the \"computeStyles\" modifier\\'s `adaptive` option to allow', 'for smooth transitions, or remove these properties from the CSS', 'transition declaration on the popper element if only transitioning', 'opacity or background-color for example.', '\\n\\n', 'We recommend using the popper element as a wrapper around an inner', 'element that can have any CSS property transitioned for animations.'].join(' '));\n    }\n  }\n\n  var commonStyles = {\n    placement: getBasePlacement(state.placement),\n    variation: getVariation(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration,\n    isFixed: state.options.strategy === 'fixed'\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.arrow,\n      position: 'absolute',\n      adaptive: false,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-placement': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {}\n};","import getWindow from \"../dom-utils/getWindow.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar passive = {\n  passive: true\n};\n\nfunction effect(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = getWindow(state.elements.popper);\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: function fn() {},\n  effect: effect,\n  data: {}\n};","var hash = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nexport default function getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}","var hash = {\n  start: 'end',\n  end: 'start'\n};\nexport default function getOppositeVariationPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return hash[matched];\n  });\n}","import getWindow from \"./getWindow.js\";\nexport default function getWindowScroll(node) {\n  var win = getWindow(node);\n  var scrollLeft = win.pageXOffset;\n  var scrollTop = win.pageYOffset;\n  return {\n    scrollLeft: scrollLeft,\n    scrollTop: scrollTop\n  };\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nexport default function getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}","import getWindow from \"./getWindow.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nexport default function getViewportRect(element) {\n  var win = getWindow(element);\n  var html = getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper\n  // can be obscured underneath it.\n  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even\n  // if it isn't open, so if this isn't available, the popper will be detected\n  // to overflow the bottom of the screen too early.\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)\n    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding\n    // errors due to floating point numbers, so we need to check precision.\n    // Safari returns a number <= 0, usually < -1 when pinch-zoomed\n    // Feature detection fails in mobile emulation mode in Chrome.\n    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <\n    // 0.001\n    // Fallback here: \"Not Safari\" userAgent\n\n    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + getWindowScrollBarX(element),\n    y: y\n  };\n}","import getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nimport { max } from \"../utils/math.js\"; // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nexport default function getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  var html = getDocumentElement(element);\n  var winScroll = getWindowScroll(element);\n  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}","import getComputedStyle from \"./getComputedStyle.js\";\nexport default function isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = getComputedStyle(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}","import getParentNode from \"./getParentNode.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nexport default function getScrollParent(node) {\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}","import getScrollParent from \"./getScrollParent.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getWindow from \"./getWindow.js\";\nimport isScrollParent from \"./isScrollParent.js\";\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/\n\nexport default function listScrollParents(element, list) {\n  var _element$ownerDocumen;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollParent = getScrollParent(element);\n  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n  var win = getWindow(scrollParent);\n  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  var updatedList = list.concat(target);\n  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n  updatedList.concat(listScrollParents(getParentNode(target)));\n}","export default function rectToClientRect(rect) {\n  return Object.assign({}, rect, {\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}","import { viewport } from \"../enums.js\";\nimport getViewportRect from \"./getViewportRect.js\";\nimport getDocumentRect from \"./getDocumentRect.js\";\nimport listScrollParents from \"./listScrollParents.js\";\nimport getOffsetParent from \"./getOffsetParent.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isElement, isHTMLElement } from \"./instanceOf.js\";\nimport getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport contains from \"./contains.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport rectToClientRect from \"../utils/rectToClientRect.js\";\nimport { max, min } from \"../utils/math.js\";\n\nfunction getInnerBoundingClientRect(element) {\n  var rect = getBoundingClientRect(element);\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\n\nfunction getClientRectFromMixedType(element, clippingParent) {\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = listScrollParents(getParentNode(element));\n  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nexport default function getClippingRect(element, boundary, rootBoundary) {\n  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}","import getBasePlacement from \"./getBasePlacement.js\";\nimport getVariation from \"./getVariation.js\";\nimport getMainAxisFromPlacement from \"./getMainAxisFromPlacement.js\";\nimport { top, right, bottom, left, start, end } from \"../enums.js\";\nexport default function computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? getBasePlacement(placement) : null;\n  var variation = placement ? getVariation(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n\n      case end:\n        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n\n      default:\n    }\n  }\n\n  return offsets;\n}","import getClippingRect from \"../dom-utils/getClippingRect.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getBoundingClientRect from \"../dom-utils/getBoundingClientRect.js\";\nimport computeOffsets from \"./computeOffsets.js\";\nimport rectToClientRect from \"./rectToClientRect.js\";\nimport { clippingParents, reference, popper, bottom, top, right, basePlacements, viewport } from \"../enums.js\";\nimport { isElement } from \"../dom-utils/instanceOf.js\";\nimport mergePaddingObject from \"./mergePaddingObject.js\";\nimport expandToHashMap from \"./expandToHashMap.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport default function detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n  var altContext = elementContext === popper ? reference : popper;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);\n  var referenceClientRect = getBoundingClientRect(state.elements.reference);\n  var popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\n  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}","import getVariation from \"./getVariation.js\";\nimport { variationPlacements, basePlacements, placements as allPlacements } from \"../enums.js\";\nimport detectOverflow from \"./detectOverflow.js\";\nimport getBasePlacement from \"./getBasePlacement.js\";\nexport default function computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? allPlacements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements;\n  var allowedPlacements = placements.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, \"auto\" cannot be used to allow \"bottom-start\".', 'Use \"auto-start\" instead.'].join(' '));\n    }\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}","import getOppositePlacement from \"../utils/getOppositePlacement.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getOppositeVariationPlacement from \"../utils/getOppositeVariationPlacement.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport computeAutoPlacement from \"../utils/computeAutoPlacement.js\";\nimport { bottom, top, start, right, left, auto } from \"../enums.js\";\nimport getVariation from \"../utils/getVariation.js\"; // eslint-disable-next-line import/no-unused-modules\n\nfunction getExpandedFallbackPlacements(placement) {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = getBasePlacement(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = getBasePlacement(placement);\n\n    var isStartVariation = getVariation(placement) === start;\n    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? 'width' : 'height';\n    var overflow = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    var altVariationSide = getOppositePlacement(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return \"break\";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === \"break\") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: {\n    _skip: false\n  }\n};","import { top, bottom, left, right } from \"../enums.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [top, right, bottom, left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n};","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport { top, left, right, placements } from \"../enums.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport function distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n};","import computeOffsets from \"../utils/computeOffsets.js\";\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n};","export default function getAltAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}","import { top, left, right, bottom, start } from \"../enums.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport getAltAxis from \"../utils/getAltAxis.js\";\nimport { within, withinMaxClamp } from \"../utils/within.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport getFreshSideObject from \"../utils/getFreshSideObject.js\";\nimport { min as mathMin, max as mathMax } from \"../utils/math.js\";\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = getBasePlacement(state.placement);\n  var variation = getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\n  var altAxis = getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {\n    mainAxis: tetherOffsetValue,\n    altAxis: tetherOffsetValue\n  } : Object.assign({\n    mainAxis: 0,\n    altAxis: 0\n  }, tetherOffsetValue);\n  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis) {\n    var _offsetModifierState$;\n\n    var mainSide = mainAxis === 'y' ? top : left;\n    var altSide = mainAxis === 'y' ? bottom : right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min = offset + overflow[mainSide];\n    var max = offset - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = offset + maxOffset - offsetModifierValue;\n    var preventedOffset = within(tether ? mathMin(min, tetherMin) : min, offset, tether ? mathMax(max, tetherMax) : max);\n    popperOffsets[mainAxis] = preventedOffset;\n    data[mainAxis] = preventedOffset - offset;\n  }\n\n  if (checkAltAxis) {\n    var _offsetModifierState$2;\n\n    var _mainSide = mainAxis === 'x' ? top : left;\n\n    var _altSide = mainAxis === 'x' ? bottom : right;\n\n    var _offset = popperOffsets[altAxis];\n\n    var _len = altAxis === 'y' ? 'height' : 'width';\n\n    var _min = _offset + overflow[_mainSide];\n\n    var _max = _offset - overflow[_altSide];\n\n    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;\n\n    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n\n    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n\n    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n\n    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n\n    popperOffsets[altAxis] = _preventedOffset;\n    data[altAxis] = _preventedOffset - _offset;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n};","export default function getHTMLElementScroll(element) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}","import getWindowScroll from \"./getWindowScroll.js\";\nimport getWindow from \"./getWindow.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getHTMLElementScroll from \"./getHTMLElementScroll.js\";\nexport default function getNodeScroll(node) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getNodeScroll from \"./getNodeScroll.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport { round } from \"../utils/math.js\";\n\nfunction isElementScaled(element) {\n  var rect = element.getBoundingClientRect();\n  var scaleX = round(rect.width) / element.offsetWidth || 1;\n  var scaleY = round(rect.height) / element.offsetHeight || 1;\n  return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\n\nexport default function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent, true);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}","import { modifierPhases } from \"../enums.js\"; // source: https://stackoverflow.com/questions/49875255\n\nfunction order(modifiers) {\n  var map = new Map();\n  var visited = new Set();\n  var result = [];\n  modifiers.forEach(function (modifier) {\n    map.set(modifier.name, modifier);\n  }); // On visiting object, check for its dependencies and visit them recursively\n\n  function sort(modifier) {\n    visited.add(modifier.name);\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n    requires.forEach(function (dep) {\n      if (!visited.has(dep)) {\n        var depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n\n  modifiers.forEach(function (modifier) {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n\nexport default function orderModifiers(modifiers) {\n  // order based on dependencies\n  var orderedModifiers = order(modifiers); // order based on phase\n\n  return modifierPhases.reduce(function (acc, phase) {\n    return acc.concat(orderedModifiers.filter(function (modifier) {\n      return modifier.phase === phase;\n    }));\n  }, []);\n}","export default function debounce(fn) {\n  var pending;\n  return function () {\n    if (!pending) {\n      pending = new Promise(function (resolve) {\n        Promise.resolve().then(function () {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}","export default function mergeByName(modifiers) {\n  var merged = modifiers.reduce(function (merged, current) {\n    var existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign({}, existing, current, {\n      options: Object.assign({}, existing.options, current.options),\n      data: Object.assign({}, existing.data, current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(function (key) {\n    return merged[key];\n  });\n}","import getCompositeRect from \"./dom-utils/getCompositeRect.js\";\nimport getLayoutRect from \"./dom-utils/getLayoutRect.js\";\nimport listScrollParents from \"./dom-utils/listScrollParents.js\";\nimport getOffsetParent from \"./dom-utils/getOffsetParent.js\";\nimport getComputedStyle from \"./dom-utils/getComputedStyle.js\";\nimport orderModifiers from \"./utils/orderModifiers.js\";\nimport debounce from \"./utils/debounce.js\";\nimport validateModifiers from \"./utils/validateModifiers.js\";\nimport uniqueBy from \"./utils/uniqueBy.js\";\nimport getBasePlacement from \"./utils/getBasePlacement.js\";\nimport mergeByName from \"./utils/mergeByName.js\";\nimport detectOverflow from \"./utils/detectOverflow.js\";\nimport { isElement } from \"./dom-utils/instanceOf.js\";\nimport { auto } from \"./enums.js\";\nvar INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';\nvar INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';\nvar DEFAULT_OPTIONS = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute'\n};\n\nfunction areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === 'function');\n  });\n}\n\nexport function popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(setOptionsAction) {\n        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;\n        cleanupModifierEffects();\n        state.options = Object.assign({}, defaultOptions, state.options, options);\n        state.scrollParents = {\n          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n          popper: listScrollParents(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        }); // Validate the provided modifiers so that the consumer will get warned\n        // if one of the modifiers is invalid for any reason\n\n        if (process.env.NODE_ENV !== \"production\") {\n          var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function (_ref) {\n            var name = _ref.name;\n            return name;\n          });\n          validateModifiers(modifiers);\n\n          if (getBasePlacement(state.options.placement) === auto) {\n            var flipModifier = state.orderedModifiers.find(function (_ref2) {\n              var name = _ref2.name;\n              return name === 'flip';\n            });\n\n            if (!flipModifier) {\n              console.error(['Popper: \"auto\" placements require the \"flip\" modifier be', 'present and enabled to work.'].join(' '));\n            }\n          }\n\n          var _getComputedStyle = getComputedStyle(popper),\n              marginTop = _getComputedStyle.marginTop,\n              marginRight = _getComputedStyle.marginRight,\n              marginBottom = _getComputedStyle.marginBottom,\n              marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can\n          // cause bugs with positioning, so we'll warn the consumer\n\n\n          if ([marginTop, marginRight, marginBottom, marginLeft].some(function (margin) {\n            return parseFloat(margin);\n          })) {\n            console.warn(['Popper: CSS \"margin\" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '));\n          }\n        }\n\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!areValidElements(reference, popper)) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(INVALID_ELEMENT_ERROR);\n          }\n\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),\n          popper: getLayoutRect(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n        var __debug_loops__ = 0;\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (process.env.NODE_ENV !== \"production\") {\n            __debug_loops__ += 1;\n\n            if (__debug_loops__ > 100) {\n              console.error(INFINITE_LOOP_ERROR);\n              break;\n            }\n          }\n\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === 'function') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(INVALID_ELEMENT_ERROR);\n      }\n\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref3) {\n        var name = _ref3.name,\n            _ref3$options = _ref3.options,\n            options = _ref3$options === void 0 ? {} : _ref3$options,\n            effect = _ref3.effect;\n\n        if (typeof effect === 'function') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\nexport var createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules\n\nexport { detectOverflow };","import { popperGenerator, detectOverflow } from \"./createPopper.js\";\nimport eventListeners from \"./modifiers/eventListeners.js\";\nimport popperOffsets from \"./modifiers/popperOffsets.js\";\nimport computeStyles from \"./modifiers/computeStyles.js\";\nimport applyStyles from \"./modifiers/applyStyles.js\";\nimport offset from \"./modifiers/offset.js\";\nimport flip from \"./modifiers/flip.js\";\nimport preventOverflow from \"./modifiers/preventOverflow.js\";\nimport arrow from \"./modifiers/arrow.js\";\nimport hide from \"./modifiers/hide.js\";\nvar defaultModifiers = [eventListeners, popperOffsets, computeStyles, applyStyles, offset, flip, preventOverflow, arrow, hide];\nvar createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper, popperGenerator, defaultModifiers, detectOverflow }; // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper as createPopperLite } from \"./popper-lite.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport * from \"./modifiers/index.js\";","/**!\n* tippy.js v6.3.7\n* (c) 2017-2021 atomiks\n* MIT License\n*/\nimport { createPopper, applyStyles } from '@popperjs/core';\n\nvar ROUND_ARROW = '<svg width=\"16\" height=\"6\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 6s1.796-.013 4.67-3.615C5.851.9 6.93.006 8 0c1.07-.006 2.148.887 3.343 2.385C14.233 6.005 16 6 16 6H0z\"></svg>';\nvar BOX_CLASS = \"tippy-box\";\nvar CONTENT_CLASS = \"tippy-content\";\nvar BACKDROP_CLASS = \"tippy-backdrop\";\nvar ARROW_CLASS = \"tippy-arrow\";\nvar SVG_ARROW_CLASS = \"tippy-svg-arrow\";\nvar TOUCH_OPTIONS = {\n  passive: true,\n  capture: true\n};\nvar TIPPY_DEFAULT_APPEND_TO = function TIPPY_DEFAULT_APPEND_TO() {\n  return document.body;\n};\n\nfunction hasOwnProperty(obj, key) {\n  return {}.hasOwnProperty.call(obj, key);\n}\nfunction getValueAtIndexOrReturn(value, index, defaultValue) {\n  if (Array.isArray(value)) {\n    var v = value[index];\n    return v == null ? Array.isArray(defaultValue) ? defaultValue[index] : defaultValue : v;\n  }\n\n  return value;\n}\nfunction isType(value, type) {\n  var str = {}.toString.call(value);\n  return str.indexOf('[object') === 0 && str.indexOf(type + \"]\") > -1;\n}\nfunction invokeWithArgsOrReturn(value, args) {\n  return typeof value === 'function' ? value.apply(void 0, args) : value;\n}\nfunction debounce(fn, ms) {\n  // Avoid wrapping in `setTimeout` if ms is 0 anyway\n  if (ms === 0) {\n    return fn;\n  }\n\n  var timeout;\n  return function (arg) {\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      fn(arg);\n    }, ms);\n  };\n}\nfunction removeProperties(obj, keys) {\n  var clone = Object.assign({}, obj);\n  keys.forEach(function (key) {\n    delete clone[key];\n  });\n  return clone;\n}\nfunction splitBySpaces(value) {\n  return value.split(/\\s+/).filter(Boolean);\n}\nfunction normalizeToArray(value) {\n  return [].concat(value);\n}\nfunction pushIfUnique(arr, value) {\n  if (arr.indexOf(value) === -1) {\n    arr.push(value);\n  }\n}\nfunction unique(arr) {\n  return arr.filter(function (item, index) {\n    return arr.indexOf(item) === index;\n  });\n}\nfunction getBasePlacement(placement) {\n  return placement.split('-')[0];\n}\nfunction arrayFrom(value) {\n  return [].slice.call(value);\n}\nfunction removeUndefinedProps(obj) {\n  return Object.keys(obj).reduce(function (acc, key) {\n    if (obj[key] !== undefined) {\n      acc[key] = obj[key];\n    }\n\n    return acc;\n  }, {});\n}\n\nfunction div() {\n  return document.createElement('div');\n}\nfunction isElement(value) {\n  return ['Element', 'Fragment'].some(function (type) {\n    return isType(value, type);\n  });\n}\nfunction isNodeList(value) {\n  return isType(value, 'NodeList');\n}\nfunction isMouseEvent(value) {\n  return isType(value, 'MouseEvent');\n}\nfunction isReferenceElement(value) {\n  return !!(value && value._tippy && value._tippy.reference === value);\n}\nfunction getArrayOfElements(value) {\n  if (isElement(value)) {\n    return [value];\n  }\n\n  if (isNodeList(value)) {\n    return arrayFrom(value);\n  }\n\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  return arrayFrom(document.querySelectorAll(value));\n}\nfunction setTransitionDuration(els, value) {\n  els.forEach(function (el) {\n    if (el) {\n      el.style.transitionDuration = value + \"ms\";\n    }\n  });\n}\nfunction setVisibilityState(els, state) {\n  els.forEach(function (el) {\n    if (el) {\n      el.setAttribute('data-state', state);\n    }\n  });\n}\nfunction getOwnerDocument(elementOrElements) {\n  var _element$ownerDocumen;\n\n  var _normalizeToArray = normalizeToArray(elementOrElements),\n      element = _normalizeToArray[0]; // Elements created via a <template> have an ownerDocument with no reference to the body\n\n\n  return element != null && (_element$ownerDocumen = element.ownerDocument) != null && _element$ownerDocumen.body ? element.ownerDocument : document;\n}\nfunction isCursorOutsideInteractiveBorder(popperTreeData, event) {\n  var clientX = event.clientX,\n      clientY = event.clientY;\n  return popperTreeData.every(function (_ref) {\n    var popperRect = _ref.popperRect,\n        popperState = _ref.popperState,\n        props = _ref.props;\n    var interactiveBorder = props.interactiveBorder;\n    var basePlacement = getBasePlacement(popperState.placement);\n    var offsetData = popperState.modifiersData.offset;\n\n    if (!offsetData) {\n      return true;\n    }\n\n    var topDistance = basePlacement === 'bottom' ? offsetData.top.y : 0;\n    var bottomDistance = basePlacement === 'top' ? offsetData.bottom.y : 0;\n    var leftDistance = basePlacement === 'right' ? offsetData.left.x : 0;\n    var rightDistance = basePlacement === 'left' ? offsetData.right.x : 0;\n    var exceedsTop = popperRect.top - clientY + topDistance > interactiveBorder;\n    var exceedsBottom = clientY - popperRect.bottom - bottomDistance > interactiveBorder;\n    var exceedsLeft = popperRect.left - clientX + leftDistance > interactiveBorder;\n    var exceedsRight = clientX - popperRect.right - rightDistance > interactiveBorder;\n    return exceedsTop || exceedsBottom || exceedsLeft || exceedsRight;\n  });\n}\nfunction updateTransitionEndListener(box, action, listener) {\n  var method = action + \"EventListener\"; // some browsers apparently support `transition` (unprefixed) but only fire\n  // `webkitTransitionEnd`...\n\n  ['transitionend', 'webkitTransitionEnd'].forEach(function (event) {\n    box[method](event, listener);\n  });\n}\n/**\n * Compared to xxx.contains, this function works for dom structures with shadow\n * dom\n */\n\nfunction actualContains(parent, child) {\n  var target = child;\n\n  while (target) {\n    var _target$getRootNode;\n\n    if (parent.contains(target)) {\n      return true;\n    }\n\n    target = target.getRootNode == null ? void 0 : (_target$getRootNode = target.getRootNode()) == null ? void 0 : _target$getRootNode.host;\n  }\n\n  return false;\n}\n\nvar currentInput = {\n  isTouch: false\n};\nvar lastMouseMoveTime = 0;\n/**\n * When a `touchstart` event is fired, it's assumed the user is using touch\n * input. We'll bind a `mousemove` event listener to listen for mouse input in\n * the future. This way, the `isTouch` property is fully dynamic and will handle\n * hybrid devices that use a mix of touch + mouse input.\n */\n\nfunction onDocumentTouchStart() {\n  if (currentInput.isTouch) {\n    return;\n  }\n\n  currentInput.isTouch = true;\n\n  if (window.performance) {\n    document.addEventListener('mousemove', onDocumentMouseMove);\n  }\n}\n/**\n * When two `mousemove` event are fired consecutively within 20ms, it's assumed\n * the user is using mouse input again. `mousemove` can fire on touch devices as\n * well, but very rarely that quickly.\n */\n\nfunction onDocumentMouseMove() {\n  var now = performance.now();\n\n  if (now - lastMouseMoveTime < 20) {\n    currentInput.isTouch = false;\n    document.removeEventListener('mousemove', onDocumentMouseMove);\n  }\n\n  lastMouseMoveTime = now;\n}\n/**\n * When an element is in focus and has a tippy, leaving the tab/window and\n * returning causes it to show again. For mouse users this is unexpected, but\n * for keyboard use it makes sense.\n * TODO: find a better technique to solve this problem\n */\n\nfunction onWindowBlur() {\n  var activeElement = document.activeElement;\n\n  if (isReferenceElement(activeElement)) {\n    var instance = activeElement._tippy;\n\n    if (activeElement.blur && !instance.state.isVisible) {\n      activeElement.blur();\n    }\n  }\n}\nfunction bindGlobalEventListeners() {\n  document.addEventListener('touchstart', onDocumentTouchStart, TOUCH_OPTIONS);\n  window.addEventListener('blur', onWindowBlur);\n}\n\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\nvar isIE11 = isBrowser ? // @ts-ignore\n!!window.msCrypto : false;\n\nfunction createMemoryLeakWarning(method) {\n  var txt = method === 'destroy' ? 'n already-' : ' ';\n  return [method + \"() was called on a\" + txt + \"destroyed instance. This is a no-op but\", 'indicates a potential memory leak.'].join(' ');\n}\nfunction clean(value) {\n  var spacesAndTabs = /[ \\t]{2,}/g;\n  var lineStartWithSpaces = /^[ \\t]*/gm;\n  return value.replace(spacesAndTabs, ' ').replace(lineStartWithSpaces, '').trim();\n}\n\nfunction getDevMessage(message) {\n  return clean(\"\\n  %ctippy.js\\n\\n  %c\" + clean(message) + \"\\n\\n  %c\\uD83D\\uDC77\\u200D This is a development-only message. It will be removed in production.\\n  \");\n}\n\nfunction getFormattedMessage(message) {\n  return [getDevMessage(message), // title\n  'color: #00C584; font-size: 1.3em; font-weight: bold;', // message\n  'line-height: 1.5', // footer\n  'color: #a6a095;'];\n} // Assume warnings and errors never have the same message\n\nvar visitedMessages;\n\nif (process.env.NODE_ENV !== \"production\") {\n  resetVisitedMessages();\n}\n\nfunction resetVisitedMessages() {\n  visitedMessages = new Set();\n}\nfunction warnWhen(condition, message) {\n  if (condition && !visitedMessages.has(message)) {\n    var _console;\n\n    visitedMessages.add(message);\n\n    (_console = console).warn.apply(_console, getFormattedMessage(message));\n  }\n}\nfunction errorWhen(condition, message) {\n  if (condition && !visitedMessages.has(message)) {\n    var _console2;\n\n    visitedMessages.add(message);\n\n    (_console2 = console).error.apply(_console2, getFormattedMessage(message));\n  }\n}\nfunction validateTargets(targets) {\n  var didPassFalsyValue = !targets;\n  var didPassPlainObject = Object.prototype.toString.call(targets) === '[object Object]' && !targets.addEventListener;\n  errorWhen(didPassFalsyValue, ['tippy() was passed', '`' + String(targets) + '`', 'as its targets (first) argument. Valid types are: String, Element,', 'Element[], or NodeList.'].join(' '));\n  errorWhen(didPassPlainObject, ['tippy() was passed a plain object which is not supported as an argument', 'for virtual positioning. Use props.getReferenceClientRect instead.'].join(' '));\n}\n\nvar pluginProps = {\n  animateFill: false,\n  followCursor: false,\n  inlinePositioning: false,\n  sticky: false\n};\nvar renderProps = {\n  allowHTML: false,\n  animation: 'fade',\n  arrow: true,\n  content: '',\n  inertia: false,\n  maxWidth: 350,\n  role: 'tooltip',\n  theme: '',\n  zIndex: 9999\n};\nvar defaultProps = Object.assign({\n  appendTo: TIPPY_DEFAULT_APPEND_TO,\n  aria: {\n    content: 'auto',\n    expanded: 'auto'\n  },\n  delay: 0,\n  duration: [300, 250],\n  getReferenceClientRect: null,\n  hideOnClick: true,\n  ignoreAttributes: false,\n  interactive: false,\n  interactiveBorder: 2,\n  interactiveDebounce: 0,\n  moveTransition: '',\n  offset: [0, 10],\n  onAfterUpdate: function onAfterUpdate() {},\n  onBeforeUpdate: function onBeforeUpdate() {},\n  onCreate: function onCreate() {},\n  onDestroy: function onDestroy() {},\n  onHidden: function onHidden() {},\n  onHide: function onHide() {},\n  onMount: function onMount() {},\n  onShow: function onShow() {},\n  onShown: function onShown() {},\n  onTrigger: function onTrigger() {},\n  onUntrigger: function onUntrigger() {},\n  onClickOutside: function onClickOutside() {},\n  placement: 'top',\n  plugins: [],\n  popperOptions: {},\n  render: null,\n  showOnCreate: false,\n  touch: true,\n  trigger: 'mouseenter focus',\n  triggerTarget: null\n}, pluginProps, renderProps);\nvar defaultKeys = Object.keys(defaultProps);\nvar setDefaultProps = function setDefaultProps(partialProps) {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    validateProps(partialProps, []);\n  }\n\n  var keys = Object.keys(partialProps);\n  keys.forEach(function (key) {\n    defaultProps[key] = partialProps[key];\n  });\n};\nfunction getExtendedPassedProps(passedProps) {\n  var plugins = passedProps.plugins || [];\n  var pluginProps = plugins.reduce(function (acc, plugin) {\n    var name = plugin.name,\n        defaultValue = plugin.defaultValue;\n\n    if (name) {\n      var _name;\n\n      acc[name] = passedProps[name] !== undefined ? passedProps[name] : (_name = defaultProps[name]) != null ? _name : defaultValue;\n    }\n\n    return acc;\n  }, {});\n  return Object.assign({}, passedProps, pluginProps);\n}\nfunction getDataAttributeProps(reference, plugins) {\n  var propKeys = plugins ? Object.keys(getExtendedPassedProps(Object.assign({}, defaultProps, {\n    plugins: plugins\n  }))) : defaultKeys;\n  var props = propKeys.reduce(function (acc, key) {\n    var valueAsString = (reference.getAttribute(\"data-tippy-\" + key) || '').trim();\n\n    if (!valueAsString) {\n      return acc;\n    }\n\n    if (key === 'content') {\n      acc[key] = valueAsString;\n    } else {\n      try {\n        acc[key] = JSON.parse(valueAsString);\n      } catch (e) {\n        acc[key] = valueAsString;\n      }\n    }\n\n    return acc;\n  }, {});\n  return props;\n}\nfunction evaluateProps(reference, props) {\n  var out = Object.assign({}, props, {\n    content: invokeWithArgsOrReturn(props.content, [reference])\n  }, props.ignoreAttributes ? {} : getDataAttributeProps(reference, props.plugins));\n  out.aria = Object.assign({}, defaultProps.aria, out.aria);\n  out.aria = {\n    expanded: out.aria.expanded === 'auto' ? props.interactive : out.aria.expanded,\n    content: out.aria.content === 'auto' ? props.interactive ? null : 'describedby' : out.aria.content\n  };\n  return out;\n}\nfunction validateProps(partialProps, plugins) {\n  if (partialProps === void 0) {\n    partialProps = {};\n  }\n\n  if (plugins === void 0) {\n    plugins = [];\n  }\n\n  var keys = Object.keys(partialProps);\n  keys.forEach(function (prop) {\n    var nonPluginProps = removeProperties(defaultProps, Object.keys(pluginProps));\n    var didPassUnknownProp = !hasOwnProperty(nonPluginProps, prop); // Check if the prop exists in `plugins`\n\n    if (didPassUnknownProp) {\n      didPassUnknownProp = plugins.filter(function (plugin) {\n        return plugin.name === prop;\n      }).length === 0;\n    }\n\n    warnWhen(didPassUnknownProp, [\"`\" + prop + \"`\", \"is not a valid prop. You may have spelled it incorrectly, or if it's\", 'a plugin, forgot to pass it in an array as props.plugins.', '\\n\\n', 'All props: https://atomiks.github.io/tippyjs/v6/all-props/\\n', 'Plugins: https://atomiks.github.io/tippyjs/v6/plugins/'].join(' '));\n  });\n}\n\nvar innerHTML = function innerHTML() {\n  return 'innerHTML';\n};\n\nfunction dangerouslySetInnerHTML(element, html) {\n  element[innerHTML()] = html;\n}\n\nfunction createArrowElement(value) {\n  var arrow = div();\n\n  if (value === true) {\n    arrow.className = ARROW_CLASS;\n  } else {\n    arrow.className = SVG_ARROW_CLASS;\n\n    if (isElement(value)) {\n      arrow.appendChild(value);\n    } else {\n      dangerouslySetInnerHTML(arrow, value);\n    }\n  }\n\n  return arrow;\n}\n\nfunction setContent(content, props) {\n  if (isElement(props.content)) {\n    dangerouslySetInnerHTML(content, '');\n    content.appendChild(props.content);\n  } else if (typeof props.content !== 'function') {\n    if (props.allowHTML) {\n      dangerouslySetInnerHTML(content, props.content);\n    } else {\n      content.textContent = props.content;\n    }\n  }\n}\nfunction getChildren(popper) {\n  var box = popper.firstElementChild;\n  var boxChildren = arrayFrom(box.children);\n  return {\n    box: box,\n    content: boxChildren.find(function (node) {\n      return node.classList.contains(CONTENT_CLASS);\n    }),\n    arrow: boxChildren.find(function (node) {\n      return node.classList.contains(ARROW_CLASS) || node.classList.contains(SVG_ARROW_CLASS);\n    }),\n    backdrop: boxChildren.find(function (node) {\n      return node.classList.contains(BACKDROP_CLASS);\n    })\n  };\n}\nfunction render(instance) {\n  var popper = div();\n  var box = div();\n  box.className = BOX_CLASS;\n  box.setAttribute('data-state', 'hidden');\n  box.setAttribute('tabindex', '-1');\n  var content = div();\n  content.className = CONTENT_CLASS;\n  content.setAttribute('data-state', 'hidden');\n  setContent(content, instance.props);\n  popper.appendChild(box);\n  box.appendChild(content);\n  onUpdate(instance.props, instance.props);\n\n  function onUpdate(prevProps, nextProps) {\n    var _getChildren = getChildren(popper),\n        box = _getChildren.box,\n        content = _getChildren.content,\n        arrow = _getChildren.arrow;\n\n    if (nextProps.theme) {\n      box.setAttribute('data-theme', nextProps.theme);\n    } else {\n      box.removeAttribute('data-theme');\n    }\n\n    if (typeof nextProps.animation === 'string') {\n      box.setAttribute('data-animation', nextProps.animation);\n    } else {\n      box.removeAttribute('data-animation');\n    }\n\n    if (nextProps.inertia) {\n      box.setAttribute('data-inertia', '');\n    } else {\n      box.removeAttribute('data-inertia');\n    }\n\n    box.style.maxWidth = typeof nextProps.maxWidth === 'number' ? nextProps.maxWidth + \"px\" : nextProps.maxWidth;\n\n    if (nextProps.role) {\n      box.setAttribute('role', nextProps.role);\n    } else {\n      box.removeAttribute('role');\n    }\n\n    if (prevProps.content !== nextProps.content || prevProps.allowHTML !== nextProps.allowHTML) {\n      setContent(content, instance.props);\n    }\n\n    if (nextProps.arrow) {\n      if (!arrow) {\n        box.appendChild(createArrowElement(nextProps.arrow));\n      } else if (prevProps.arrow !== nextProps.arrow) {\n        box.removeChild(arrow);\n        box.appendChild(createArrowElement(nextProps.arrow));\n      }\n    } else if (arrow) {\n      box.removeChild(arrow);\n    }\n  }\n\n  return {\n    popper: popper,\n    onUpdate: onUpdate\n  };\n} // Runtime check to identify if the render function is the default one; this\n// way we can apply default CSS transitions logic and it can be tree-shaken away\n\nrender.$$tippy = true;\n\nvar idCounter = 1;\nvar mouseMoveListeners = []; // Used by `hideAll()`\n\nvar mountedInstances = [];\nfunction createTippy(reference, passedProps) {\n  var props = evaluateProps(reference, Object.assign({}, defaultProps, getExtendedPassedProps(removeUndefinedProps(passedProps)))); // ===========================================================================\n  // 🔒 Private members\n  // ===========================================================================\n\n  var showTimeout;\n  var hideTimeout;\n  var scheduleHideAnimationFrame;\n  var isVisibleFromClick = false;\n  var didHideDueToDocumentMouseDown = false;\n  var didTouchMove = false;\n  var ignoreOnFirstUpdate = false;\n  var lastTriggerEvent;\n  var currentTransitionEndListener;\n  var onFirstUpdate;\n  var listeners = [];\n  var debouncedOnMouseMove = debounce(onMouseMove, props.interactiveDebounce);\n  var currentTarget; // ===========================================================================\n  // 🔑 Public members\n  // ===========================================================================\n\n  var id = idCounter++;\n  var popperInstance = null;\n  var plugins = unique(props.plugins);\n  var state = {\n    // Is the instance currently enabled?\n    isEnabled: true,\n    // Is the tippy currently showing and not transitioning out?\n    isVisible: false,\n    // Has the instance been destroyed?\n    isDestroyed: false,\n    // Is the tippy currently mounted to the DOM?\n    isMounted: false,\n    // Has the tippy finished transitioning in?\n    isShown: false\n  };\n  var instance = {\n    // properties\n    id: id,\n    reference: reference,\n    popper: div(),\n    popperInstance: popperInstance,\n    props: props,\n    state: state,\n    plugins: plugins,\n    // methods\n    clearDelayTimeouts: clearDelayTimeouts,\n    setProps: setProps,\n    setContent: setContent,\n    show: show,\n    hide: hide,\n    hideWithInteractivity: hideWithInteractivity,\n    enable: enable,\n    disable: disable,\n    unmount: unmount,\n    destroy: destroy\n  }; // TODO: Investigate why this early return causes a TDZ error in the tests —\n  // it doesn't seem to happen in the browser\n\n  /* istanbul ignore if */\n\n  if (!props.render) {\n    if (process.env.NODE_ENV !== \"production\") {\n      errorWhen(true, 'render() function has not been supplied.');\n    }\n\n    return instance;\n  } // ===========================================================================\n  // Initial mutations\n  // ===========================================================================\n\n\n  var _props$render = props.render(instance),\n      popper = _props$render.popper,\n      onUpdate = _props$render.onUpdate;\n\n  popper.setAttribute('data-tippy-root', '');\n  popper.id = \"tippy-\" + instance.id;\n  instance.popper = popper;\n  reference._tippy = instance;\n  popper._tippy = instance;\n  var pluginsHooks = plugins.map(function (plugin) {\n    return plugin.fn(instance);\n  });\n  var hasAriaExpanded = reference.hasAttribute('aria-expanded');\n  addListeners();\n  handleAriaExpandedAttribute();\n  handleStyles();\n  invokeHook('onCreate', [instance]);\n\n  if (props.showOnCreate) {\n    scheduleShow();\n  } // Prevent a tippy with a delay from hiding if the cursor left then returned\n  // before it started hiding\n\n\n  popper.addEventListener('mouseenter', function () {\n    if (instance.props.interactive && instance.state.isVisible) {\n      instance.clearDelayTimeouts();\n    }\n  });\n  popper.addEventListener('mouseleave', function () {\n    if (instance.props.interactive && instance.props.trigger.indexOf('mouseenter') >= 0) {\n      getDocument().addEventListener('mousemove', debouncedOnMouseMove);\n    }\n  });\n  return instance; // ===========================================================================\n  // 🔒 Private methods\n  // ===========================================================================\n\n  function getNormalizedTouchSettings() {\n    var touch = instance.props.touch;\n    return Array.isArray(touch) ? touch : [touch, 0];\n  }\n\n  function getIsCustomTouchBehavior() {\n    return getNormalizedTouchSettings()[0] === 'hold';\n  }\n\n  function getIsDefaultRenderFn() {\n    var _instance$props$rende;\n\n    // @ts-ignore\n    return !!((_instance$props$rende = instance.props.render) != null && _instance$props$rende.$$tippy);\n  }\n\n  function getCurrentTarget() {\n    return currentTarget || reference;\n  }\n\n  function getDocument() {\n    var parent = getCurrentTarget().parentNode;\n    return parent ? getOwnerDocument(parent) : document;\n  }\n\n  function getDefaultTemplateChildren() {\n    return getChildren(popper);\n  }\n\n  function getDelay(isShow) {\n    // For touch or keyboard input, force `0` delay for UX reasons\n    // Also if the instance is mounted but not visible (transitioning out),\n    // ignore delay\n    if (instance.state.isMounted && !instance.state.isVisible || currentInput.isTouch || lastTriggerEvent && lastTriggerEvent.type === 'focus') {\n      return 0;\n    }\n\n    return getValueAtIndexOrReturn(instance.props.delay, isShow ? 0 : 1, defaultProps.delay);\n  }\n\n  function handleStyles(fromHide) {\n    if (fromHide === void 0) {\n      fromHide = false;\n    }\n\n    popper.style.pointerEvents = instance.props.interactive && !fromHide ? '' : 'none';\n    popper.style.zIndex = \"\" + instance.props.zIndex;\n  }\n\n  function invokeHook(hook, args, shouldInvokePropsHook) {\n    if (shouldInvokePropsHook === void 0) {\n      shouldInvokePropsHook = true;\n    }\n\n    pluginsHooks.forEach(function (pluginHooks) {\n      if (pluginHooks[hook]) {\n        pluginHooks[hook].apply(pluginHooks, args);\n      }\n    });\n\n    if (shouldInvokePropsHook) {\n      var _instance$props;\n\n      (_instance$props = instance.props)[hook].apply(_instance$props, args);\n    }\n  }\n\n  function handleAriaContentAttribute() {\n    var aria = instance.props.aria;\n\n    if (!aria.content) {\n      return;\n    }\n\n    var attr = \"aria-\" + aria.content;\n    var id = popper.id;\n    var nodes = normalizeToArray(instance.props.triggerTarget || reference);\n    nodes.forEach(function (node) {\n      var currentValue = node.getAttribute(attr);\n\n      if (instance.state.isVisible) {\n        node.setAttribute(attr, currentValue ? currentValue + \" \" + id : id);\n      } else {\n        var nextValue = currentValue && currentValue.replace(id, '').trim();\n\n        if (nextValue) {\n          node.setAttribute(attr, nextValue);\n        } else {\n          node.removeAttribute(attr);\n        }\n      }\n    });\n  }\n\n  function handleAriaExpandedAttribute() {\n    if (hasAriaExpanded || !instance.props.aria.expanded) {\n      return;\n    }\n\n    var nodes = normalizeToArray(instance.props.triggerTarget || reference);\n    nodes.forEach(function (node) {\n      if (instance.props.interactive) {\n        node.setAttribute('aria-expanded', instance.state.isVisible && node === getCurrentTarget() ? 'true' : 'false');\n      } else {\n        node.removeAttribute('aria-expanded');\n      }\n    });\n  }\n\n  function cleanupInteractiveMouseListeners() {\n    getDocument().removeEventListener('mousemove', debouncedOnMouseMove);\n    mouseMoveListeners = mouseMoveListeners.filter(function (listener) {\n      return listener !== debouncedOnMouseMove;\n    });\n  }\n\n  function onDocumentPress(event) {\n    // Moved finger to scroll instead of an intentional tap outside\n    if (currentInput.isTouch) {\n      if (didTouchMove || event.type === 'mousedown') {\n        return;\n      }\n    }\n\n    var actualTarget = event.composedPath && event.composedPath()[0] || event.target; // Clicked on interactive popper\n\n    if (instance.props.interactive && actualContains(popper, actualTarget)) {\n      return;\n    } // Clicked on the event listeners target\n\n\n    if (normalizeToArray(instance.props.triggerTarget || reference).some(function (el) {\n      return actualContains(el, actualTarget);\n    })) {\n      if (currentInput.isTouch) {\n        return;\n      }\n\n      if (instance.state.isVisible && instance.props.trigger.indexOf('click') >= 0) {\n        return;\n      }\n    } else {\n      invokeHook('onClickOutside', [instance, event]);\n    }\n\n    if (instance.props.hideOnClick === true) {\n      instance.clearDelayTimeouts();\n      instance.hide(); // `mousedown` event is fired right before `focus` if pressing the\n      // currentTarget. This lets a tippy with `focus` trigger know that it\n      // should not show\n\n      didHideDueToDocumentMouseDown = true;\n      setTimeout(function () {\n        didHideDueToDocumentMouseDown = false;\n      }); // The listener gets added in `scheduleShow()`, but this may be hiding it\n      // before it shows, and hide()'s early bail-out behavior can prevent it\n      // from being cleaned up\n\n      if (!instance.state.isMounted) {\n        removeDocumentPress();\n      }\n    }\n  }\n\n  function onTouchMove() {\n    didTouchMove = true;\n  }\n\n  function onTouchStart() {\n    didTouchMove = false;\n  }\n\n  function addDocumentPress() {\n    var doc = getDocument();\n    doc.addEventListener('mousedown', onDocumentPress, true);\n    doc.addEventListener('touchend', onDocumentPress, TOUCH_OPTIONS);\n    doc.addEventListener('touchstart', onTouchStart, TOUCH_OPTIONS);\n    doc.addEventListener('touchmove', onTouchMove, TOUCH_OPTIONS);\n  }\n\n  function removeDocumentPress() {\n    var doc = getDocument();\n    doc.removeEventListener('mousedown', onDocumentPress, true);\n    doc.removeEventListener('touchend', onDocumentPress, TOUCH_OPTIONS);\n    doc.removeEventListener('touchstart', onTouchStart, TOUCH_OPTIONS);\n    doc.removeEventListener('touchmove', onTouchMove, TOUCH_OPTIONS);\n  }\n\n  function onTransitionedOut(duration, callback) {\n    onTransitionEnd(duration, function () {\n      if (!instance.state.isVisible && popper.parentNode && popper.parentNode.contains(popper)) {\n        callback();\n      }\n    });\n  }\n\n  function onTransitionedIn(duration, callback) {\n    onTransitionEnd(duration, callback);\n  }\n\n  function onTransitionEnd(duration, callback) {\n    var box = getDefaultTemplateChildren().box;\n\n    function listener(event) {\n      if (event.target === box) {\n        updateTransitionEndListener(box, 'remove', listener);\n        callback();\n      }\n    } // Make callback synchronous if duration is 0\n    // `transitionend` won't fire otherwise\n\n\n    if (duration === 0) {\n      return callback();\n    }\n\n    updateTransitionEndListener(box, 'remove', currentTransitionEndListener);\n    updateTransitionEndListener(box, 'add', listener);\n    currentTransitionEndListener = listener;\n  }\n\n  function on(eventType, handler, options) {\n    if (options === void 0) {\n      options = false;\n    }\n\n    var nodes = normalizeToArray(instance.props.triggerTarget || reference);\n    nodes.forEach(function (node) {\n      node.addEventListener(eventType, handler, options);\n      listeners.push({\n        node: node,\n        eventType: eventType,\n        handler: handler,\n        options: options\n      });\n    });\n  }\n\n  function addListeners() {\n    if (getIsCustomTouchBehavior()) {\n      on('touchstart', onTrigger, {\n        passive: true\n      });\n      on('touchend', onMouseLeave, {\n        passive: true\n      });\n    }\n\n    splitBySpaces(instance.props.trigger).forEach(function (eventType) {\n      if (eventType === 'manual') {\n        return;\n      }\n\n      on(eventType, onTrigger);\n\n      switch (eventType) {\n        case 'mouseenter':\n          on('mouseleave', onMouseLeave);\n          break;\n\n        case 'focus':\n          on(isIE11 ? 'focusout' : 'blur', onBlurOrFocusOut);\n          break;\n\n        case 'focusin':\n          on('focusout', onBlurOrFocusOut);\n          break;\n      }\n    });\n  }\n\n  function removeListeners() {\n    listeners.forEach(function (_ref) {\n      var node = _ref.node,\n          eventType = _ref.eventType,\n          handler = _ref.handler,\n          options = _ref.options;\n      node.removeEventListener(eventType, handler, options);\n    });\n    listeners = [];\n  }\n\n  function onTrigger(event) {\n    var _lastTriggerEvent;\n\n    var shouldScheduleClickHide = false;\n\n    if (!instance.state.isEnabled || isEventListenerStopped(event) || didHideDueToDocumentMouseDown) {\n      return;\n    }\n\n    var wasFocused = ((_lastTriggerEvent = lastTriggerEvent) == null ? void 0 : _lastTriggerEvent.type) === 'focus';\n    lastTriggerEvent = event;\n    currentTarget = event.currentTarget;\n    handleAriaExpandedAttribute();\n\n    if (!instance.state.isVisible && isMouseEvent(event)) {\n      // If scrolling, `mouseenter` events can be fired if the cursor lands\n      // over a new target, but `mousemove` events don't get fired. This\n      // causes interactive tooltips to get stuck open until the cursor is\n      // moved\n      mouseMoveListeners.forEach(function (listener) {\n        return listener(event);\n      });\n    } // Toggle show/hide when clicking click-triggered tooltips\n\n\n    if (event.type === 'click' && (instance.props.trigger.indexOf('mouseenter') < 0 || isVisibleFromClick) && instance.props.hideOnClick !== false && instance.state.isVisible) {\n      shouldScheduleClickHide = true;\n    } else {\n      scheduleShow(event);\n    }\n\n    if (event.type === 'click') {\n      isVisibleFromClick = !shouldScheduleClickHide;\n    }\n\n    if (shouldScheduleClickHide && !wasFocused) {\n      scheduleHide(event);\n    }\n  }\n\n  function onMouseMove(event) {\n    var target = event.target;\n    var isCursorOverReferenceOrPopper = getCurrentTarget().contains(target) || popper.contains(target);\n\n    if (event.type === 'mousemove' && isCursorOverReferenceOrPopper) {\n      return;\n    }\n\n    var popperTreeData = getNestedPopperTree().concat(popper).map(function (popper) {\n      var _instance$popperInsta;\n\n      var instance = popper._tippy;\n      var state = (_instance$popperInsta = instance.popperInstance) == null ? void 0 : _instance$popperInsta.state;\n\n      if (state) {\n        return {\n          popperRect: popper.getBoundingClientRect(),\n          popperState: state,\n          props: props\n        };\n      }\n\n      return null;\n    }).filter(Boolean);\n\n    if (isCursorOutsideInteractiveBorder(popperTreeData, event)) {\n      cleanupInteractiveMouseListeners();\n      scheduleHide(event);\n    }\n  }\n\n  function onMouseLeave(event) {\n    var shouldBail = isEventListenerStopped(event) || instance.props.trigger.indexOf('click') >= 0 && isVisibleFromClick;\n\n    if (shouldBail) {\n      return;\n    }\n\n    if (instance.props.interactive) {\n      instance.hideWithInteractivity(event);\n      return;\n    }\n\n    scheduleHide(event);\n  }\n\n  function onBlurOrFocusOut(event) {\n    if (instance.props.trigger.indexOf('focusin') < 0 && event.target !== getCurrentTarget()) {\n      return;\n    } // If focus was moved to within the popper\n\n\n    if (instance.props.interactive && event.relatedTarget && popper.contains(event.relatedTarget)) {\n      return;\n    }\n\n    scheduleHide(event);\n  }\n\n  function isEventListenerStopped(event) {\n    return currentInput.isTouch ? getIsCustomTouchBehavior() !== event.type.indexOf('touch') >= 0 : false;\n  }\n\n  function createPopperInstance() {\n    destroyPopperInstance();\n    var _instance$props2 = instance.props,\n        popperOptions = _instance$props2.popperOptions,\n        placement = _instance$props2.placement,\n        offset = _instance$props2.offset,\n        getReferenceClientRect = _instance$props2.getReferenceClientRect,\n        moveTransition = _instance$props2.moveTransition;\n    var arrow = getIsDefaultRenderFn() ? getChildren(popper).arrow : null;\n    var computedReference = getReferenceClientRect ? {\n      getBoundingClientRect: getReferenceClientRect,\n      contextElement: getReferenceClientRect.contextElement || getCurrentTarget()\n    } : reference;\n    var tippyModifier = {\n      name: '$$tippy',\n      enabled: true,\n      phase: 'beforeWrite',\n      requires: ['computeStyles'],\n      fn: function fn(_ref2) {\n        var state = _ref2.state;\n\n        if (getIsDefaultRenderFn()) {\n          var _getDefaultTemplateCh = getDefaultTemplateChildren(),\n              box = _getDefaultTemplateCh.box;\n\n          ['placement', 'reference-hidden', 'escaped'].forEach(function (attr) {\n            if (attr === 'placement') {\n              box.setAttribute('data-placement', state.placement);\n            } else {\n              if (state.attributes.popper[\"data-popper-\" + attr]) {\n                box.setAttribute(\"data-\" + attr, '');\n              } else {\n                box.removeAttribute(\"data-\" + attr);\n              }\n            }\n          });\n          state.attributes.popper = {};\n        }\n      }\n    };\n    var modifiers = [{\n      name: 'offset',\n      options: {\n        offset: offset\n      }\n    }, {\n      name: 'preventOverflow',\n      options: {\n        padding: {\n          top: 2,\n          bottom: 2,\n          left: 5,\n          right: 5\n        }\n      }\n    }, {\n      name: 'flip',\n      options: {\n        padding: 5\n      }\n    }, {\n      name: 'computeStyles',\n      options: {\n        adaptive: !moveTransition\n      }\n    }, tippyModifier];\n\n    if (getIsDefaultRenderFn() && arrow) {\n      modifiers.push({\n        name: 'arrow',\n        options: {\n          element: arrow,\n          padding: 3\n        }\n      });\n    }\n\n    modifiers.push.apply(modifiers, (popperOptions == null ? void 0 : popperOptions.modifiers) || []);\n    instance.popperInstance = createPopper(computedReference, popper, Object.assign({}, popperOptions, {\n      placement: placement,\n      onFirstUpdate: onFirstUpdate,\n      modifiers: modifiers\n    }));\n  }\n\n  function destroyPopperInstance() {\n    if (instance.popperInstance) {\n      instance.popperInstance.destroy();\n      instance.popperInstance = null;\n    }\n  }\n\n  function mount() {\n    var appendTo = instance.props.appendTo;\n    var parentNode; // By default, we'll append the popper to the triggerTargets's parentNode so\n    // it's directly after the reference element so the elements inside the\n    // tippy can be tabbed to\n    // If there are clipping issues, the user can specify a different appendTo\n    // and ensure focus management is handled correctly manually\n\n    var node = getCurrentTarget();\n\n    if (instance.props.interactive && appendTo === TIPPY_DEFAULT_APPEND_TO || appendTo === 'parent') {\n      parentNode = node.parentNode;\n    } else {\n      parentNode = invokeWithArgsOrReturn(appendTo, [node]);\n    } // The popper element needs to exist on the DOM before its position can be\n    // updated as Popper needs to read its dimensions\n\n\n    if (!parentNode.contains(popper)) {\n      parentNode.appendChild(popper);\n    }\n\n    instance.state.isMounted = true;\n    createPopperInstance();\n    /* istanbul ignore else */\n\n    if (process.env.NODE_ENV !== \"production\") {\n      // Accessibility check\n      warnWhen(instance.props.interactive && appendTo === defaultProps.appendTo && node.nextElementSibling !== popper, ['Interactive tippy element may not be accessible via keyboard', 'navigation because it is not directly after the reference element', 'in the DOM source order.', '\\n\\n', 'Using a wrapper <div> or <span> tag around the reference element', 'solves this by creating a new parentNode context.', '\\n\\n', 'Specifying `appendTo: document.body` silences this warning, but it', 'assumes you are using a focus management solution to handle', 'keyboard navigation.', '\\n\\n', 'See: https://atomiks.github.io/tippyjs/v6/accessibility/#interactivity'].join(' '));\n    }\n  }\n\n  function getNestedPopperTree() {\n    return arrayFrom(popper.querySelectorAll('[data-tippy-root]'));\n  }\n\n  function scheduleShow(event) {\n    instance.clearDelayTimeouts();\n\n    if (event) {\n      invokeHook('onTrigger', [instance, event]);\n    }\n\n    addDocumentPress();\n    var delay = getDelay(true);\n\n    var _getNormalizedTouchSe = getNormalizedTouchSettings(),\n        touchValue = _getNormalizedTouchSe[0],\n        touchDelay = _getNormalizedTouchSe[1];\n\n    if (currentInput.isTouch && touchValue === 'hold' && touchDelay) {\n      delay = touchDelay;\n    }\n\n    if (delay) {\n      showTimeout = setTimeout(function () {\n        instance.show();\n      }, delay);\n    } else {\n      instance.show();\n    }\n  }\n\n  function scheduleHide(event) {\n    instance.clearDelayTimeouts();\n    invokeHook('onUntrigger', [instance, event]);\n\n    if (!instance.state.isVisible) {\n      removeDocumentPress();\n      return;\n    } // For interactive tippies, scheduleHide is added to a document.body handler\n    // from onMouseLeave so must intercept scheduled hides from mousemove/leave\n    // events when trigger contains mouseenter and click, and the tip is\n    // currently shown as a result of a click.\n\n\n    if (instance.props.trigger.indexOf('mouseenter') >= 0 && instance.props.trigger.indexOf('click') >= 0 && ['mouseleave', 'mousemove'].indexOf(event.type) >= 0 && isVisibleFromClick) {\n      return;\n    }\n\n    var delay = getDelay(false);\n\n    if (delay) {\n      hideTimeout = setTimeout(function () {\n        if (instance.state.isVisible) {\n          instance.hide();\n        }\n      }, delay);\n    } else {\n      // Fixes a `transitionend` problem when it fires 1 frame too\n      // late sometimes, we don't want hide() to be called.\n      scheduleHideAnimationFrame = requestAnimationFrame(function () {\n        instance.hide();\n      });\n    }\n  } // ===========================================================================\n  // 🔑 Public methods\n  // ===========================================================================\n\n\n  function enable() {\n    instance.state.isEnabled = true;\n  }\n\n  function disable() {\n    // Disabling the instance should also hide it\n    // https://github.com/atomiks/tippy.js-react/issues/106\n    instance.hide();\n    instance.state.isEnabled = false;\n  }\n\n  function clearDelayTimeouts() {\n    clearTimeout(showTimeout);\n    clearTimeout(hideTimeout);\n    cancelAnimationFrame(scheduleHideAnimationFrame);\n  }\n\n  function setProps(partialProps) {\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== \"production\") {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('setProps'));\n    }\n\n    if (instance.state.isDestroyed) {\n      return;\n    }\n\n    invokeHook('onBeforeUpdate', [instance, partialProps]);\n    removeListeners();\n    var prevProps = instance.props;\n    var nextProps = evaluateProps(reference, Object.assign({}, prevProps, removeUndefinedProps(partialProps), {\n      ignoreAttributes: true\n    }));\n    instance.props = nextProps;\n    addListeners();\n\n    if (prevProps.interactiveDebounce !== nextProps.interactiveDebounce) {\n      cleanupInteractiveMouseListeners();\n      debouncedOnMouseMove = debounce(onMouseMove, nextProps.interactiveDebounce);\n    } // Ensure stale aria-expanded attributes are removed\n\n\n    if (prevProps.triggerTarget && !nextProps.triggerTarget) {\n      normalizeToArray(prevProps.triggerTarget).forEach(function (node) {\n        node.removeAttribute('aria-expanded');\n      });\n    } else if (nextProps.triggerTarget) {\n      reference.removeAttribute('aria-expanded');\n    }\n\n    handleAriaExpandedAttribute();\n    handleStyles();\n\n    if (onUpdate) {\n      onUpdate(prevProps, nextProps);\n    }\n\n    if (instance.popperInstance) {\n      createPopperInstance(); // Fixes an issue with nested tippies if they are all getting re-rendered,\n      // and the nested ones get re-rendered first.\n      // https://github.com/atomiks/tippyjs-react/issues/177\n      // TODO: find a cleaner / more efficient solution(!)\n\n      getNestedPopperTree().forEach(function (nestedPopper) {\n        // React (and other UI libs likely) requires a rAF wrapper as it flushes\n        // its work in one\n        requestAnimationFrame(nestedPopper._tippy.popperInstance.forceUpdate);\n      });\n    }\n\n    invokeHook('onAfterUpdate', [instance, partialProps]);\n  }\n\n  function setContent(content) {\n    instance.setProps({\n      content: content\n    });\n  }\n\n  function show() {\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== \"production\") {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('show'));\n    } // Early bail-out\n\n\n    var isAlreadyVisible = instance.state.isVisible;\n    var isDestroyed = instance.state.isDestroyed;\n    var isDisabled = !instance.state.isEnabled;\n    var isTouchAndTouchDisabled = currentInput.isTouch && !instance.props.touch;\n    var duration = getValueAtIndexOrReturn(instance.props.duration, 0, defaultProps.duration);\n\n    if (isAlreadyVisible || isDestroyed || isDisabled || isTouchAndTouchDisabled) {\n      return;\n    } // Normalize `disabled` behavior across browsers.\n    // Firefox allows events on disabled elements, but Chrome doesn't.\n    // Using a wrapper element (i.e. <span>) is recommended.\n\n\n    if (getCurrentTarget().hasAttribute('disabled')) {\n      return;\n    }\n\n    invokeHook('onShow', [instance], false);\n\n    if (instance.props.onShow(instance) === false) {\n      return;\n    }\n\n    instance.state.isVisible = true;\n\n    if (getIsDefaultRenderFn()) {\n      popper.style.visibility = 'visible';\n    }\n\n    handleStyles();\n    addDocumentPress();\n\n    if (!instance.state.isMounted) {\n      popper.style.transition = 'none';\n    } // If flipping to the opposite side after hiding at least once, the\n    // animation will use the wrong placement without resetting the duration\n\n\n    if (getIsDefaultRenderFn()) {\n      var _getDefaultTemplateCh2 = getDefaultTemplateChildren(),\n          box = _getDefaultTemplateCh2.box,\n          content = _getDefaultTemplateCh2.content;\n\n      setTransitionDuration([box, content], 0);\n    }\n\n    onFirstUpdate = function onFirstUpdate() {\n      var _instance$popperInsta2;\n\n      if (!instance.state.isVisible || ignoreOnFirstUpdate) {\n        return;\n      }\n\n      ignoreOnFirstUpdate = true; // reflow\n\n      void popper.offsetHeight;\n      popper.style.transition = instance.props.moveTransition;\n\n      if (getIsDefaultRenderFn() && instance.props.animation) {\n        var _getDefaultTemplateCh3 = getDefaultTemplateChildren(),\n            _box = _getDefaultTemplateCh3.box,\n            _content = _getDefaultTemplateCh3.content;\n\n        setTransitionDuration([_box, _content], duration);\n        setVisibilityState([_box, _content], 'visible');\n      }\n\n      handleAriaContentAttribute();\n      handleAriaExpandedAttribute();\n      pushIfUnique(mountedInstances, instance); // certain modifiers (e.g. `maxSize`) require a second update after the\n      // popper has been positioned for the first time\n\n      (_instance$popperInsta2 = instance.popperInstance) == null ? void 0 : _instance$popperInsta2.forceUpdate();\n      invokeHook('onMount', [instance]);\n\n      if (instance.props.animation && getIsDefaultRenderFn()) {\n        onTransitionedIn(duration, function () {\n          instance.state.isShown = true;\n          invokeHook('onShown', [instance]);\n        });\n      }\n    };\n\n    mount();\n  }\n\n  function hide() {\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== \"production\") {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('hide'));\n    } // Early bail-out\n\n\n    var isAlreadyHidden = !instance.state.isVisible;\n    var isDestroyed = instance.state.isDestroyed;\n    var isDisabled = !instance.state.isEnabled;\n    var duration = getValueAtIndexOrReturn(instance.props.duration, 1, defaultProps.duration);\n\n    if (isAlreadyHidden || isDestroyed || isDisabled) {\n      return;\n    }\n\n    invokeHook('onHide', [instance], false);\n\n    if (instance.props.onHide(instance) === false) {\n      return;\n    }\n\n    instance.state.isVisible = false;\n    instance.state.isShown = false;\n    ignoreOnFirstUpdate = false;\n    isVisibleFromClick = false;\n\n    if (getIsDefaultRenderFn()) {\n      popper.style.visibility = 'hidden';\n    }\n\n    cleanupInteractiveMouseListeners();\n    removeDocumentPress();\n    handleStyles(true);\n\n    if (getIsDefaultRenderFn()) {\n      var _getDefaultTemplateCh4 = getDefaultTemplateChildren(),\n          box = _getDefaultTemplateCh4.box,\n          content = _getDefaultTemplateCh4.content;\n\n      if (instance.props.animation) {\n        setTransitionDuration([box, content], duration);\n        setVisibilityState([box, content], 'hidden');\n      }\n    }\n\n    handleAriaContentAttribute();\n    handleAriaExpandedAttribute();\n\n    if (instance.props.animation) {\n      if (getIsDefaultRenderFn()) {\n        onTransitionedOut(duration, instance.unmount);\n      }\n    } else {\n      instance.unmount();\n    }\n  }\n\n  function hideWithInteractivity(event) {\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== \"production\") {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('hideWithInteractivity'));\n    }\n\n    getDocument().addEventListener('mousemove', debouncedOnMouseMove);\n    pushIfUnique(mouseMoveListeners, debouncedOnMouseMove);\n    debouncedOnMouseMove(event);\n  }\n\n  function unmount() {\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== \"production\") {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('unmount'));\n    }\n\n    if (instance.state.isVisible) {\n      instance.hide();\n    }\n\n    if (!instance.state.isMounted) {\n      return;\n    }\n\n    destroyPopperInstance(); // If a popper is not interactive, it will be appended outside the popper\n    // tree by default. This seems mainly for interactive tippies, but we should\n    // find a workaround if possible\n\n    getNestedPopperTree().forEach(function (nestedPopper) {\n      nestedPopper._tippy.unmount();\n    });\n\n    if (popper.parentNode) {\n      popper.parentNode.removeChild(popper);\n    }\n\n    mountedInstances = mountedInstances.filter(function (i) {\n      return i !== instance;\n    });\n    instance.state.isMounted = false;\n    invokeHook('onHidden', [instance]);\n  }\n\n  function destroy() {\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== \"production\") {\n      warnWhen(instance.state.isDestroyed, createMemoryLeakWarning('destroy'));\n    }\n\n    if (instance.state.isDestroyed) {\n      return;\n    }\n\n    instance.clearDelayTimeouts();\n    instance.unmount();\n    removeListeners();\n    delete reference._tippy;\n    instance.state.isDestroyed = true;\n    invokeHook('onDestroy', [instance]);\n  }\n}\n\nfunction tippy(targets, optionalProps) {\n  if (optionalProps === void 0) {\n    optionalProps = {};\n  }\n\n  var plugins = defaultProps.plugins.concat(optionalProps.plugins || []);\n  /* istanbul ignore else */\n\n  if (process.env.NODE_ENV !== \"production\") {\n    validateTargets(targets);\n    validateProps(optionalProps, plugins);\n  }\n\n  bindGlobalEventListeners();\n  var passedProps = Object.assign({}, optionalProps, {\n    plugins: plugins\n  });\n  var elements = getArrayOfElements(targets);\n  /* istanbul ignore else */\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var isSingleContentElement = isElement(passedProps.content);\n    var isMoreThanOneReferenceElement = elements.length > 1;\n    warnWhen(isSingleContentElement && isMoreThanOneReferenceElement, ['tippy() was passed an Element as the `content` prop, but more than', 'one tippy instance was created by this invocation. This means the', 'content element will only be appended to the last tippy instance.', '\\n\\n', 'Instead, pass the .innerHTML of the element, or use a function that', 'returns a cloned version of the element instead.', '\\n\\n', '1) content: element.innerHTML\\n', '2) content: () => element.cloneNode(true)'].join(' '));\n  }\n\n  var instances = elements.reduce(function (acc, reference) {\n    var instance = reference && createTippy(reference, passedProps);\n\n    if (instance) {\n      acc.push(instance);\n    }\n\n    return acc;\n  }, []);\n  return isElement(targets) ? instances[0] : instances;\n}\n\ntippy.defaultProps = defaultProps;\ntippy.setDefaultProps = setDefaultProps;\ntippy.currentInput = currentInput;\nvar hideAll = function hideAll(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      excludedReferenceOrInstance = _ref.exclude,\n      duration = _ref.duration;\n\n  mountedInstances.forEach(function (instance) {\n    var isExcluded = false;\n\n    if (excludedReferenceOrInstance) {\n      isExcluded = isReferenceElement(excludedReferenceOrInstance) ? instance.reference === excludedReferenceOrInstance : instance.popper === excludedReferenceOrInstance.popper;\n    }\n\n    if (!isExcluded) {\n      var originalDuration = instance.props.duration;\n      instance.setProps({\n        duration: duration\n      });\n      instance.hide();\n\n      if (!instance.state.isDestroyed) {\n        instance.setProps({\n          duration: originalDuration\n        });\n      }\n    }\n  });\n};\n\n// every time the popper is destroyed (i.e. a new target), removing the styles\n// and causing transitions to break for singletons when the console is open, but\n// most notably for non-transform styles being used, `gpuAcceleration: false`.\n\nvar applyStylesModifier = Object.assign({}, applyStyles, {\n  effect: function effect(_ref) {\n    var state = _ref.state;\n    var initialStyles = {\n      popper: {\n        position: state.options.strategy,\n        left: '0',\n        top: '0',\n        margin: '0'\n      },\n      arrow: {\n        position: 'absolute'\n      },\n      reference: {}\n    };\n    Object.assign(state.elements.popper.style, initialStyles.popper);\n    state.styles = initialStyles;\n\n    if (state.elements.arrow) {\n      Object.assign(state.elements.arrow.style, initialStyles.arrow);\n    } // intentionally return no cleanup function\n    // return () => { ... }\n\n  }\n});\n\nvar createSingleton = function createSingleton(tippyInstances, optionalProps) {\n  var _optionalProps$popper;\n\n  if (optionalProps === void 0) {\n    optionalProps = {};\n  }\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    errorWhen(!Array.isArray(tippyInstances), ['The first argument passed to createSingleton() must be an array of', 'tippy instances. The passed value was', String(tippyInstances)].join(' '));\n  }\n\n  var individualInstances = tippyInstances;\n  var references = [];\n  var triggerTargets = [];\n  var currentTarget;\n  var overrides = optionalProps.overrides;\n  var interceptSetPropsCleanups = [];\n  var shownOnCreate = false;\n\n  function setTriggerTargets() {\n    triggerTargets = individualInstances.map(function (instance) {\n      return normalizeToArray(instance.props.triggerTarget || instance.reference);\n    }).reduce(function (acc, item) {\n      return acc.concat(item);\n    }, []);\n  }\n\n  function setReferences() {\n    references = individualInstances.map(function (instance) {\n      return instance.reference;\n    });\n  }\n\n  function enableInstances(isEnabled) {\n    individualInstances.forEach(function (instance) {\n      if (isEnabled) {\n        instance.enable();\n      } else {\n        instance.disable();\n      }\n    });\n  }\n\n  function interceptSetProps(singleton) {\n    return individualInstances.map(function (instance) {\n      var originalSetProps = instance.setProps;\n\n      instance.setProps = function (props) {\n        originalSetProps(props);\n\n        if (instance.reference === currentTarget) {\n          singleton.setProps(props);\n        }\n      };\n\n      return function () {\n        instance.setProps = originalSetProps;\n      };\n    });\n  } // have to pass singleton, as it maybe undefined on first call\n\n\n  function prepareInstance(singleton, target) {\n    var index = triggerTargets.indexOf(target); // bail-out\n\n    if (target === currentTarget) {\n      return;\n    }\n\n    currentTarget = target;\n    var overrideProps = (overrides || []).concat('content').reduce(function (acc, prop) {\n      acc[prop] = individualInstances[index].props[prop];\n      return acc;\n    }, {});\n    singleton.setProps(Object.assign({}, overrideProps, {\n      getReferenceClientRect: typeof overrideProps.getReferenceClientRect === 'function' ? overrideProps.getReferenceClientRect : function () {\n        var _references$index;\n\n        return (_references$index = references[index]) == null ? void 0 : _references$index.getBoundingClientRect();\n      }\n    }));\n  }\n\n  enableInstances(false);\n  setReferences();\n  setTriggerTargets();\n  var plugin = {\n    fn: function fn() {\n      return {\n        onDestroy: function onDestroy() {\n          enableInstances(true);\n        },\n        onHidden: function onHidden() {\n          currentTarget = null;\n        },\n        onClickOutside: function onClickOutside(instance) {\n          if (instance.props.showOnCreate && !shownOnCreate) {\n            shownOnCreate = true;\n            currentTarget = null;\n          }\n        },\n        onShow: function onShow(instance) {\n          if (instance.props.showOnCreate && !shownOnCreate) {\n            shownOnCreate = true;\n            prepareInstance(instance, references[0]);\n          }\n        },\n        onTrigger: function onTrigger(instance, event) {\n          prepareInstance(instance, event.currentTarget);\n        }\n      };\n    }\n  };\n  var singleton = tippy(div(), Object.assign({}, removeProperties(optionalProps, ['overrides']), {\n    plugins: [plugin].concat(optionalProps.plugins || []),\n    triggerTarget: triggerTargets,\n    popperOptions: Object.assign({}, optionalProps.popperOptions, {\n      modifiers: [].concat(((_optionalProps$popper = optionalProps.popperOptions) == null ? void 0 : _optionalProps$popper.modifiers) || [], [applyStylesModifier])\n    })\n  }));\n  var originalShow = singleton.show;\n\n  singleton.show = function (target) {\n    originalShow(); // first time, showOnCreate or programmatic call with no params\n    // default to showing first instance\n\n    if (!currentTarget && target == null) {\n      return prepareInstance(singleton, references[0]);\n    } // triggered from event (do nothing as prepareInstance already called by onTrigger)\n    // programmatic call with no params when already visible (do nothing again)\n\n\n    if (currentTarget && target == null) {\n      return;\n    } // target is index of instance\n\n\n    if (typeof target === 'number') {\n      return references[target] && prepareInstance(singleton, references[target]);\n    } // target is a child tippy instance\n\n\n    if (individualInstances.indexOf(target) >= 0) {\n      var ref = target.reference;\n      return prepareInstance(singleton, ref);\n    } // target is a ReferenceElement\n\n\n    if (references.indexOf(target) >= 0) {\n      return prepareInstance(singleton, target);\n    }\n  };\n\n  singleton.showNext = function () {\n    var first = references[0];\n\n    if (!currentTarget) {\n      return singleton.show(0);\n    }\n\n    var index = references.indexOf(currentTarget);\n    singleton.show(references[index + 1] || first);\n  };\n\n  singleton.showPrevious = function () {\n    var last = references[references.length - 1];\n\n    if (!currentTarget) {\n      return singleton.show(last);\n    }\n\n    var index = references.indexOf(currentTarget);\n    var target = references[index - 1] || last;\n    singleton.show(target);\n  };\n\n  var originalSetProps = singleton.setProps;\n\n  singleton.setProps = function (props) {\n    overrides = props.overrides || overrides;\n    originalSetProps(props);\n  };\n\n  singleton.setInstances = function (nextInstances) {\n    enableInstances(true);\n    interceptSetPropsCleanups.forEach(function (fn) {\n      return fn();\n    });\n    individualInstances = nextInstances;\n    enableInstances(false);\n    setReferences();\n    setTriggerTargets();\n    interceptSetPropsCleanups = interceptSetProps(singleton);\n    singleton.setProps({\n      triggerTarget: triggerTargets\n    });\n  };\n\n  interceptSetPropsCleanups = interceptSetProps(singleton);\n  return singleton;\n};\n\nvar BUBBLING_EVENTS_MAP = {\n  mouseover: 'mouseenter',\n  focusin: 'focus',\n  click: 'click'\n};\n/**\n * Creates a delegate instance that controls the creation of tippy instances\n * for child elements (`target` CSS selector).\n */\n\nfunction delegate(targets, props) {\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== \"production\") {\n    errorWhen(!(props && props.target), ['You must specity a `target` prop indicating a CSS selector string matching', 'the target elements that should receive a tippy.'].join(' '));\n  }\n\n  var listeners = [];\n  var childTippyInstances = [];\n  var disabled = false;\n  var target = props.target;\n  var nativeProps = removeProperties(props, ['target']);\n  var parentProps = Object.assign({}, nativeProps, {\n    trigger: 'manual',\n    touch: false\n  });\n  var childProps = Object.assign({\n    touch: defaultProps.touch\n  }, nativeProps, {\n    showOnCreate: true\n  });\n  var returnValue = tippy(targets, parentProps);\n  var normalizedReturnValue = normalizeToArray(returnValue);\n\n  function onTrigger(event) {\n    if (!event.target || disabled) {\n      return;\n    }\n\n    var targetNode = event.target.closest(target);\n\n    if (!targetNode) {\n      return;\n    } // Get relevant trigger with fallbacks:\n    // 1. Check `data-tippy-trigger` attribute on target node\n    // 2. Fallback to `trigger` passed to `delegate()`\n    // 3. Fallback to `defaultProps.trigger`\n\n\n    var trigger = targetNode.getAttribute('data-tippy-trigger') || props.trigger || defaultProps.trigger; // @ts-ignore\n\n    if (targetNode._tippy) {\n      return;\n    }\n\n    if (event.type === 'touchstart' && typeof childProps.touch === 'boolean') {\n      return;\n    }\n\n    if (event.type !== 'touchstart' && trigger.indexOf(BUBBLING_EVENTS_MAP[event.type]) < 0) {\n      return;\n    }\n\n    var instance = tippy(targetNode, childProps);\n\n    if (instance) {\n      childTippyInstances = childTippyInstances.concat(instance);\n    }\n  }\n\n  function on(node, eventType, handler, options) {\n    if (options === void 0) {\n      options = false;\n    }\n\n    node.addEventListener(eventType, handler, options);\n    listeners.push({\n      node: node,\n      eventType: eventType,\n      handler: handler,\n      options: options\n    });\n  }\n\n  function addEventListeners(instance) {\n    var reference = instance.reference;\n    on(reference, 'touchstart', onTrigger, TOUCH_OPTIONS);\n    on(reference, 'mouseover', onTrigger);\n    on(reference, 'focusin', onTrigger);\n    on(reference, 'click', onTrigger);\n  }\n\n  function removeEventListeners() {\n    listeners.forEach(function (_ref) {\n      var node = _ref.node,\n          eventType = _ref.eventType,\n          handler = _ref.handler,\n          options = _ref.options;\n      node.removeEventListener(eventType, handler, options);\n    });\n    listeners = [];\n  }\n\n  function applyMutations(instance) {\n    var originalDestroy = instance.destroy;\n    var originalEnable = instance.enable;\n    var originalDisable = instance.disable;\n\n    instance.destroy = function (shouldDestroyChildInstances) {\n      if (shouldDestroyChildInstances === void 0) {\n        shouldDestroyChildInstances = true;\n      }\n\n      if (shouldDestroyChildInstances) {\n        childTippyInstances.forEach(function (instance) {\n          instance.destroy();\n        });\n      }\n\n      childTippyInstances = [];\n      removeEventListeners();\n      originalDestroy();\n    };\n\n    instance.enable = function () {\n      originalEnable();\n      childTippyInstances.forEach(function (instance) {\n        return instance.enable();\n      });\n      disabled = false;\n    };\n\n    instance.disable = function () {\n      originalDisable();\n      childTippyInstances.forEach(function (instance) {\n        return instance.disable();\n      });\n      disabled = true;\n    };\n\n    addEventListeners(instance);\n  }\n\n  normalizedReturnValue.forEach(applyMutations);\n  return returnValue;\n}\n\nvar animateFill = {\n  name: 'animateFill',\n  defaultValue: false,\n  fn: function fn(instance) {\n    var _instance$props$rende;\n\n    // @ts-ignore\n    if (!((_instance$props$rende = instance.props.render) != null && _instance$props$rende.$$tippy)) {\n      if (process.env.NODE_ENV !== \"production\") {\n        errorWhen(instance.props.animateFill, 'The `animateFill` plugin requires the default render function.');\n      }\n\n      return {};\n    }\n\n    var _getChildren = getChildren(instance.popper),\n        box = _getChildren.box,\n        content = _getChildren.content;\n\n    var backdrop = instance.props.animateFill ? createBackdropElement() : null;\n    return {\n      onCreate: function onCreate() {\n        if (backdrop) {\n          box.insertBefore(backdrop, box.firstElementChild);\n          box.setAttribute('data-animatefill', '');\n          box.style.overflow = 'hidden';\n          instance.setProps({\n            arrow: false,\n            animation: 'shift-away'\n          });\n        }\n      },\n      onMount: function onMount() {\n        if (backdrop) {\n          var transitionDuration = box.style.transitionDuration;\n          var duration = Number(transitionDuration.replace('ms', '')); // The content should fade in after the backdrop has mostly filled the\n          // tooltip element. `clip-path` is the other alternative but is not\n          // well-supported and is buggy on some devices.\n\n          content.style.transitionDelay = Math.round(duration / 10) + \"ms\";\n          backdrop.style.transitionDuration = transitionDuration;\n          setVisibilityState([backdrop], 'visible');\n        }\n      },\n      onShow: function onShow() {\n        if (backdrop) {\n          backdrop.style.transitionDuration = '0ms';\n        }\n      },\n      onHide: function onHide() {\n        if (backdrop) {\n          setVisibilityState([backdrop], 'hidden');\n        }\n      }\n    };\n  }\n};\n\nfunction createBackdropElement() {\n  var backdrop = div();\n  backdrop.className = BACKDROP_CLASS;\n  setVisibilityState([backdrop], 'hidden');\n  return backdrop;\n}\n\nvar mouseCoords = {\n  clientX: 0,\n  clientY: 0\n};\nvar activeInstances = [];\n\nfunction storeMouseCoords(_ref) {\n  var clientX = _ref.clientX,\n      clientY = _ref.clientY;\n  mouseCoords = {\n    clientX: clientX,\n    clientY: clientY\n  };\n}\n\nfunction addMouseCoordsListener(doc) {\n  doc.addEventListener('mousemove', storeMouseCoords);\n}\n\nfunction removeMouseCoordsListener(doc) {\n  doc.removeEventListener('mousemove', storeMouseCoords);\n}\n\nvar followCursor = {\n  name: 'followCursor',\n  defaultValue: false,\n  fn: function fn(instance) {\n    var reference = instance.reference;\n    var doc = getOwnerDocument(instance.props.triggerTarget || reference);\n    var isInternalUpdate = false;\n    var wasFocusEvent = false;\n    var isUnmounted = true;\n    var prevProps = instance.props;\n\n    function getIsInitialBehavior() {\n      return instance.props.followCursor === 'initial' && instance.state.isVisible;\n    }\n\n    function addListener() {\n      doc.addEventListener('mousemove', onMouseMove);\n    }\n\n    function removeListener() {\n      doc.removeEventListener('mousemove', onMouseMove);\n    }\n\n    function unsetGetReferenceClientRect() {\n      isInternalUpdate = true;\n      instance.setProps({\n        getReferenceClientRect: null\n      });\n      isInternalUpdate = false;\n    }\n\n    function onMouseMove(event) {\n      // If the instance is interactive, avoid updating the position unless it's\n      // over the reference element\n      var isCursorOverReference = event.target ? reference.contains(event.target) : true;\n      var followCursor = instance.props.followCursor;\n      var clientX = event.clientX,\n          clientY = event.clientY;\n      var rect = reference.getBoundingClientRect();\n      var relativeX = clientX - rect.left;\n      var relativeY = clientY - rect.top;\n\n      if (isCursorOverReference || !instance.props.interactive) {\n        instance.setProps({\n          // @ts-ignore - unneeded DOMRect properties\n          getReferenceClientRect: function getReferenceClientRect() {\n            var rect = reference.getBoundingClientRect();\n            var x = clientX;\n            var y = clientY;\n\n            if (followCursor === 'initial') {\n              x = rect.left + relativeX;\n              y = rect.top + relativeY;\n            }\n\n            var top = followCursor === 'horizontal' ? rect.top : y;\n            var right = followCursor === 'vertical' ? rect.right : x;\n            var bottom = followCursor === 'horizontal' ? rect.bottom : y;\n            var left = followCursor === 'vertical' ? rect.left : x;\n            return {\n              width: right - left,\n              height: bottom - top,\n              top: top,\n              right: right,\n              bottom: bottom,\n              left: left\n            };\n          }\n        });\n      }\n    }\n\n    function create() {\n      if (instance.props.followCursor) {\n        activeInstances.push({\n          instance: instance,\n          doc: doc\n        });\n        addMouseCoordsListener(doc);\n      }\n    }\n\n    function destroy() {\n      activeInstances = activeInstances.filter(function (data) {\n        return data.instance !== instance;\n      });\n\n      if (activeInstances.filter(function (data) {\n        return data.doc === doc;\n      }).length === 0) {\n        removeMouseCoordsListener(doc);\n      }\n    }\n\n    return {\n      onCreate: create,\n      onDestroy: destroy,\n      onBeforeUpdate: function onBeforeUpdate() {\n        prevProps = instance.props;\n      },\n      onAfterUpdate: function onAfterUpdate(_, _ref2) {\n        var followCursor = _ref2.followCursor;\n\n        if (isInternalUpdate) {\n          return;\n        }\n\n        if (followCursor !== undefined && prevProps.followCursor !== followCursor) {\n          destroy();\n\n          if (followCursor) {\n            create();\n\n            if (instance.state.isMounted && !wasFocusEvent && !getIsInitialBehavior()) {\n              addListener();\n            }\n          } else {\n            removeListener();\n            unsetGetReferenceClientRect();\n          }\n        }\n      },\n      onMount: function onMount() {\n        if (instance.props.followCursor && !wasFocusEvent) {\n          if (isUnmounted) {\n            onMouseMove(mouseCoords);\n            isUnmounted = false;\n          }\n\n          if (!getIsInitialBehavior()) {\n            addListener();\n          }\n        }\n      },\n      onTrigger: function onTrigger(_, event) {\n        if (isMouseEvent(event)) {\n          mouseCoords = {\n            clientX: event.clientX,\n            clientY: event.clientY\n          };\n        }\n\n        wasFocusEvent = event.type === 'focus';\n      },\n      onHidden: function onHidden() {\n        if (instance.props.followCursor) {\n          unsetGetReferenceClientRect();\n          removeListener();\n          isUnmounted = true;\n        }\n      }\n    };\n  }\n};\n\nfunction getProps(props, modifier) {\n  var _props$popperOptions;\n\n  return {\n    popperOptions: Object.assign({}, props.popperOptions, {\n      modifiers: [].concat((((_props$popperOptions = props.popperOptions) == null ? void 0 : _props$popperOptions.modifiers) || []).filter(function (_ref) {\n        var name = _ref.name;\n        return name !== modifier.name;\n      }), [modifier])\n    })\n  };\n}\n\nvar inlinePositioning = {\n  name: 'inlinePositioning',\n  defaultValue: false,\n  fn: function fn(instance) {\n    var reference = instance.reference;\n\n    function isEnabled() {\n      return !!instance.props.inlinePositioning;\n    }\n\n    var placement;\n    var cursorRectIndex = -1;\n    var isInternalUpdate = false;\n    var triedPlacements = [];\n    var modifier = {\n      name: 'tippyInlinePositioning',\n      enabled: true,\n      phase: 'afterWrite',\n      fn: function fn(_ref2) {\n        var state = _ref2.state;\n\n        if (isEnabled()) {\n          if (triedPlacements.indexOf(state.placement) !== -1) {\n            triedPlacements = [];\n          }\n\n          if (placement !== state.placement && triedPlacements.indexOf(state.placement) === -1) {\n            triedPlacements.push(state.placement);\n            instance.setProps({\n              // @ts-ignore - unneeded DOMRect properties\n              getReferenceClientRect: function getReferenceClientRect() {\n                return _getReferenceClientRect(state.placement);\n              }\n            });\n          }\n\n          placement = state.placement;\n        }\n      }\n    };\n\n    function _getReferenceClientRect(placement) {\n      return getInlineBoundingClientRect(getBasePlacement(placement), reference.getBoundingClientRect(), arrayFrom(reference.getClientRects()), cursorRectIndex);\n    }\n\n    function setInternalProps(partialProps) {\n      isInternalUpdate = true;\n      instance.setProps(partialProps);\n      isInternalUpdate = false;\n    }\n\n    function addModifier() {\n      if (!isInternalUpdate) {\n        setInternalProps(getProps(instance.props, modifier));\n      }\n    }\n\n    return {\n      onCreate: addModifier,\n      onAfterUpdate: addModifier,\n      onTrigger: function onTrigger(_, event) {\n        if (isMouseEvent(event)) {\n          var rects = arrayFrom(instance.reference.getClientRects());\n          var cursorRect = rects.find(function (rect) {\n            return rect.left - 2 <= event.clientX && rect.right + 2 >= event.clientX && rect.top - 2 <= event.clientY && rect.bottom + 2 >= event.clientY;\n          });\n          var index = rects.indexOf(cursorRect);\n          cursorRectIndex = index > -1 ? index : cursorRectIndex;\n        }\n      },\n      onHidden: function onHidden() {\n        cursorRectIndex = -1;\n      }\n    };\n  }\n};\nfunction getInlineBoundingClientRect(currentBasePlacement, boundingRect, clientRects, cursorRectIndex) {\n  // Not an inline element, or placement is not yet known\n  if (clientRects.length < 2 || currentBasePlacement === null) {\n    return boundingRect;\n  } // There are two rects and they are disjoined\n\n\n  if (clientRects.length === 2 && cursorRectIndex >= 0 && clientRects[0].left > clientRects[1].right) {\n    return clientRects[cursorRectIndex] || boundingRect;\n  }\n\n  switch (currentBasePlacement) {\n    case 'top':\n    case 'bottom':\n      {\n        var firstRect = clientRects[0];\n        var lastRect = clientRects[clientRects.length - 1];\n        var isTop = currentBasePlacement === 'top';\n        var top = firstRect.top;\n        var bottom = lastRect.bottom;\n        var left = isTop ? firstRect.left : lastRect.left;\n        var right = isTop ? firstRect.right : lastRect.right;\n        var width = right - left;\n        var height = bottom - top;\n        return {\n          top: top,\n          bottom: bottom,\n          left: left,\n          right: right,\n          width: width,\n          height: height\n        };\n      }\n\n    case 'left':\n    case 'right':\n      {\n        var minLeft = Math.min.apply(Math, clientRects.map(function (rects) {\n          return rects.left;\n        }));\n        var maxRight = Math.max.apply(Math, clientRects.map(function (rects) {\n          return rects.right;\n        }));\n        var measureRects = clientRects.filter(function (rect) {\n          return currentBasePlacement === 'left' ? rect.left === minLeft : rect.right === maxRight;\n        });\n        var _top = measureRects[0].top;\n        var _bottom = measureRects[measureRects.length - 1].bottom;\n        var _left = minLeft;\n        var _right = maxRight;\n\n        var _width = _right - _left;\n\n        var _height = _bottom - _top;\n\n        return {\n          top: _top,\n          bottom: _bottom,\n          left: _left,\n          right: _right,\n          width: _width,\n          height: _height\n        };\n      }\n\n    default:\n      {\n        return boundingRect;\n      }\n  }\n}\n\nvar sticky = {\n  name: 'sticky',\n  defaultValue: false,\n  fn: function fn(instance) {\n    var reference = instance.reference,\n        popper = instance.popper;\n\n    function getReference() {\n      return instance.popperInstance ? instance.popperInstance.state.elements.reference : reference;\n    }\n\n    function shouldCheck(value) {\n      return instance.props.sticky === true || instance.props.sticky === value;\n    }\n\n    var prevRefRect = null;\n    var prevPopRect = null;\n\n    function updatePosition() {\n      var currentRefRect = shouldCheck('reference') ? getReference().getBoundingClientRect() : null;\n      var currentPopRect = shouldCheck('popper') ? popper.getBoundingClientRect() : null;\n\n      if (currentRefRect && areRectsDifferent(prevRefRect, currentRefRect) || currentPopRect && areRectsDifferent(prevPopRect, currentPopRect)) {\n        if (instance.popperInstance) {\n          instance.popperInstance.update();\n        }\n      }\n\n      prevRefRect = currentRefRect;\n      prevPopRect = currentPopRect;\n\n      if (instance.state.isMounted) {\n        requestAnimationFrame(updatePosition);\n      }\n    }\n\n    return {\n      onMount: function onMount() {\n        if (instance.props.sticky) {\n          updatePosition();\n        }\n      }\n    };\n  }\n};\n\nfunction areRectsDifferent(rectA, rectB) {\n  if (rectA && rectB) {\n    return rectA.top !== rectB.top || rectA.right !== rectB.right || rectA.bottom !== rectB.bottom || rectA.left !== rectB.left;\n  }\n\n  return true;\n}\n\ntippy.setDefaultProps({\n  render: render\n});\n\nexport default tippy;\nexport { animateFill, createSingleton, delegate, followCursor, hideAll, inlinePositioning, ROUND_ARROW as roundArrow, sticky };\n//# sourceMappingURL=tippy.esm.js.map\n","import { ifError } from \"assert\";\r\nimport tippy from \"tippy.js\";\r\nimport Redline from \"../redline\";\r\nimport { IClosestRedlineVisual, IRedlineVisual, ITuft, RedlineMethod, RedlineTyp, TypeConstant } from \"./interface\";\r\nimport { IPoint, Point } from \"./pointDefs\";\r\nimport { SelBox } from \"./selBox\";\r\nimport { Transform } from \"./transform\";\r\n\r\nconst qHilite:any=\"rdl-geom-selector-hilite\";\r\nconst addHiliteToVisual=(e:HTMLElement)=>{\r\n  const ee=e.querySelectorAll(\"*[style]\");\r\n  ee.forEach(el=>{\r\n    el.classList.add(qHilite);\r\n  })\r\n  if(e.hasAttribute(\"style\")){\r\n    e.classList.add(qHilite);\r\n  }\r\n}\r\nconst removeHiliteFromVisual=(e:HTMLElement)=>{\r\n  const ee=e.querySelectorAll(\"*.\"+qHilite);\r\n  ee.forEach(el=>{\r\n    el.classList.remove(\"rdl-geom-selector-hilite\");\r\n  })\r\n  if(e.classList.contains(qHilite)){\r\n    e.classList.remove(qHilite);\r\n  }\r\n}\r\nexport const showSelectionContext = (tuft: ITuft,\r\n  sel: IClosestRedlineVisual[], ev: PointerEvent): void => {\r\n  let pos: IPoint;\r\n  let r: Redline;\r\n  if (tuft) {\r\n    pos = tuft.center;\r\n    r = tuft.redline\r\n  } else {\r\n    if (sel.length < 1) {\r\n      return;\r\n    } else {\r\n      r = sel[0].visual.redline;\r\n    }\r\n  }\r\n\r\n  const pad: HTMLElement = r.panZoom.pad;\r\n  const id: string = \"015dc3b5-6c3d-45d5-b88b-ee188f9b0cf9\";\r\n  let p: IPoint = new Point(ev.clientX, ev.clientY)\r\n  if (!pos) {\r\n    pos = p;\r\n  }\r\n  let w: number = pad.parentElement.offsetWidth; // obratené zarovnanie\r\n  if (w - pos.x < 60) {\r\n    p.x -= 120\r\n  }\r\n\r\n  let content: string = `<ul id=\"${id}\" style=\"margin:0;pading:10px\"><li class=\"rdl-geom-selector\" _id=\"none\">none</li>\r\n  <li class=\"rdl-geom-selector\" _id=\"all\" ${r.curMethod === RedlineMethod.edit ? 'style=\"display:none\"' : \"\"}>all</li>`;\r\n  sel.forEach((e: IClosestRedlineVisual) => {\r\n    let li: String = `<li class=\"rdl-geom-selector\" _id=\"${e.visual._id}\">${TypeConstant[e.visual.type]}</li>`;\r\n    content += li;\r\n  });\r\n  content += \"</ul>\";\r\n  r.tippyContextInstance = tippy(pad, {\r\n    content,\r\n    allowHTML: true,\r\n    placement: 'left-start',\r\n    trigger: \"manual\",\r\n    interactive: true,\r\n    arrow: false,\r\n    offset: [p.y, p.x + 10],\r\n    onShown: function (instance) {\r\n      let ul: HTMLElement = document.getElementById(id);\r\n      let ee = ul.querySelectorAll(\"li\");\r\n      let selList: any = [];\r\n      let prep: boolean = false; // bráni viacnásobnému kliku\r\n      ee.forEach(e => {\r\n        e.addEventListener(\"click\", (ev: PointerEvent) => {\r\n          const _id: string = e.getAttribute(\"_id\");\r\n          instance.destroy();\r\n          r.tippyContextInstance = undefined;\r\n          selList.forEach(e => {\r\n            e.style.filter = \"\";\r\n            removeHiliteFromVisual(e);\r\n            e.removeAttribute(\"fill-opacity\");\r\n          })\r\n          switch (_id) {\r\n            case \"all\":\r\n              if (prep === false) {\r\n                sel.forEach(e => SelBox.create(e.visual))\r\n                prep = true\r\n              }\r\n              break;\r\n            case \"none\":\r\n              if (r.curMethod === RedlineMethod.edit && r.curVisual) {\r\n                r.mouseDownContinue(pos);\r\n              }\r\n              break;\r\n            default:\r\n              let v: IClosestRedlineVisual = sel.find(f => f.visual._id === _id)\r\n              if (v) {\r\n                if (r.curMethod === RedlineMethod.edit) {\r\n                  if (r.curVisual) {\r\n                    pos = Transform.transform2Window(v.closest.p, r.transform);\r\n                    tuft.updatePos(pos, true);\r\n                  } else if (r.curMethod === RedlineMethod.edit) {\r\n                    pos = Transform.transform2Window(v.closest.p, r.transform);\r\n                    if(tuft){\r\n                      tuft.updatePos(pos, true);\r\n                      SelBox.destroy(tuft.visual);\r\n                      SelBox.create(tuft.visual);\r\n                    } else{\r\n                      v.visual.isEdited=true;\r\n                      SelBox.create(v.visual);\r\n                    }\r\n                    \r\n                  } else if (r.curMethod === RedlineMethod.select) {\r\n                    SelBox.create(v.visual);\r\n                  }\r\n                } else if (r.curMethod === RedlineMethod.select) {\r\n                  SelBox.create(v.visual);\r\n                }\r\n              }\r\n              break;\r\n          }\r\n        })\r\n\r\n        const _id: string = e.getAttribute(\"_id\");\r\n        e.addEventListener(\"mouseover\", (ev: PointerEvent) => {\r\n          selList.forEach((el: HTMLElement) => {\r\n            if (el.getAttribute(\"_id\") === _id || _id === \"all\") {\r\n              el.style.filter = \"\";\r\n              //el.classList.add(\"rdl-geom-selector-hilite\");\r\n              addHiliteToVisual(el);\r\n            }\r\n            else {\r\n              el.style.filter = \"grayscale(1)\";\r\n              if (el.hasAttribute(\"stroke\")) {\r\n                el.classList.remove(\"rdl-geom-selector-hilite\");\r\n              }\r\n            }\r\n          })\r\n        })\r\n\r\n        if (e.hasAttribute(\"_id\")) {\r\n          const _id: string = e.getAttribute(\"_id\");\r\n          let curSel = r.rdlDock.querySelectorAll(`*[_id=\"${_id}\"]`);\r\n          curSel.forEach((el: HTMLElement) => {\r\n            el.style.filter = \"grayscale(1)\";\r\n            let test= r.rdl.visuals.find(f=>f._id===_id);\r\n            if(test.type!==RedlineTyp.redlinetext){\r\n              el.setAttribute(\"fill-opacity\", \"0\");\r\n            }\r\n            selList.push(el);\r\n          })\r\n        }\r\n\r\n      });\r\n    }\r\n  });\r\n  r.tippyContextInstance.setProps({\r\n    getReferenceClientRect: () => ({\r\n      x: 0,\r\n      y: 0,\r\n      toJSON: undefined,\r\n      width: 0,\r\n      height: 0,\r\n      top: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      right: 0,\r\n    }),\r\n  });\r\n\r\n  r.tippyContextInstance.show();\r\n  //});\r\n}","import { Transform } from \"./transform\";\r\nimport { IClosest, IClosestRedlineVisual, IRedlineVisual, ITuft, RedlineMethod, RedlineTyp, vertexType } from \"./interface\";\r\nimport { Distance, Round } from \"./helper\";\r\nimport { IBox, IClosestOnLine } from \"./interface\";\r\nimport { IPoint, Point } from \"./pointDefs\";\r\nimport Redline from \"../redline\";\r\nimport { SelBox } from \"./selBox\";\r\nimport { showSelectionContext } from \"./selectionContext\";\r\nimport { Tuft } from \"./tuft\";\r\nexport class LineGeom {\r\n    start: IPoint;\r\n    end: IPoint;\r\n    constructor(a: IPoint, b: IPoint) {\r\n        this.start = a;\r\n        this.end = b;\r\n    }\r\n}\r\nexport class CircleGeom {\r\n    center: IPoint;\r\n    radius: number;\r\n    constructor(center: IPoint, radius: number) {\r\n        this.center = center;\r\n        this.radius = radius;\r\n    }\r\n}\r\nexport class Geometry {\r\n    static DistPoint2Line(a: IPoint, b: IPoint, m: IPoint): number {\r\n        let u: IPoint = new Point(b.x - a.x, b.y - a.y);\r\n        let p: any = { a: u.y, b: -u.x, c: -(u.y * a.x - u.x * a.y) };\r\n        let d: number = (Math.abs(p.a * m.x + p.b * m.y + p.c) / Math.sqrt(p.a * p.a + p.b * p.b));\r\n        return d;\r\n    }\r\n    static ClosestPoint2Line(a: IPoint, b: IPoint, p: IPoint): IPoint {\r\n        let a_to_p: IPoint = new Point(p.x - a.x, p.y - a.y);\r\n        let a_to_b: IPoint = new Point(b.x - a.x, b.y - a.y);\r\n        let atb2: number = a_to_b.x ** 2 + a_to_b.y ** 2;\r\n        let atp_dot_atb: number = a_to_p.x * a_to_b.x + a_to_p.y * a_to_b.y;\r\n        let t: number = atp_dot_atb / atb2;\r\n        return new Point(a.x + a_to_b.x * t, a.y + a_to_b.y * t);\r\n    }\r\n    static ClosestPoint2Usecka(a: IPoint, b: IPoint, p: IPoint): IPoint {\r\n        let a_to_p: IPoint = new Point(p.x - a.x, p.y - a.y);\r\n        let a_to_b: IPoint = new Point(b.x - a.x, b.y - a.y);\r\n        let atb2: number = a_to_b.x ** 2 + a_to_b.y ** 2;\r\n        let atp_dot_atb: number = a_to_p.x * a_to_b.x + a_to_p.y * a_to_b.y;\r\n        let t: number = atp_dot_atb / atb2;\r\n        let test: IPoint = new Point(a.x + a_to_b.x * t, a.y + a_to_b.y * t);\r\n        let dStart: number = Distance(a, test);\r\n        let dEnd: number = Distance(b, test);\r\n        let length: number = Distance(a, b);\r\n        if (dStart > length || dEnd > length) {\r\n            if (dStart > dEnd) {\r\n                return b;\r\n            } else {\r\n                return a;\r\n            }\r\n        }\r\n        return test;\r\n    }\r\n    static ClosestPoint2LineArray(bb: IPoint[], b: IPoint, minVertex: number): IClosestOnLine {\r\n        let h: number = bb.length - 1;\r\n        let dist: number;\r\n        let min: IClosestOnLine;\r\n\r\n        for (let i: number = 0; i < h; i++) {\r\n            // snapovanie na koncove body\r\n            if (Distance(bb[i], b) <= minVertex) {\r\n                return { part: i, p: bb[i] };\r\n            }\r\n            if (Distance(bb[i + 1], b) <= minVertex) {\r\n                return { part: i + 1, p: bb[i + 1] };\r\n            }\r\n            // snapovanie na najblizsi bod na linii\r\n            let p: IPoint = this.ClosestPoint2Usecka(bb[i], bb[i + 1], b);\r\n            let curDist: number = Distance(b, p);\r\n            if (i === 0) {\r\n                min = { p: p, part: i };\r\n                dist = curDist;\r\n            } else {\r\n                if (curDist < dist) {\r\n                    dist = curDist;\r\n                    min = { p: p, part: i };\r\n                }\r\n            }\r\n        }\r\n        return min;\r\n    }\r\n\r\n    static ClosestPointOnCircle(circle: CircleGeom, p: IPoint): IPoint {\r\n        let dist: number = Distance(circle.center, p);\r\n        if (dist < circle.radius) { // bod v kruhu musim posunut mimo kruhu\r\n            let p1: IPoint = circle.center.Clone();\r\n            p1.x += circle.radius + 1;\r\n            let u: number = Math.atan2(p.y - circle.center.y, p.x - circle.center.x);\r\n            p = this.Rotate(circle.center, u, p1);\r\n        }\r\n\r\n        let ln: LineGeom = new LineGeom(circle.center, p);\r\n\r\n\r\n\r\n        let ret: IPoint[] = this.InteceptCircleLineSeg(circle, ln);\r\n        if (ret) {\r\n            return ret[0];\r\n        }\r\n        return null;\r\n    }\r\n    static ClosestPointOnText(origin: IPoint, outlinePoints: IPoint[], p: IPoint): IPoint {\r\n        // vyberá najbližší bod na texte (každý text má 4 okrajové + 1 origin)\r\n        let bb: IPoint[] = outlinePoints;\r\n        bb.push(origin);\r\n        let minDist: number = -1;\r\n        let ret:IPoint;\r\n        bb.forEach((b: IPoint) => {\r\n            let dist: number = Distance(b, p);\r\n            if (!ret) {\r\n                ret=b;\r\n                minDist = dist;\r\n            } else{\r\n                if(minDist>=dist){\r\n                    ret=b;\r\n                    minDist=dist;\r\n                }\r\n            }\r\n        });\r\n        return ret;\r\n    }\r\n    // https://stackoverflow.com/questions/37224912/circle-line-segment-collision/37225895\r\n    static InteceptCircleLineSeg(circle: CircleGeom, line: LineGeom): Point[] {\r\n        var a: number, b: number, c: number, d: number, u1: number, u2: number;\r\n        let ret: Point[] = [];\r\n        let v1: IPoint = new Point(line.end.x - line.start.x, line.end.y - line.start.y);\r\n        let v2: IPoint = new Point(line.start.x - circle.center.x, line.start.y - circle.center.y);\r\n        b = (v1.x * v2.x + v1.y * v2.y);\r\n        c = 2 * (v1.x * v1.x + v1.y * v1.y);\r\n        b *= -2;\r\n        d = Math.sqrt(b * b - 2 * c * (v2.x * v2.x + v2.y * v2.y - circle.radius * circle.radius));\r\n        if (isNaN(d)) { // no intercept\r\n            return [];\r\n        }\r\n        u1 = (b - d) / c;  // these represent the unit distance of point one and two on the line\r\n        u2 = (b + d) / c;\r\n        if (u1 <= 1 && u1 >= 0) {  // add point if on the line segment\r\n            ret.push(new Point(line.start.x + v1.x * u1, line.start.y + v1.y * u1));\r\n        }\r\n        if (u2 <= 1 && u2 >= 0) {  // second add point if on the line segment\r\n            ret.push(new Point(line.start.x + v1.x * u2, line.start.y + v1.y * u2));\r\n        }\r\n        return ret;\r\n    }\r\n    static Rotate(origin: IPoint, angle: number, b: IPoint): IPoint {\r\n        if (angle === 0) {\r\n            return b;\r\n        }\r\n        const s: number = Math.sin(angle);\r\n        const c: number = Math.cos(angle);\r\n        const p: IPoint = new Point(b.x - origin.x, b.y - origin.y);\r\n        const x: number = p.x * c - p.y * s;\r\n        const y: number = p.x * s + p.y * c;\r\n        return new Point(origin.x + x, origin.y + y);\r\n    }\r\n    static Angle(p1: IPoint, p2: IPoint): number {\r\n        const a: number = Round(p2.x - p1.x, 6);\r\n        const b: number = Round(p2.y - p1.y, 6);\r\n        if (a === 0 && b === 0) {\r\n            return 0;\r\n        }\r\n        if (a === 0 && b > 0) {\r\n            return Math.PI / 2;\r\n        }\r\n        if (a === 0 && b < 0) {\r\n            return Math.PI * 3 / 2;\r\n        }\r\n        if (a > 0 && b === 0) {\r\n            return 0;\r\n        }\r\n        if (a < 0 && b === 0) {\r\n            return Math.PI;\r\n        }\r\n        let u: number = Math.atan(b / a);\r\n        if (a < 0) {\r\n            // 2 a 3 kvadrant\r\n            u += Math.PI;\r\n        } else if (a > 0 && b < 0) {\r\n            //4 kvadrant\r\n            u += 2 * Math.PI;\r\n        }\r\n        return u;\r\n    }\r\n    static ScaleByOrigin(origin: IPoint, b: IPoint, scl: number): IPoint {\r\n        const d = Distance(origin, b) * scl;\r\n        const u = this.Angle(origin, b);\r\n        const ret: IPoint = new Point(\r\n            origin.x + Math.cos(u) * d,\r\n            origin.y + Math.sin(u) * d\r\n        )\r\n        return ret;\r\n    }\r\n\r\n    static pointInPolygon(polygon: IPoint[], point: IPoint) {\r\n        //https://www.algorithms-and-technologies.com/point_in_polygon/javascript\r\n        //A point is in a polygon if a line from the point to infinity crosses the polygon an odd number of times\r\n        let odd = false;\r\n        //For each edge (In this case for each point of the polygon and the previous one)\r\n        for (let i = 0, j = polygon.length - 1; i < polygon.length; i++) {\r\n            //If a line from the point into infinity crosses this edge\r\n            if (((polygon[i].y > point.y) !== (polygon[j].y > point.y)) // One point needs to be above, one below our y coordinate\r\n                // ...and the edge doesn't cross our Y corrdinate before our x coordinate (but between our x coordinate and infinity)\r\n                && (point.x < ((polygon[j].x - polygon[i].x) * (point.y - polygon[i].y) / (polygon[j].y - polygon[i].y) + polygon[i].x))) {\r\n                // Invert odd\r\n                odd = !odd;\r\n            }\r\n            j = i;\r\n\r\n        }\r\n        //If the number of crossings was odd, the point is in the polygon\r\n        return odd;\r\n    };\r\n    static testInRange = (p: IPoint, rg: IBox, bufer): boolean => {\r\n        let ret: boolean = false;\r\n        let r: IBox = {\r\n            origin: new Point(rg.origin.x - bufer, rg.origin.y - bufer),\r\n            width: rg.width + 2 * bufer,\r\n            height: rg.height + 2 * bufer\r\n        }\r\n\r\n        if (r.origin.x <= p.x && r.origin.y <= p.y &&\r\n            r.origin.x + r.width >= p.x &&\r\n            r.origin.y + r.height >= p.y) {\r\n            ret = true;\r\n        }\r\n        return ret;\r\n    }\r\n    static closestVisuals(p: IPoint, r: Redline, bufer: number = 0, pReal?: IPoint): IClosestRedlineVisual[] {\r\n        let test: IRedlineVisual[] = r.rdl.visuals.filter(\r\n            f => !f.isEdited && Geometry.testInRange(p, f.range, r.buffer));\r\n        bufer = (bufer === 0) ? Transform.scale2Real(r.buffer, r.transform.scl) : bufer;\r\n        let sel: IClosestRedlineVisual[] = [];\r\n        pReal = (pReal) ? pReal : Transform.transform2Real(p, r.transform);\r\n\r\n        test.forEach((e: IRedlineVisual) => {\r\n            let b: IPoint | null = e.getClosestPoint(pReal, bufer);\r\n            if (b) {\r\n                sel.push({ visual: e, closest: { p: b, d: Distance(pReal, b) } });\r\n            }\r\n        });\r\n        return sel;\r\n    }\r\n    static selectByPosition(p: IPoint, ev: PointerEvent, r: Redline, mouseContinue: boolean, tuft: ITuft): void {\r\n        let pReal: IPoint = Transform.transform2Real(p, r.transform);\r\n        let bufer: number = Transform.scale2Real(r.buffer, r.transform.scl);\r\n        let sel: IClosestRedlineVisual[] = Geometry.closestVisuals(p, r, bufer, pReal);\r\n        if (r.pin) {\r\n            let selfClosest: IClosest | null = r.curVisual.getSelfClosestPoint(pReal, bufer, r.curVisual.points.length - 1);\r\n            if (selfClosest) {\r\n                sel.push({ visual: r.curVisual, closest: selfClosest });\r\n            }\r\n            if (sel.length === 1) {\r\n                p = Transform.transform2Window(sel[0].closest.p, r.transform);\r\n                r.mouseDownContinue(p);\r\n                return;\r\n            }\r\n        }\r\n        if (sel.length < 1) {\r\n            if (mouseContinue) {\r\n                r.mouseDownContinue(p);\r\n            }\r\n        } else if (sel.length === 1) {\r\n            if (mouseContinue) {\r\n                const pt: IPoint = Transform.transform2Window(sel[0].closest.p, r.transform);\r\n                if (tuft) {\r\n                    tuft.center = pt;\r\n                    tuft.visual.dynamic(tuft);\r\n                } else {\r\n                    r.mouseDownContinue(pt);\r\n                }\r\n            } else {\r\n                if (r.curMethod === RedlineMethod.edit && r.curType === RedlineTyp.none) {\r\n                    r.fillTextDialog=true;\r\n                    sel[0].visual.isEdited = true;\r\n                    sel[0].visual.snapPoint = sel[0].closest.p;\r\n                }\r\n                SelBox.create(sel[0].visual);\r\n            }\r\n        } else {\r\n            showSelectionContext(tuft, sel, ev);\r\n        }\r\n    }\r\n}","import Redline from \"../redline\";\r\nimport { IClosest, IClosestRedlineVisual, IRedlineVisual, ITuft, vertexType } from \"./interface\";\r\nimport { Geometry } from \"./geometry\";\r\nimport { CreateSvgObject } from \"./helper\";\r\nimport { IRedline, NodeName } from \"./interface\";\r\nimport { IPoint, Point } from \"./pointDefs\";\r\nimport { SelBox } from \"./selBox\";\r\nimport { showSelectionContext } from \"./selectionContext\";\r\nimport { Transform } from \"./transform\";\r\nexport const RdlTuftRadius: number = 15;\r\nexport class Tuft implements ITuft {\r\n  type: vertexType;\r\n  redline: Redline;\r\n  target: HTMLElement;\r\n  pad: HTMLElement;\r\n  visual: IRedlineVisual;\r\n  style?: string;\r\n  center: IPoint;\r\n  idx: number;\r\n  timer: any = null;\r\n  dynamic: boolean = false;\r\n  lastPoint: boolean = false;\r\n  finalized: boolean = false;\r\n  makeTarget(c: IPoint, _id: string): HTMLElement {\r\n    // if (!style) {\r\n    //   style = \"fill:yellow;fill-opacity:0.3;stroke:green;stroke-width:1;stroke-dasharray:3 3\";\r\n    // }\r\n    return CreateSvgObject(NodeName.circle, {\r\n      class: \"tuft-point\",\r\n      cx: c.x,\r\n      cy: c.y,\r\n      r: RdlTuftRadius,\r\n      _id,\r\n      \"rdl-vertex-type\": vertexType[this.type]\r\n    });\r\n  }\r\n  draw(winPoint: IPoint): void {\r\n    this.target.setAttribute(\"cx\", winPoint.x + \"\");\r\n    this.target.setAttribute(\"cy\", winPoint.y + \"\");\r\n  }\r\n  updatePos(winPoint: IPoint, dynamic: boolean): void {\r\n    this.dynamic = dynamic;\r\n    this.center = winPoint;\r\n    this.draw(this.center);\r\n    if (dynamic) {\r\n      if (this.lastPoint) {\r\n        this.idx = this.visual.points.length - 1;\r\n      }\r\n      this.visual.dynamic(this);\r\n    }\r\n  }\r\n\r\n  finalize(ev: PointerEvent): void {\r\n    let r: Redline = this.redline;\r\n    if (this.visual.isEdited) {\r\n\r\n      this.target.remove()\r\n      SelBox.create(this.visual);\r\n    }\r\n    if (ev && !this.finalized && this.redline.snap) {\r\n      this.finalized = true;\r\n      let p: IPoint;\r\n      let sel: any = Geometry.closestVisuals(this.center, r);\r\n      let selfPoint: IClosest = this.visual.getSelfClosestPoint(\r\n        Transform.transform2Real(this.center, r.transform),\r\n        Transform.scale2Real(r.buffer, r.transform.scl),\r\n        this.idx);\r\n      if (selfPoint) {\r\n        sel.push({ visual: this.visual, closest: selfPoint });\r\n      }\r\n      if (sel.length === 1) {\r\n        // snapuje priamo\r\n        p = Transform.transform2Window(sel[0].closest.p, r.transform);\r\n        if (r.curVisual) {\r\n          r.createOrModifyPin(p, true);\r\n        } else {\r\n          this.updatePos(p, true);\r\n          SelBox.destroy(this.visual);\r\n          SelBox.create(this.visual);\r\n        }\r\n      } else if (sel.length > 1) {\r\n        showSelectionContext(this, sel, ev)\r\n      }\r\n    }\r\n    r.panZoom.activeTuft = undefined;\r\n    r.panZoom.cancelClick = true;\r\n    this.timer = setTimeout(() => {\r\n      r.panZoom.cancelClick = false;\r\n      this.timer = null;\r\n    }, 50)\r\n  }\r\n\r\n  events(): void {\r\n\r\n    const prerequest = (ev: PointerEvent) => {\r\n      ev.preventDefault();\r\n      ev.stopPropagation()\r\n    }\r\n    this.target.addEventListener(\"pointerdown\", (ev: PointerEvent) => {\r\n      prerequest(ev);\r\n      if (this.type === vertexType.interVertex || this.type === vertexType.vertex) {\r\n        SelBox.destroy(this.visual);\r\n      }\r\n      this.redline.panZoom.activeTuft = this;\r\n      Array.from(this.redline.tuftsDock.children).forEach((e: HTMLElement) => {\r\n        e.style.display = \"none\";\r\n      });\r\n      this.target.style.display = \"\";\r\n    })\r\n    if (this.type === vertexType.tuft) {\r\n      this.target.addEventListener(\"click\", (ev: PointerEvent) => {\r\n        prerequest(ev);\r\n        if (this.dynamic) {\r\n          this.dynamic = false;\r\n        } else {\r\n          this.redline.finalize();\r\n        }\r\n      })\r\n    }\r\n  }\r\n  constructor(visual: IRedlineVisual, winPoint: IPoint, pad: HTMLElement, redline: Redline, idx: number, type: vertexType) {\r\n    this.type = type;\r\n    this.center = winPoint;\r\n    if (visual) {\r\n      this.redline = redline;\r\n      this.visual = visual;\r\n      this.pad = pad;\r\n      this.target = this.makeTarget(this.center, this.visual._id);\r\n      this.pad.appendChild(this.target);\r\n      this.idx = idx;\r\n      if (idx === -1) {\r\n        this.lastPoint = true;\r\n      }\r\n      this.events();\r\n    }\r\n  }\r\n}","import { IBox, ITransformParameters } from \"../../Helpers/interface\";\r\nimport { IPoint } from \"../../Helpers/pointDefs\";\r\nimport { IVisual, TypeConstant } from \"../../Helpers/interface\";\r\n\r\nexport abstract class Visual implements IVisual {\r\n    trf: ITransformParameters;\r\n    handle?: string;\r\n    valid: boolean;\r\n    style: any;\r\n    points?: IPoint[];\r\n    level?: string;\r\n    abstract create(): HTMLElement;\r\n    abstract style2String(): string;\r\n    patternId?: string;\r\n    type: TypeConstant;\r\n    fillable: boolean;\r\n    range:IBox;\r\n}","import { GeometryStyle } from \"../../../geometryStyle\";\r\nimport { CircleGeom, Geometry } from \"../../../Helpers/geometry\";\r\nimport { createGuid, CreateSvgObject, Distance, RemoveChildren, styleFromObject } from \"../../../Helpers/helper\";\r\nimport { IBox, ITransformParameters, NodeName } from \"../../../Helpers/interface\";\r\nimport { IPoint } from \"../../../Helpers/pointDefs\";\r\nimport { RangeManager } from \"../../../Helpers/rangeManager\";\r\nimport { SelBox } from \"../../../Helpers/selBox\";\r\nimport { Transform } from \"../../../Helpers/transform\";\r\nimport { Tuft } from \"../../../Helpers/tuft\";\r\nimport Redline from \"../../../redline\";\r\nimport { IClosest, IGeometryStyle, IRedlineVisual, ITuft, RedlineTyp, TypeConstant, vertexType } from \"../../../Helpers/interface\";\r\nimport { Visual } from \"../visual\";\r\n\r\nexport class Circle extends Visual {\r\n    r: number;\r\n    style2String(): string {\r\n        return this.style ? styleFromObject(this.style) : \"\";\r\n    }\r\n    create(): HTMLElement {\r\n        let e: HTMLElement;\r\n        const stl = this.style2String();\r\n        const c: IPoint = this.points[0];\r\n        e = CreateSvgObject(NodeName.circle, {\r\n            cx: c.x, cy: c.y, r: this.r\r\n        });\r\n        if (stl) {\r\n            e.setAttribute(\"style\", stl);\r\n        }\r\n        return e;\r\n    }\r\n    constructor(src: any, trf: ITransformParameters) {\r\n        super();\r\n        this.trf = trf;\r\n        this.type = TypeConstant.circle;\r\n        this.points = Transform.transformArray2Window([src.center], trf);\r\n        this.r = Transform.scale2Window(src.r, trf.scl);\r\n        if (this.points.length === 1 && this.r > 0) {\r\n            this.valid = true;\r\n            this.level = (src.level) ? src.level : undefined\r\n            this.handle = (src.handle) ? src.handle : undefined\r\n            this.style = (src.style) ? src.style : undefined\r\n        }\r\n    }\r\n}\r\n\r\nexport class RCircle implements IRedlineVisual{\r\n    _id: string;\r\n    redline: Redline;\r\n    redlinetyp: RedlineTyp;\r\n    isEdited: boolean;\r\n    selBox: SelBox;\r\n    nodeList: ITuft[];\r\n    interNodeList: ITuft[];\r\n    elem: HTMLElement;\r\n    pad: HTMLElement;\r\n    snapPoint: IPoint;\r\n    patternId?: string;\r\n    trf: ITransformParameters;\r\n    type?: TypeConstant;\r\n    fillable: boolean;\r\n    valid: boolean;\r\n    style: any;\r\n    points?: IPoint[];\r\n    level?: string;\r\n    range: IBox;\r\n    r: number;\r\n    move(dt: IPoint): void {\r\n        this.points.forEach((p: IPoint, i: number) => {\r\n            this.points[i] = p.AddPoint(dt);\r\n        })\r\n    }\r\n    copy(): IRedlineVisual {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    edit(): void {\r\n        if (this.points.length === 2) {\r\n            if(this.snapPoint){\r\n                this.points[1]=this.snapPoint;\r\n            }\r\n            const pts: IPoint[] = Transform.transformArray2Window(this.points, this.trf);\r\n            this.nodeList = [new Tuft(this,pts[1], this.redline.tuftsDock, this.redline, 1, vertexType.vertex)];\r\n            this.interNodeList = [new Tuft(this, pts[0], this.redline.tuftsDock, this.redline, 0, vertexType.interVertex)];\r\n        }\r\n        this.snapPoint=undefined;\r\n    }\r\n    dynamic(nod: ITuft): void {\r\n        const b: IPoint = Transform.transform2Real(nod.center, nod.redline.transform);\r\n        this.points[nod.idx] = b;\r\n        this.draw();\r\n    }\r\n    removeVertex(pin: ITuft): void {}\r\n    create(): HTMLElement {\r\n        const e: HTMLElement = CreateSvgObject(NodeName.g, { _id: this._id });\r\n        return e;\r\n    }\r\n    draw(): void {\r\n        const core: any = this.toVisual(this.points, this.style);\r\n        this.range = undefined;\r\n        RemoveChildren(this.elem);\r\n        if (core) {\r\n            const circle: Circle = new Circle(core, this.trf)\r\n            const e: HTMLElement = circle.create();\r\n            if (e) {\r\n                this.elem.append(e);\r\n            }\r\n            const geom: any = {\r\n                center: circle.points[0],\r\n                r: circle.r\r\n            }\r\n            this.range = RangeManager.circleRange(geom.center, parseFloat(geom.r), false);\r\n        }\r\n    }\r\n    setStyle(): void {\r\n        const stl = this.style2String();\r\n        if (stl) {\r\n            const o: Element = this.elem.firstElementChild;\r\n            o.setAttribute(\"style\", stl);\r\n        }\r\n    }\r\n    addPoint(p: IPoint) {\r\n        if (this.points.length < 2) {\r\n            this.points.push(p);\r\n        } else if (this.points.length === 2) {\r\n            this.points[1] = p\r\n        }\r\n        if (this.points.length === 2) {\r\n            this.draw();\r\n        }\r\n    }\r\n    init(pad: HTMLElement): void {\r\n        this.elem = this.create();\r\n        this.pad = pad;\r\n        this.pad.appendChild(this.elem);\r\n    }\r\n    getRange(): IBox {\r\n        const geom: any = {\r\n            center: this.points[0],\r\n            r: Distance(this.points[0], this.points[1])\r\n        }\r\n        return RangeManager.circleRange(geom.center, geom.r, true);\r\n    }\r\n    finalize(): void {\r\n        (this?.points.length === 2) ? this.valid = true : this.valid = false;\r\n    }\r\n    getClosestPoint(realP: IPoint, bufer: number): IPoint {\r\n        let ret: IPoint | null = null;\r\n        const r: number = Distance(this.points[0], this.points[1]);\r\n        const c: CircleGeom = new CircleGeom(this.points[0], r);\r\n        let test: IPoint = Geometry.ClosestPointOnCircle(c, realP);\r\n        let d: number = Distance(c.center, realP);\r\n        const r1: number = Distance(realP, c.center);\r\n        let d1: number = (r - r1);\r\n        if (r1 >= r && (r1 - r) <= bufer) {\r\n            ret = test; // bod na kruznici\r\n        } else if (r > r1 && (r - r1) <= bufer) {\r\n            // v kruhu\r\n            if (d1 < d) {\r\n                ret = test; // bod v kruhu ale blizsie je kruznica ako stred\r\n            }\r\n        }\r\n        if (this.style.fill && this.style.fill !== \"none\") {\r\n            // ak je fill tak aj ked je mimo bufra vnutri vrati bod center alebo okraj\r\n            if (!ret) {\r\n                if (r >= r1) {\r\n                    if (Distance(realP, c.center) <= Distance(realP, test)) {\r\n                        ret = c.center;\r\n                    } else {\r\n                        ret = test;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    getSelfClosestPoint(realP: IPoint, bufer: number, idx: number): IClosest {\r\n        return null;\r\n    }\r\n    style2String(): string {\r\n        return this.style ? styleFromObject(this.style) : \"\";\r\n    }\r\n    toVisual(points?: IPoint[], stl?: any):any {\r\n        if (!points || points.length !== 2) {\r\n            return null;\r\n        }\r\n        const style: any = {};\r\n        for (const key in stl) {\r\n            if (stl[key]) {\r\n                style[key] = stl[key];\r\n            }\r\n        }\r\n        const ret: any = {\r\n            points,\r\n            center:points[0],\r\n            r:Distance(points[0],points[1]),\r\n            style\r\n        }\r\n        return ret;\r\n    }\r\n    save(): JSON {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    firstStep(r: Redline, stl: GeometryStyle, _id: string, p?: IPoint): void {\r\n        this.redline = r;\r\n        this.trf = r.transform;\r\n        this.style = stl;\r\n        this._id = _id;\r\n        this.init(r.rdlDock);\r\n        this.fillable = true;\r\n        if (p) {\r\n            this.points = [p];\r\n        }\r\n    }\r\n    constructor() {\r\n        this.type = TypeConstant.circle;\r\n    }\r\n}","import { IOType } from \"child_process\";\r\nimport { sign } from \"crypto\";\r\nimport { GeometryStyle } from \"../../../geometryStyle\";\r\nimport { Geometry } from \"../../../Helpers/geometry\";\r\nimport { CloneJson, CreateSvgObject, Distance, PathFromPoints, RemoveChildren, styleFromObject } from \"../../../Helpers/helper\";\r\nimport { IBox, IClosestOnLine, ITransformParameters, NodeName } from \"../../../Helpers/interface\";\r\nimport { IPoint, Point } from \"../../../Helpers/pointDefs\";\r\nimport { RangeManager } from \"../../../Helpers/rangeManager\";\r\nimport { SelBox } from \"../../../Helpers/selBox\";\r\nimport { Transform } from \"../../../Helpers/transform\";\r\nimport { Tuft } from \"../../../Helpers/tuft\";\r\nimport Redline from \"../../../redline\";\r\nimport { IClosest, IRedlineVisual, ITuft, RedlineTyp, TypeConstant, vertexType } from \"../../../Helpers/interface\";\r\nimport { Visual } from \"../visual\";\r\n\r\nexport class Line extends Visual {\r\n    style2String(): string {\r\n        return this.style ? styleFromObject(this.style) : \"\";\r\n    }\r\n    create(): HTMLElement {\r\n        let e: HTMLElement;\r\n        const d: string = PathFromPoints(this.points);\r\n        const stl = this.style2String();\r\n        e = CreateSvgObject(NodeName.path, { d });\r\n        if (stl) {\r\n            e.setAttribute(\"style\", stl);\r\n        }\r\n        return e;\r\n    }\r\n    constructor(src: any, trf: ITransformParameters) {\r\n        super();\r\n        this.trf = trf;\r\n        this.type = TypeConstant.line;\r\n        this.points = Transform.transformArray2Window(src.points, trf);\r\n        if (this.points.length > 1) {\r\n            this.valid = true;\r\n            this.level = (src.level) ? src.level : undefined\r\n            this.handle = (src.handle) ? src.handle : undefined\r\n            this.style = (src.style) ? src.style : undefined\r\n        }\r\n    }\r\n}\r\nexport class RLine implements IRedlineVisual {\r\n    _id: string;\r\n    redline: Redline;\r\n    redlinetyp: RedlineTyp;\r\n    isEdited: boolean;\r\n    selBox: SelBox;\r\n    nodeList: ITuft[];\r\n    interNodeList: ITuft[];\r\n    elem: HTMLElement;\r\n    pad: HTMLElement;\r\n    patternId?: string;\r\n    trf: ITransformParameters;\r\n    type?: TypeConstant;\r\n    fillable: boolean;\r\n    valid: boolean;\r\n    style: any;\r\n    points?: IPoint[];\r\n    level?: string;\r\n    range: IBox;\r\n    snapPoint: IPoint;\r\n    setStyle(): void {\r\n        const stl = this.style2String();\r\n        if (stl) {\r\n            const o: Element = this.elem.firstElementChild;\r\n            o.setAttribute(\"style\", stl);\r\n        }\r\n    }\r\n    getRange(): IBox {\r\n        return RangeManager.rangeByPoints(this.points, true);\r\n    }\r\n    draw(): void {\r\n        const core: any = this.toVisual(this.points, this.style);\r\n        this.range = undefined;\r\n        RemoveChildren(this.elem);\r\n        if (core) {\r\n            const line: Line = new Line(core, this.trf)\r\n            const e: HTMLElement = line.create();\r\n            if (e) {\r\n                this.elem.append(e);\r\n                this.range = RangeManager.rangeByPoints(line.points, false);\r\n            }\r\n        }\r\n    }\r\n    move(dt: IPoint): void {\r\n        this.points.forEach((p: IPoint, i: number) => {\r\n            this.points[i] = p.AddPoint(dt);\r\n        })\r\n    }\r\n    copy(): IRedlineVisual {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    edit(): void {\r\n        let h = this.points.length;\r\n        if (h < 2) {\r\n            return;\r\n        }\r\n        this.nodeList = [];\r\n        this.interNodeList = [];\r\n        for (let i: number = 0; i < h; i++) {\r\n            let j: number = i + 1;\r\n            let a: IPoint = this.points[i];\r\n            let b: IPoint | null = (j < h) ? this.points[i + 1] : null;\r\n            let p: IPoint = Transform.transform2Window(a, this.trf);\r\n            this.nodeList.push(new Tuft(this, p, this.redline.tuftsDock, this.redline, i, vertexType.vertex));\r\n            if (b) {\r\n                let dist: number = Transform.scale2Window(Distance(a, b), this.trf.scl, 0);\r\n                p = a.AddPoint(b);\r\n                p.x = p.x / 2;\r\n                p.y = p.y / 2;\r\n                p = Transform.transform2Window(p, this.trf);\r\n                if (dist > 100) { // doda interVertex\r\n                    this.interNodeList.push(new Tuft(this, p, this.redline.tuftsDock, this.redline, i, vertexType.interVertex));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    dynamic(nod: ITuft): void {\r\n        let b: IPoint = Transform.transform2Real(nod.center, nod.redline.transform);\r\n        if (nod.type === vertexType.interVertex) {\r\n            let idx: number = nod.idx + 1;\r\n            this.points.splice(idx, 0, b);\r\n            nod.type = vertexType.vertex;\r\n            nod.idx = idx;\r\n        }\r\n        this.points[nod.idx] = b;\r\n        this.draw();\r\n    }\r\n    removeVertex(pin: ITuft): void {\r\n        this.points.splice(pin.idx, 1);\r\n        if (this.points.length > 1) {\r\n            this.draw();\r\n        } else {\r\n            let idx: number = this.redline.rdl.visuals.findIndex(f => f._id === this._id);\r\n            if (idx > -1) {\r\n                this.redline.rdl.visuals.splice(idx, 1);\r\n                this.redline.panZoom.run();\r\n            }\r\n        }\r\n    }\r\n    addPoint(p: IPoint) {\r\n        this.points.push(p);\r\n        if (this.points.length > 1) {\r\n            this.draw();\r\n        }\r\n    }\r\n    init(pad: HTMLElement): void {\r\n        this.elem = this.create();\r\n        this.pad = pad;\r\n        this.pad.appendChild(this.elem);\r\n    }\r\n    finalize(): void {\r\n        (this?.points.length > 1) ? this.valid = true : this.valid = false;\r\n    }\r\n    getClosestPoint(realP: IPoint, bufer: number, points?: IPoint[]): IPoint | null {\r\n        if (points) {\r\n            points = CloneJson(points);\r\n        } else {\r\n            points = CloneJson(this.points);\r\n        }\r\n\r\n        const calck = (): IPoint | null => {\r\n            let h: number = points.length;\r\n            if (h < 2) {\r\n                return null;\r\n            }\r\n            let test: IClosestOnLine = Geometry.ClosestPoint2LineArray(points, realP, bufer);\r\n            if (test.part === h - 1) {\r\n                test.part -= 1;\r\n            }\r\n\r\n            let d: number = Geometry.DistPoint2Line(points[test.part], points[test.part + 1], realP);\r\n\r\n            if (d <= bufer) {\r\n                return test.p;\r\n            }\r\n            return null;\r\n        }\r\n        return calck();\r\n    }\r\n    getSelfClosestPoint(realP: IPoint, bufer: number, idx: number): IClosest {\r\n        return null;\r\n    }\r\n    create(): HTMLElement {\r\n        const e: HTMLElement = CreateSvgObject(NodeName.g, { _id: this._id });\r\n        return e;\r\n    }\r\n    style2String(): string {\r\n        return this.style ? styleFromObject(this.style) : \"\";\r\n    }\r\n    toVisual(points?: IPoint[], stl?: any):any {\r\n        if (!points || points.length < 1) {\r\n            return null;\r\n        }\r\n        const style: any = {};\r\n        for (const key in stl) {\r\n            if (stl[key]) {\r\n                style[key] = stl[key];\r\n            }\r\n        }\r\n        const ret: any = {\r\n            points,\r\n            style\r\n        }\r\n        return ret;\r\n    }\r\n    save(): JSON {\r\n        const e:any=this.toVisual(this.points,this.style);\r\n        if(e){\r\n            e.range=this.range;\r\n        }\r\n        return e;\r\n    }\r\n    firstStep(r: Redline, stl: GeometryStyle, _id: string, p?: IPoint): void{\r\n        this.redline = r;\r\n        this.trf = r.transform;\r\n        this.style = stl;\r\n        this._id = _id;\r\n        this.init(r.rdlDock);\r\n        this.fillable = false;\r\n        if (p) {\r\n            this.points = [p];\r\n        }\r\n    }\r\n    constructor() {\r\n        this.type = TypeConstant.line;\r\n    }\r\n}","import { Http2SecureServer } from \"http2\";\r\nimport { json } from \"stream/consumers\";\r\nimport { GeometryStyle } from \"../../../geometryStyle\";\r\nimport { Geometry } from \"../../../Helpers/geometry\";\r\nimport { CloneJson, CreateSvgObject, Distance, PathFromPoints, RemoveChildren, Round, styleFromObject } from \"../../../Helpers/helper\";\r\nimport { IBox, IClosestOnLine, ITransformParameters, NodeName } from \"../../../Helpers/interface\";\r\nimport { IPoint } from \"../../../Helpers/pointDefs\";\r\nimport { RangeManager } from \"../../../Helpers/rangeManager\";\r\nimport { SelBox } from \"../../../Helpers/selBox\";\r\nimport { Transform } from \"../../../Helpers/transform\";\r\nimport { Tuft } from \"../../../Helpers/tuft\";\r\nimport Redline from \"../../../redline\";\r\nimport { IClosest, IRedlineVisual, ITuft, RedlineTyp, TypeConstant, vertexType } from \"../../../Helpers/interface\";\r\nimport { Visual } from \"../visual\";\r\n// let pointInPolygon = require(\"point-in-polygon\");\r\nexport class Shape extends Visual {\r\n    style2String(): string {\r\n        return this.style ? styleFromObject(this.style) : \"\";\r\n    }\r\n    create(): HTMLElement {\r\n        let e: HTMLElement;\r\n        const d: string = PathFromPoints(this.points) + \"z\";\r\n        const stl = this.style2String();\r\n        e = CreateSvgObject(NodeName.path, { d });\r\n        if (stl) {\r\n            e.setAttribute(\"style\", stl);\r\n        }\r\n        return e;\r\n    }\r\n    constructor(src: any, trf: ITransformParameters) {\r\n        super();\r\n        this.trf = trf;\r\n        this.type = TypeConstant.line;\r\n        this.points = Transform.transformArray2Window(src.points, trf);\r\n        if (this.points.length > 1) {\r\n            this.valid = true;\r\n            this.level = (src.level) ? src.level : undefined\r\n            this.handle = (src.handle) ? src.handle : undefined\r\n            this.style = (src.style) ? src.style : undefined\r\n        }\r\n    }\r\n}\r\nexport class RShape implements IRedlineVisual{\r\n    _id: string;\r\n    redline: Redline;\r\n    redlinetyp: RedlineTyp;\r\n    isEdited: boolean;\r\n    selBox: SelBox;\r\n    nodeList: ITuft[];\r\n    interNodeList: ITuft[];\r\n    patternId?: string;\r\n    trf: ITransformParameters;\r\n    type?: TypeConstant;\r\n    fillable: boolean;\r\n    valid: boolean;\r\n    style: any;\r\n    points?: IPoint[];\r\n    level?: string;\r\n    range: IBox;\r\n    elem: HTMLElement;\r\n    pad: HTMLElement;\r\n    snapPoint: IPoint;\r\n    move(dt: IPoint): void {\r\n        this.points.forEach((p: IPoint, i: number) => {\r\n            this.points[i] = p.AddPoint(dt);\r\n        })\r\n    }\r\n    copy(): IRedlineVisual {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    edit(): void {\r\n        let h = this.points.length;\r\n        if (h < 3) {\r\n            return;\r\n        }\r\n        this.nodeList = [];\r\n        this.interNodeList = [];\r\n        for (let i: number = 0; i < h; i++) {\r\n            let j: number = i + 1;\r\n            let a: IPoint = this.points[i];\r\n            let b: IPoint | null = (j < h) ? this.points[i + 1] : this.points[0];\r\n            let p: IPoint = Transform.transform2Window(a, this.trf);\r\n            this.nodeList.push(new Tuft(this, p, this.redline.tuftsDock, this.redline, i, vertexType.vertex));\r\n            let dist: number = Transform.scale2Window(Distance(a, b), this.trf.scl, 0);\r\n            p = a.AddPoint(b);\r\n            p.x = p.x / 2;\r\n            p.y = p.y / 2;\r\n            p = Transform.transform2Window(p, this.trf);\r\n            if (dist > 100) { // doda interVertex\r\n                this.interNodeList.push(new Tuft(this, p, this.redline.tuftsDock, this.redline, i, vertexType.interVertex));\r\n            }\r\n        }\r\n    }\r\n    dynamic(nod: ITuft): void {\r\n        let b: IPoint = Transform.transform2Real(nod.center, nod.redline.transform);\r\n        if (nod.type === vertexType.interVertex) {\r\n            let idx: number = nod.idx + 1;\r\n            this.points.splice(idx, 0, b);\r\n            nod.type = vertexType.vertex;\r\n            nod.idx = idx;\r\n        }\r\n        this.points[nod.idx] = b;\r\n        this.draw();\r\n    }\r\n    removeVertex(pin: ITuft): void {\r\n        this.points.splice(pin.idx, 1);\r\n        if (this.points.length > 2) {\r\n            this.draw();\r\n        } else {\r\n            let idx: number = this.redline.rdl.visuals.findIndex(f => f._id === this._id);\r\n            if (idx > -1) {\r\n                this.redline.rdl.visuals.splice(idx, 1);\r\n                this.redline.panZoom.run();\r\n            }\r\n        }\r\n    }\r\n    create(): HTMLElement {\r\n        const e: HTMLElement = CreateSvgObject(NodeName.g, { _id: this._id });\r\n        return e;\r\n    }\r\n    draw(): void {\r\n        const core: any = this.toVisual(this.points, this.style);\r\n        this.range = undefined;\r\n        RemoveChildren(this.elem);\r\n        if (core){\r\n            const shape:Shape=new Shape(core,this.trf)\r\n            const e:HTMLElement=shape.create();\r\n            if (e) {\r\n                this.elem.append(e);\r\n                this.range = RangeManager.rangeByPoints(shape.points, false);\r\n            }\r\n        }\r\n    }\r\n    setStyle(): void {\r\n        const stl = this.style2String();\r\n        if (stl) {\r\n            const o: Element = this.elem.firstElementChild;\r\n            o.setAttribute(\"style\", stl);\r\n        }\r\n    }\r\n    addPoint(p: IPoint) {\r\n        this.points.push(p);\r\n        if (this.points.length > 1) {\r\n            this.draw();\r\n        }\r\n    }\r\n    init(pad: HTMLElement): void {\r\n        this.elem = this.create();\r\n        this.pad = pad;\r\n        this.pad.appendChild(this.elem);\r\n    }\r\n    getRange(): IBox {\r\n        return RangeManager.rangeByPoints(this.points, true);\r\n    }\r\n    finalize(): void {\r\n        (this?.points.length > 2) ? this.valid = true : this.valid = false;\r\n    }\r\n    getClosestPoint(realP: IPoint, bufer: number): IPoint {\r\n        let points: IPoint[] = CloneJson(this.points);\r\n        const calck = (): IPoint | null => {\r\n            if (points.length < 3) {\r\n                return null;\r\n            }\r\n            if (Round(Distance(points[0], points[points.length - 1]), 6) !== 0) {\r\n                points.push(points[0]);\r\n            }\r\n            let test: IClosestOnLine = Geometry.ClosestPoint2LineArray(points, realP, bufer);\r\n            let d: number = Geometry.DistPoint2Line(points[test.part], points[test.part + 1], realP);\r\n\r\n            if (d <= bufer) {\r\n                return test.p;\r\n            }\r\n\r\n            if (this.style.fill && this.style.fill !== \"none\") {\r\n                if (Geometry.pointInPolygon(this.points, realP)) {\r\n                    return test.p\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        // if (isCurrent) {\r\n        //     // ak je current tak snapujem iba na časti pred posledným bodom.\r\n        //     points.splice(points.length-1,1);\r\n        // }\r\n        return calck();\r\n    }\r\n    getSelfClosestPoint(realP: IPoint, bufer: number, idx: number): IClosest {\r\n        return null;\r\n    }\r\n    style2String(): string {\r\n        return this.style ? styleFromObject(this.style) : \"\";\r\n    }\r\n    toVisual(points?: IPoint[], stl?: any):any {\r\n        if (!points || points.length < 1) {\r\n            return null;\r\n        }\r\n        const style: any = {};\r\n        for (const key in stl) {\r\n            if (stl[key]) {\r\n                style[key] = stl[key];\r\n            }\r\n        }\r\n        const ret: any = {\r\n            points,\r\n            style,\r\n            type:TypeConstant.shp\r\n        }\r\n        return ret;\r\n    }\r\n    save(): JSON {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    firstStep(r: Redline, stl: GeometryStyle, _id: string, p?: IPoint): void{\r\n        this.redline = r;\r\n        this.trf = r.transform;\r\n        this.style = stl;\r\n        this._id = _id;\r\n        this.init(r.rdlDock);\r\n        this.fillable = true;\r\n        if (p) {\r\n            this.points = [p];\r\n        }\r\n    }\r\n    constructor() {\r\n        this.type = TypeConstant.shp;\r\n    }\r\n}\r\n\r\n","import { GeometryStyle } from \"../../../geometryStyle\";\r\nimport { Geometry } from \"../../../Helpers/geometry\";\r\nimport { CloneJson, CreateSvgObject, Distance, GetScreenCordinates, PathFromPoints, RemoveChildren, Round, styleFromObject } from \"../../../Helpers/helper\";\r\nimport { IBox, IClosest, IRedlineVisual, ITransformParameters, ITuft, NodeName, RedlineTyp, TextJustification, TypeConstant, vertexType } from \"../../../Helpers/interface\";\r\nimport { IPoint, Point } from \"../../../Helpers/pointDefs\";\r\nimport { RangeManager } from \"../../../Helpers/rangeManager\";\r\nimport { SelBox } from \"../../../Helpers/selBox\";\r\nimport { TextParams } from \"../../../Helpers/textParams\";\r\nimport { Transform } from \"../../../Helpers/transform\";\r\nimport { Tuft } from \"../../../Helpers/tuft\";\r\nimport Redline from \"../../../redline\";\r\nimport { TextStyleManager } from \"../../../ui/textStyleManager\";\r\nimport { Visual } from \"../visual\";\r\nconst Presahy = \"g,q,y,j,{,},[,],(,|,)\";\r\nconst centerBaseline = (txt): string => {\r\n  let qq = Presahy.split(\",\");\r\n  let ret = \"central\"\r\n  let count = qq.length;\r\n  for (let i = 0; i < count; i++) {\r\n    if (txt.indexOf(qq[i]) > -1) {\r\n      ret = \"middle\";\r\n      i = count;\r\n    }\r\n  }\r\n  return ret;\r\n}\r\nconst bottomBaseline = (txt): string => {\r\n  let qq = Presahy.split(\",\");\r\n  let ret = \"alphabetic\"\r\n  let count = qq.length;\r\n  for (let i = 0; i < count; i++) {\r\n    if (txt.indexOf(qq[i]) > -1) {\r\n      ret = \"ideographic\";\r\n      i = count;\r\n    }\r\n  }\r\n  return ret;\r\n}\r\nexport class Text extends Visual {\r\n  lines: string[] = [];\r\n  size: number;\r\n  gap: number;\r\n  angle: number;\r\n  origin: IPoint\r\n  alignment: TextJustification;\r\n  boxHeiht: number;\r\n  tx: HTMLElement;\r\n\r\n\r\n  makeTop(tx: HTMLElement) {\r\n    tx.setAttribute(\"dominant-baseline\", \"hanging\");\r\n    let context: string;\r\n    let gapSize: number = this.size + this.gap;\r\n    this.lines.forEach((t, i) => {\r\n      if (i < 1) {\r\n        context = t;\r\n      } else {\r\n        context += `<tspan x=\"0\" y=\"${gapSize * i}\">${t}</tspan>`;\r\n      }\r\n    })\r\n    tx.innerHTML = context;\r\n  }\r\n  makeCenter(tx: HTMLElement) {\r\n    let txt: string[] = [...this.lines];\r\n    let count: number = txt.length;\r\n    let context: string;\r\n    if (count < 2) {\r\n      context = txt[0];\r\n      tx.setAttribute(\"dominant-baseline\", centerBaseline(context));\r\n    } else {\r\n      let m: number = (count % 2);\r\n      let i: number = count / 2;\r\n      let isEmpty: boolean = false;\r\n      if (m === 0) {\r\n        txt.splice(i, 0, \"\");\r\n        isEmpty = true;\r\n      }\r\n      count = txt.length\r\n      let idx: number = Math.round(count / 2 - 0.5);\r\n      context = txt[idx];\r\n      //let isEmpty: boolean = (context.trim()).length > 0 ? false : true;\r\n      tx.setAttribute(\"dominant-baseline\", isEmpty ? centerBaseline(context) : \"middle\");\r\n      let j: number = 0;\r\n      let fsz: number;\r\n      let gapSize: number = this.size + this.gap;\r\n      for (let i: number = idx - 1; i > -1; i--) {\r\n        j += 1;\r\n        if (j === 1) {\r\n          fsz = isEmpty ? gapSize / 2 : gapSize\r\n        }\r\n        context += `<tspan x=\"0\" y=\"${-fsz * j}\">${txt[i]}</tspan>`;\r\n        fsz = gapSize;\r\n      }\r\n      j = 0\r\n      for (let i = idx + 1; i < count; i++) {\r\n        j += 1;\r\n        if (j === 1) {\r\n          fsz = isEmpty ? gapSize / 2 : gapSize\r\n        }\r\n        context += `<tspan x=\"0\" y=\"${fsz * j}\">${txt[i]}</tspan>`;\r\n        fsz = gapSize;\r\n      }\r\n    }\r\n    tx.innerHTML = context;\r\n  }\r\n  makeBottom(tx: HTMLElement) {\r\n    let count = this.lines.length - 1;\r\n    let context = this.lines[count];\r\n    let i = 1;\r\n    let gapSize: number = this.size + this.gap;\r\n    while (count > 0) {\r\n      count -= 1;\r\n      context += `<tspan x=\"0\" y=\"${-gapSize * i}\">${this.lines[count]}</tspan>`;\r\n      i += 1;\r\n    }\r\n    tx.innerHTML = context;\r\n    tx.setAttribute(\"dominant-baseline\", bottomBaseline(this.lines[count]));\r\n  }\r\n  create(): HTMLElement {\r\n    let transform: string;\r\n    if (this.angle != 0) {\r\n      transform = `translate(${this.origin.toString()}) rotate(-${this.angle})`\r\n    } else {\r\n      transform = `translate(${this.origin.toString()})`\r\n    }\r\n    this.tx = CreateSvgObject(NodeName.text, {\r\n      transform,\r\n      dy: \"0em\",\r\n      style: this.style2String()\r\n    });\r\n    switch (TextJustification[this.alignment].substring(2, 1)) {\r\n      case \"T\":\r\n        this.makeTop(this.tx);\r\n        break;\r\n      case \"C\":\r\n        this.makeCenter(this.tx);\r\n        break;\r\n      case \"B\":\r\n        this.makeBottom(this.tx);\r\n        break;\r\n    }\r\n    let anchor: string = TextJustification[this.alignment].substring(0, 1);\r\n    if (anchor === \"C\") {\r\n      this.tx.setAttribute(\"text-anchor\", \"middle\")\r\n    } else if (anchor === \"R\") {\r\n      this.tx.setAttribute(\"text-anchor\", \"end\")\r\n    }\r\n\r\n    return this.tx;\r\n  }\r\n  style2String(): string {\r\n\r\n    let stl: string = this.style ? styleFromObject(this.style) : \"\";\r\n    stl += \";font-size:\" + this.size + \"px\";\r\n    return stl;\r\n  }\r\n  constructor(src: any, trf: ITransformParameters) {\r\n    super();\r\n    this.trf = trf;\r\n    this.type = TypeConstant.text;\r\n    this.alignment = src.alignment;\r\n    if (src.points) {\r\n      this.points = Transform.transformArray2Window(src.points, trf);\r\n      this.boxHeiht = Round(Distance(this.points[0], this.points[this.points.length - 1]), 1);\r\n    }\r\n    if (src.origin) {\r\n      this.origin = Transform.transform2Window(src.origin, trf);\r\n    }\r\n    else // origin odvodeny podla src.points\r\n    {\r\n      const ct = (a: IPoint, b: IPoint) => {\r\n        return new Point(\r\n          (a.x + b.x) / 2,\r\n          (a.y + b.y) / 2\r\n        )\r\n      }\r\n      // v this.points su 4 body boxu od lavoDole anticlockwise\r\n      if (this.points) {\r\n        switch (this.alignment) {\r\n          case (TextJustification.LT):\r\n            this.origin = this.points[3].Clone();\r\n            break;\r\n          case (TextJustification.LC):\r\n            this.origin = ct(this.points[0], this.points[3]);\r\n            break;\r\n          case (TextJustification.LB):\r\n            this.origin = this.points[0].Clone();\r\n            break;\r\n          case (TextJustification.CT):\r\n            this.origin = ct(this.points[2], this.points[3]);\r\n            break;\r\n          case (TextJustification.CC):\r\n            this.origin = ct(this.points[0], this.points[2]);\r\n            break;\r\n          case (TextJustification.CB):\r\n            this.origin = ct(this.points[0], this.points[1]);\r\n            break;\r\n          case (TextJustification.RT):\r\n            this.origin = this.points[2].Clone();\r\n            break;\r\n          case (TextJustification.RC):\r\n            this.origin = ct(this.points[1], this.points[2]);\r\n            break;\r\n          case (TextJustification.RB):\r\n            this.origin = this.points[1].Clone();\r\n            break;\r\n        }\r\n        this.origin.x = Round(this.origin.x, 1);\r\n        this.origin.y = Round(this.origin.y, 1);\r\n      } else {\r\n        console.log(\"Pozor v texte nevieme definovat origin\")\r\n      }\r\n    }\r\n    this.angle = (src.angle) ? src.angle : 0;\r\n    // Microstantion fonty maju mat parameter rescale;\r\n    let rescale: number = src.rescale ? src.rescale : 1\r\n    this.size = Transform.scale2Window(src.fontSize * rescale, trf.scl, 1);\r\n    this.gap = src.gap ? Transform.scale2Window(src.gap * rescale, trf.scl, 1) : 0;\r\n    this.style = src.style;\r\n    if (src.lines) {\r\n      this.lines = src.lines;\r\n      this.valid = true\r\n    }\r\n  }\r\n}\r\n\r\nexport class RText implements IRedlineVisual {\r\n  handle?: string;\r\n  valid: boolean;\r\n  style: any;\r\n  points?: IPoint[];\r\n  level?: string;\r\n  range: IBox;\r\n  patternId?: string;\r\n  trf: ITransformParameters;\r\n  type?: TypeConstant;\r\n  fillable: boolean;\r\n  _id: string;\r\n  redline: Redline;\r\n  redlinetyp: RedlineTyp;\r\n  elem: HTMLElement;\r\n  pad: HTMLElement;\r\n  isEdited: boolean;\r\n  selBox: SelBox;\r\n  snapPoint: IPoint;\r\n  nodeList: ITuft[];\r\n  interNodeList: ITuft[];\r\n  outlinePoints: IPoint[];\r\n  texManager: TextStyleManager;\r\n  tp: TextParams;\r\n  createText(p: IPoint, tp: TextParams = null): HTMLElement {\r\n    if (!tp) {\r\n      tp = this.texManager.getTextParams();\r\n    }\r\n    let test: any = this.toVisual(tp, p);\r\n    let text = new Text(test, this.trf);\r\n    let ret: HTMLElement = null;\r\n    if (text.valid) {\r\n      ret = text.create();\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  move(dt: IPoint): void {\r\n    this.points[0] = this.points[0].AddPoint(dt);\r\n  }\r\n  copy(): IRedlineVisual {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  edit(): void {\r\n    this.nodeList = [];\r\n    const b: IPoint = Transform.transform2Window(this.points[0], this.trf);\r\n    this.nodeList = [new Tuft(this, b, this.redline.tuftsDock, this.redline, 1, vertexType.vertex)];\r\n    this.snapPoint = undefined;\r\n    const btn: HTMLElement = this.redline.textManager.button;\r\n    const test = this.redline.textManager.bar.style.display;\r\n    if (this.redline.fillTextDialog) {\r\n      this.redline.fillTextDialog = false;\r\n      this.redline.textManager.setByParams(this.tp);\r\n      if (test === \"none\") {\r\n        const click: IPoint = GetScreenCordinates(btn);\r\n        this.redline.textManager.showHide(click);\r\n      }\r\n    }\r\n  }\r\n  dynamic(nod: ITuft): void {\r\n    const b: IPoint = Transform.transform2Real(nod.center, nod.redline.transform);\r\n    this.addPoint(b);\r\n    // this.points[0] = b;\r\n    // this.draw();\r\n  }\r\n  removeVertex(pin: ITuft): void {\r\n  }\r\n  // zdroje v realnej mierke\r\n  rangeByDumyTemplate(orig: IPoint, w: number, h: number, u: number, just: TextJustification): IBox {\r\n    // naplní this.points 4 body v reálnych súradniciach\r\n\r\n    // zarovnanie LT\r\n    let bb: IPoint[] = [orig,\r\n      new Point(orig.x + w, orig.y),\r\n      new Point(orig.x + w, orig.y - h),\r\n      new Point(orig.x, orig.y - h),\r\n    ];\r\n    let dt: IPoint = new Point();\r\n    switch (just) {\r\n      case TextJustification.LC:\r\n        dt.y = h / 2;\r\n        break;\r\n      case TextJustification.LB:\r\n        dt.y = h;\r\n        break;\r\n      case TextJustification.CT:\r\n        dt.x = w / 2;\r\n        break;\r\n      case TextJustification.CC:\r\n        dt.x = w / 2; dt.y = h / 2;\r\n        break;\r\n      case TextJustification.CB:\r\n        dt.x = w / 2; dt.y = h;\r\n        break;\r\n      case TextJustification.RT:\r\n        dt.x = w;\r\n        break;\r\n      case TextJustification.RC:\r\n        dt.x = w; dt.y = h / 2;\r\n        break;\r\n      case TextJustification.RB:\r\n        dt.x = w; dt.y = h;\r\n        break;\r\n    }\r\n\r\n    bb.forEach((b: IPoint, i: number) => {\r\n      b.x -= dt.x;\r\n      b.y += dt.y;\r\n      if (u === 0) {\r\n        bb[i] = b;\r\n      } else {\r\n        bb[i] = Geometry.Rotate(this.points[0], u, b);\r\n      }\r\n    });\r\n    this.outlinePoints = bb;\r\n\r\n    // const testSpravnosti = () => {\r\n    //   let points: IPoint[] = Transform.transformArray2Window(bb, this.trf);\r\n    //   let d = PathFromPoints(points) + \"z\";\r\n    //   let e: HTMLElement = CreateSvgObject(NodeName.path, {\r\n    //     d,\r\n    //     style: \"stroke:yellow;stroke-width:3,fill:orange;fill-opacity:0.3\"\r\n    //   })\r\n    //   this.elem.append(e);\r\n    // }\r\n    // testSpravnosti();\r\n    return RangeManager.rangeByPoints(bb, true);\r\n  }\r\n  getRange(): IBox {\r\n    return RangeManager.rangeByPoints(this.outlinePoints, true);\r\n  }\r\n  calculateRange(tp: TextParams): IBox {\r\n    // vráti range v reálnych súradniciach, pri tom aj this.points \r\n    let p: IPoint = this.points[0];\r\n    tp.lines.forEach((line: string, i: number) => {\r\n      if (line.trim().length === 0) {\r\n        tp.lines[i] = \"-\";\r\n      }\r\n    })\r\n    let u: number = tp.angle / 180 * Math.PI;\r\n    let just: TextJustification = tp.alignment;\r\n    let gap: number = tp.gap;\r\n    tp.alignment = TextJustification.LT;\r\n    tp.angle = 0;\r\n    tp.gap = 0;\r\n    let size: number = Transform.scale2Real(100, this.trf.scl);\r\n    let scl: number = size / tp.size;\r\n    tp.size = size;\r\n    const core: HTMLElement = this.createText(p, tp);\r\n    core.setAttribute(\"opacity\", \"0\");\r\n    this.redline.miscDock.append(core);\r\n    let bx: DOMRect = core.getBoundingClientRect();\r\n    core.remove();\r\n    let w: number = bx.width / scl;\r\n    let h = tp.lines.length === 1 ? 100 / scl : bx.height / scl;\r\n    return this.rangeByDumyTemplate(\r\n      this.points[0].Clone(),\r\n      Transform.scale2Real(w, this.trf.scl, 6),\r\n      Transform.scale2Real(h, this.trf.scl, 6) + gap * (tp.lines.length - 1),\r\n      u,\r\n      just\r\n    )\r\n  }\r\n  drawFromDialog(): void {\r\n    let opacity: any = this.tp?.opacity ? this.tp.opacity : undefined;\r\n    this.tp = this.texManager.getTextParams();\r\n    if (opacity) {\r\n      this.tp.opacity = opacity;\r\n    }\r\n    this.draw();\r\n  }\r\n  draw(): void {\r\n    let p: IPoint = this.points[0];\r\n    const core: HTMLElement = this.createText(p, this.tp);\r\n    RemoveChildren(this.elem);\r\n    if (core) {\r\n      this.elem.append(core);\r\n    }\r\n    if (!this.tp) { this.tp = this.texManager.getTextParams(); }\r\n    this.calculateRange(CloneJson(this.tp));\r\n    const points: IPoint[] = Transform.transformArray2Window(this.outlinePoints, this.trf);\r\n    this.range = RangeManager.rangeByPoints(points, false);\r\n  }\r\n  setStyle(): void {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  addPoint(p: IPoint) {\r\n    const dist = this.points[0].SubtractPoint(p)\r\n    this.points = [p];\r\n\r\n    let bb: IPoint[] = [];\r\n    this.outlinePoints.forEach((b: IPoint) => {\r\n      let n: IPoint = b.SubtractPoint(dist);\r\n      bb.push(n);\r\n    });\r\n    this.outlinePoints = [...bb];\r\n    this.range = RangeManager.rangeByPoints(Transform.transformArray2Window(bb, this.trf), false);\r\n    // const testSpravnosti = () => {\r\n    //   //let points: IPoint[] = Transform.transformArray2Window(bb, this.trf);\r\n    //   let o:IBox=this.range;\r\n    //   let points=[\r\n    //     o.origin,\r\n    //     new Point(o.origin.x+o.width,o.origin.y),\r\n    //     new Point(o.origin.x+o.width,o.origin.y+o.height),\r\n    //     new Point(o.origin.x,o.origin.y+o.height)\r\n    //   ]\r\n    //   let d = PathFromPoints(points) + \"z\";\r\n    //   let e: HTMLElement = CreateSvgObject(NodeName.path, {\r\n    //     d,\r\n    //     style: \"stroke:yellow;stroke-width:3,fill:orange;fill-opacity:0.3\"\r\n    //   })\r\n    //   this.elem.append(e);\r\n    // }\r\n    //  testSpravnosti();\r\n\r\n    const b: IPoint = Transform.transform2Window(p, this.trf);\r\n    let transform: string = `translate(${b.toString()})`;\r\n    let curTx: HTMLElement = this.elem.querySelector(\"text[transform]\");\r\n    if (curTx) {\r\n      let t: string = curTx.getAttribute(\"transform\");\r\n      const res: any = t.match(/(?<=rotate\\()(.*)(?=\\))/g);\r\n      if (res) {\r\n        transform += ` rotate(${res[0]})`;\r\n      }\r\n      curTx.setAttribute(\"transform\", transform);\r\n    }\r\n  }\r\n  init(pad: HTMLElement): void {\r\n    this.elem = this.create();\r\n    this.pad = pad;\r\n    this.pad.appendChild(this.elem);\r\n    if (this.tp) {\r\n      this.draw();\r\n    }\r\n  }\r\n\r\n  finalize(): void {\r\n\r\n    (this?.points.length === 1) ? this.valid = true : this.valid = false;\r\n  }\r\n  getClosestPoint(realP: IPoint, bufer: number): IPoint {\r\n    let p: IPoint = Geometry.ClosestPointOnText(this.points[0], this.outlinePoints, realP);\r\n    return p;\r\n  }\r\n  getSelfClosestPoint(realP: IPoint, bufer: number, idx: number): IClosest {\r\n    return null;\r\n  }\r\n  create(): HTMLElement {\r\n    const e: HTMLElement = CreateSvgObject(NodeName.g, { _id: this._id, origin: \"\" });\r\n    return e;\r\n  }\r\n  style2String(): string {\r\n    // metódu nepotrebujem, lebo tu sa štýl nastavuje rovnako ako pri texte z databázy\r\n    return \"\";\r\n  }\r\n  toVisual(src?: TextParams, origin?: IPoint): any {\r\n    //vráti text vo formate v akom je uložený text reálne v db\r\n    if (src) {\r\n      const ret: any = {\r\n        type: TypeConstant.text,\r\n        origin,\r\n        alignment: src.alignment,\r\n        angle: src.angle,\r\n        lines: src.lines,\r\n      }\r\n      if (src.gap) {\r\n        ret[\"gap\"] = src.gap;\r\n      }\r\n      let style: {} = {};\r\n\r\n      for (const [key, value] of Object.entries(src)) {\r\n        switch (key) {\r\n          case \"font\":\r\n            style[\"font-family\"] = value;\r\n            break;\r\n          case \"color\":\r\n            style[\"fill\"] = value;\r\n            break;\r\n          case \"size\":\r\n            ret[\"fontSize\"] = value;\r\n            break;\r\n          case \"range\":\r\n            ret[\"range\"] = value;\r\n            break;\r\n          case \"opacity\":\r\n            if (value < 1) {\r\n              style[\"opacity\"] = value;\r\n            }\r\n            break;\r\n        }\r\n      }\r\n      if (src.bold) {\r\n        style[\"font-weight\"] = \"bold\";\r\n      }\r\n      if (src.underline) {\r\n        style[\"text-decoration\"] = \"underline\";\r\n      }\r\n      if (src.italic) {\r\n        style[\"font-style\"] = \"italic\";\r\n      }\r\n      ret[\"style\"] = style;\r\n      return ret;\r\n    }\r\n  }\r\n  save(): JSON {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  firstStep(r: Redline, stl: GeometryStyle, _id: string, p?: IPoint): void {\r\n    this.redline = r;\r\n    this.texManager = r.textManager;\r\n    this.trf = r.transform;\r\n    this.style = stl;\r\n    this._id = _id;\r\n    if (p) {\r\n      this.points = [p];\r\n    }\r\n    this.init(r.rdlDock);\r\n    this.fillable = false;\r\n  }\r\n  constructor() {\r\n    this.type = TypeConstant.redlinetext;\r\n  }\r\n\r\n\r\n}","import { svgArea } from \"..\";\r\nimport { CreateSvgObject, getSize } from \"../Helpers/helper\";\r\nimport { backColor, DrawingType, IBox, IDrawing, IEntityInWindow, ITransformParameters, NodeName } from \"../Helpers/interface\";\r\nimport { IPoint, Point } from \"../Helpers/pointDefs\";\r\nimport { RangeManager } from \"../Helpers/rangeManager\";\r\nimport { Transform } from \"../Helpers/transform\";\r\nimport Redline from \"../redline\";\r\nimport SvgArea from \"../svgArea\";\r\nimport { IVisual, TypeConstant } from \"../Helpers/interface\";\r\nimport { Circle } from \"./Model/Visuals/circle\";\r\nimport { Line } from \"./Model/Visuals/line\";\r\nimport { Shape } from \"./Model/Visuals/shape\";\r\nimport { Text } from \"./Model/Visuals/text\";\r\n\r\nexport class SvgManager {\r\n    svgArea:SvgArea;\r\n    drawingName:string;\r\n    parent:HTMLElement;\r\n    size: IBox;\r\n    range: IBox;\r\n    visuals: any[];\r\n    pubVisuals: IVisual[];\r\n    transform: ITransformParameters;\r\n    private setSize():void{\r\n        const sz = getSize(this.parent);\r\n        this.size = { width: sz.x, height: sz.y, origin: new Point() }\r\n    }\r\n    getRange(visuals: any[]): IBox {\r\n        const ranges: IBox[] = RangeManager.getRangeRecursive(visuals);\r\n        return RangeManager.rangeByRanges(ranges);\r\n    }\r\n    setGlobalTransform(): void {\r\n        this.setSize();\r\n        this.range = this.getRange(this.visuals);\r\n        this.transform = Transform.getDefaultTP(this.size, this.range);\r\n    }\r\n    render(svg:HTMLElement,pubVisuals: IVisual[]): void {\r\n        const g:HTMLElement=CreateSvgObject(NodeName.g,{\r\n            id:\"grf\",\r\n            fill:\"none\",\r\n            transform:\"\"\r\n        })\r\n        pubVisuals.forEach((v:IVisual) => {\r\n            g.appendChild(v.create());\r\n        });\r\n        svg.innerHTML=g.outerHTML;\r\n        svgArea.panZoom.panStart();\r\n    }\r\n    static getVisual(src: any,  manager: SvgManager): IVisual {\r\n        let visual: IVisual;\r\n\r\n        switch (src.type) {\r\n            case TypeConstant.line:\r\n                visual=new Line(src,manager.transform);\r\n                break;\r\n            case TypeConstant.shp:\r\n                visual=new Shape(src,manager.transform);\r\n                break;\r\n            case TypeConstant.circle:\r\n                visual=new Circle(src,manager.transform);\r\n                break;\r\n            case TypeConstant.text:\r\n                visual=new Text(src,manager.transform);\r\n        }\r\n        return visual;\r\n    }\r\n\r\n\r\n    setObjectsFromVisuals(): IVisual[] {\r\n        this.setSize();\r\n        const out: IVisual[] = [];\r\n        this.visuals.forEach(e => {\r\n            const origin: IPoint = new Point(e.range.origin.x, e.range.origin.y);\r\n            const width: number = e.range.width;\r\n            const height: number = e.range.height;\r\n            let rg: IBox = { origin, width, height };\r\n\r\n            const screenRange = () => {\r\n                // prepočíta range do obrazovkových súradníc\r\n                let lt: IPoint = rg.origin;\r\n                let rb: IPoint = new Point(lt.x + rg.width, lt.y - rg.height);\r\n                let pts: IPoint[] = [];\r\n                [lt, rb].forEach((p: IPoint) => {\r\n                    const b: IPoint = Transform.transform2Window(p,this.transform);\r\n                    pts.push(b);\r\n                })\r\n                rg.origin = pts[0];\r\n                rg.width = pts[1].x - pts[0].x;\r\n                rg.height = pts[1].y - pts[0].y;\r\n            }\r\n            screenRange();\r\n            const posTest: IEntityInWindow = RangeManager.RangesOverlap(rg, this.size);\r\n            if (posTest.out === false) {\r\n                const v: IVisual = SvgManager.getVisual(e,this);\r\n                if (v.valid) {\r\n                    out.push(v);\r\n                }\r\n            }\r\n        });\r\n        return out;\r\n    }\r\n    async run(trf?: ITransformParameters): Promise<any> {\r\n        if(trf){\r\n            const tp:ITransformParameters=this.transform;\r\n            tp.scl*=trf.scl;\r\n            tp.trl.x=(tp.trl.x+trf.trl.x)*trf.scl;\r\n            tp.trl.y=(tp.trl.y+trf.trl.y)*trf.scl;\r\n        }\r\n        return new Promise((resolve) => {\r\n            this.pubVisuals = this.setObjectsFromVisuals();\r\n            this.render(this.parent.querySelector(\"svg.canvas\") as any,this.pubVisuals);\r\n            resolve(\"success\");\r\n        }).then(()=>{\r\n            const r:Redline=this.svgArea?.redlinesManagement?.redline;\r\n            if(r){\r\n                if(r.afterScroll){\r\n                   r.afterScroll=false; \r\n                }\r\n                r.transform=this.transform;\r\n                r.draw();\r\n            }\r\n        })\r\n    }\r\n    constructor(svgArea:SvgArea, e: IDrawing) {\r\n        this.drawingName=e.name;\r\n        this.visuals = e.visuals;\r\n        this.parent=svgArea.drawing;\r\n        this.svgArea=svgArea;\r\n        this.setGlobalTransform();\r\n    }\r\n}","import tippy from \"tippy.js\";\r\nimport { createFragment, CreateSvgObject, getSize, loadData } from \"./Helpers/helper\";\r\nimport \"tippy.js/themes/light.css\";\r\nimport { IRedline, IRedlineVisual, loadType, NodeName, PanZoomEvt, RedlineTyp } from \"./Helpers/interface\";\r\nimport { initSvgArea, svgArea } from \".\";\r\nimport { SvgManager } from \"./Server/svgManager\";\r\nimport { IPoint } from \"./Helpers/pointDefs\";\r\nimport SVGPathCommander from 'svg-path-commander';\r\nimport Redline from \"./redline\";\r\n\r\n\r\ndocument.getElementById(\"btInit\").addEventListener(\"click\", () => {\r\n    initSvgArea(document.getElementById(\"micro-drawing\"));\r\n})\r\n\r\n// document.getElementById(\"btLoad\").addEventListener(\"click\", async () => {\r\n//     if (svgArea) {\r\n//         fetch(\"http://localhost:3000/drawing/1\")\r\n//             .then(response => response.json())\r\n//             .then((data) => {\r\n//                 svgArea.svgManager = new SvgManager(svgArea, data);\r\n//                 svgArea.svgManager.run();\r\n//             }\r\n//             );\r\n//     }\r\n// })\r\ndocument.getElementById(\"btLoad\").addEventListener(\"click\", async () => {\r\n    if (svgArea) {\r\n        const URL = \"https://rendererdatastorage.blob.core.windows.net/renderdata/data.json?sp=r&st=2023-01-30T08:32:17Z&se=2023-12-31T16:32:17Z&spr=https&sv=2021-06-08&sr=b&sig=D7tzNUh3UNVHCK8BYTOOwM4J8jj6D%2Bvg%2BwlTHMGnKpo%3D\";\r\n        fetch(URL,{\r\n            mode: 'cors',\r\n            method: 'GET',\r\n            headers: {\r\n              \"Access-Control-Allow-Origin\": \"https://rendererdatastorage.blob.core.windows.net\",\r\n              'Content-Type': \"application/json\"\r\n            }\r\n          })\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                svgArea.svgManager = new SvgManager(svgArea, data.drawing[0]);\r\n                svgArea.svgManager.run();\r\n            }\r\n            );\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\ndocument.getElementById(\"btRedline\").addEventListener(\"click\", () => {\r\n    const path: string = new URL(\"./systemFiles/confirmationModal.html\", import.meta.url).href;\r\n    loadData(path).then(data => {\r\n        svgArea.drawing.appendChild(createFragment(data));\r\n    })\r\n\r\n})\r\ndocument.getElementById(\"testDb\").addEventListener(\"click\", async () => {\r\n    // testGet().then(() => console.log(\"hurá\"));\r\n    // addRecord();\r\n    //DeleteRec(\"super\")\r\n    // updateRec_Patch(\"super\");\r\n    // updateOrder();\r\n    let redlines: Promise<any> = getData();\r\n    redlines.then((data: IRedline) => {\r\n        console.log(JSON.stringify(data));\r\n    })\r\n})\r\n\r\ndocument.getElementById(\"btTest\").addEventListener(\"click\", () => {\r\n    let r: Redline = svgArea?.redlinesManagement?.redline;\r\n    if (r) {\r\n        r.save(); \r\n    }\r\n})\r\n\r\n\r\n\r\ndocument.getElementById(\"getSize\").addEventListener(\"click\", () => {\r\n    if (svgArea) {\r\n        const sz: IPoint = getSize(svgArea.drawing);\r\n        console.log(\"size> \" + sz.toString());\r\n    }\r\n})\r\n\r\nconst addRecord = async () => {\r\n    const data = {\r\n        \"name\": \"KKK\",\r\n        \"visible\": false,\r\n        \"visuals\": [],\r\n        \"pos\": 77,\r\n        \"id\": \"super\"\r\n    }\r\n    fetch(\"http://localhost:3000/redlines\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n    }).then(response => response.json().then((data) =>\r\n        console.log(data.id)\r\n    )\r\n    ).catch(err => {\r\n        console.log(err);\r\n    })\r\n}\r\nconst testGet = async () => {\r\n    fetch(\"http://localhost:3000/redlines\")\r\n        .then(response => response.json())\r\n        .then((data) =>\r\n            console.log(data)\r\n        );\r\n}\r\nconst DeleteRec = async (id: string) => {\r\n    fetch(\"http://localhost:3000/redlines/\" + id, {\r\n        method: \"DELETE\",\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n    })\r\n        .then(response => response.json())\r\n        .then((data) =>\r\n            console.log(data)\r\n        );\r\n}\r\n\r\nconst updateRec = async (id: string) => {\r\n    // aktualizuje cely objekt\r\n    const data = {\r\n        \"name\": \"Hurá\",\r\n        \"visible\": false,\r\n        \"visuals\": [],\r\n        \"pos\": 77,\r\n        \"id\": \"super\"\r\n    }\r\n    fetch(\"http://localhost:3000/redlines/\" + id, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(data),\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n    })\r\n        .then(response => response.json())\r\n        .then((data) =>\r\n            console.log(data)\r\n        );\r\n}\r\nconst updateRec_Patch = async (id: string) => {\r\n    // aktualizuje iba vybrate polozky\r\n    const data = {\r\n        \"name\": \"Hurá1\",\r\n        \"pos\": 88\r\n    }\r\n    fetch(\"http://localhost:3000/redlines/\" + id, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(data),\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n    })\r\n        .then(response => response.json())\r\n        .then((data) =>\r\n            console.log(data)\r\n        );\r\n}\r\n\r\nconst updateOrder = async () => {\r\n    // aktualizuje cely objekt\r\n    const data = {\r\n        \"list\": [\"4\", \"99\", \"3\", \"9991\", \"1a\", \"2\", \"HVvGSrL\", \"super\"]\r\n    };\r\n    fetch(\"http://localhost:3000/order?list\", {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(data),\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n    })\r\n        .then(response => response.json())\r\n        .then((data) =>\r\n            console.log(data)\r\n        );\r\n}\r\n\r\nconst getData = async (): Promise<IRedline[]> => {\r\n    let order: any;\r\n    let unOrderedRedlines: any;\r\n    await fetch(\"http://localhost:3000/order?list\")\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            order = data;\r\n        })\r\n    await fetch(\"http://localhost:3000/redlines\")\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            unOrderedRedlines = data;\r\n        })\r\n    if (order) {\r\n        let redlines: any = [];\r\n        order.list.forEach((id: string) => {\r\n            let e = unOrderedRedlines.find(f => f.id === id);\r\n            redlines.push(e);\r\n        });\r\n        return redlines as any;\r\n    } else {\r\n        return unOrderedRedlines as any;\r\n    }\r\n}","import { match } from \"assert\";\r\nimport { IpcNetConnectOpts } from \"net\";\r\nimport { isDataView } from \"util/types\";\r\nimport { Geometry } from \"../Helpers/geometry\";\r\nimport { getSize, OS } from \"../Helpers/helper\";\r\nimport { ICursorResult, ITransformParameters, OsPlatform, PanZoomEvt } from \"../Helpers/interface\";\r\nimport { IPoint, Point } from \"../Helpers/pointDefs\";\r\nimport Redline from \"../redline\";\r\nimport { ITuft, vertexType } from \"../Helpers/interface\";\r\nimport SvgArea from \"../svgArea\";\r\nexport const svgNs: string = \"http://www.w3.org/2000/svg\";\r\nconst scrolRatio = (): number => OS === OsPlatform.Mac_OS ? 1.1 : 1.3;\r\nexport class PanZoom {\r\n  svgArea: SvgArea;\r\n  pad: HTMLElement;\r\n  grf: HTMLElement;\r\n  activeTuft: ITuft;\r\n  trf: ITransformParameters;\r\n  type: PanZoomEvt;\r\n  pressed: boolean = false;\r\n  timerScroll: any = null; // obsluha zoom\r\n  timeResize: any = null; // obsluha zmeny okna\r\n  cancelClick: boolean = false // po posune tuftu\r\n  busy: boolean = false// po artificial clicku\r\n  sr: number = scrolRatio();\r\n\r\n  private testSvgManager(): boolean {\r\n    if (this.svgArea.svgManager) {\r\n      return true;\r\n    }\r\n  }\r\n  private testRedlineActive(): boolean {\r\n    if (this.svgArea.svgManager) {\r\n      if (this.svgArea?.redlinesManagement?.redline) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  setCursor(key: string) {\r\n    this.pad.setAttribute(\"redline-method\", key);\r\n  }\r\n  setSnap(snap: boolean) {\r\n    if (snap) {\r\n      this.pad.setAttribute(\"redline-method-snap\", \"\");\r\n    } else {\r\n      this.pad.removeAttribute(\"redline-method-snap\");\r\n    }\r\n  }\r\n  run() {\r\n    if (this.testSvgManager()) {\r\n      const cur: PanZoomEvt = this.type;\r\n      let timer: any;\r\n      this.type = PanZoomEvt.stop;\r\n      this.svgArea.svgManager.run(this.trf).then(() => {\r\n        this.type = cur;\r\n        if (this.testRedlineActive()) {\r\n          this.svgArea.redlinesManagement.redline.pause = true;\r\n          timer = setTimeout(() => {\r\n            this.svgArea.redlinesManagement.redline.pause = false;\r\n            timer = null;\r\n          }, 50);\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  panStart() {\r\n    this.grf = this.pad.querySelector(\"g[id='grf']\");\r\n    this.trf = { scl: 1, trl: new Point() }\r\n    this.type = PanZoomEvt.pan;\r\n  }\r\n  getElms(b: IPoint): ICursorResult {\r\n    const orig: string = \"oprig-style\";\r\n    const a: any = [];\r\n    const cursorObj: any = [];\r\n    let obj: Element = null;\r\n    let ret: ICursorResult = { cancel: false, _id: [] };\r\n    const showBack = () => {\r\n      for (let i: number = 0; i < a.length; ++i) {\r\n        const e: HTMLElement = a[i];\r\n        e.setAttribute(\"style\", e.getAttribute(orig));\r\n        e.removeAttribute(orig);\r\n        const uri: string = e.namespaceURI.toLocaleLowerCase();\r\n        let id: any = e.getAttribute(\"_id\");\r\n        if (id && uri === svgNs && e.nodeName.toLocaleLowerCase() !== \"svg\") {\r\n          if (!ret._id.includes(id)) {\r\n            ret._id.push(e);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (\"elementFromPoint\" in document) {\r\n      do {\r\n        obj = document.elementFromPoint(b.x, b.y);\r\n        obj.setAttribute(orig, obj.getAttribute(\"style\"));\r\n        console.log(obj);\r\n\r\n        if (obj.nodeName.toLocaleLowerCase() === \"div\" && obj.getAttribute(\"id\") === \"svgArea\") {\r\n          showBack();\r\n          return ret;;\r\n        } else {\r\n          let obj1: any = obj.parentNode;\r\n          cursorObj.push(obj1);\r\n        }\r\n        a.push(obj);\r\n        (obj as any).style.display = \"none\";\r\n      } while (true);\r\n    }\r\n    showBack();\r\n  }\r\n\r\n  zoom(p: IPoint, deltaY: number, r): void {\r\n    const rr: number = deltaY < 0 ? r : 1 / r;\r\n    const scl: number = this.trf.scl;\r\n    this.trf.scl *= rr;\r\n    this.trf.trl.x -= ((p.x + this.trf.trl.x) * (this.trf.scl - scl)) / this.trf.scl;\r\n    this.trf.trl.y -= ((p.y + this.trf.trl.y) * (this.trf.scl - scl)) / this.trf.scl;\r\n    this.grf.setAttribute(\"transform\", `scale(${this.trf.scl}) translate(${this.trf.trl.toString()})`);\r\n  }\r\n  // touchStart(p: IPoint): void {\r\n  //   this.pressed = true;\r\n  // }\r\n  // touchEnd(p: IPoint) {\r\n  //   this.pressed = false;\r\n  //   if (Math.abs(this.trf.trl.x) + Math.abs(this.trf.trl.y) > 0) {\r\n  //     this.run();\r\n  //   }\r\n  // }\r\n  click(ev: PointerEvent): void {\r\n    if (this.cancelClick) {\r\n      console.log(\"po posune nič nerieš\");\r\n      return; // po posune nič nerieš \r\n    }\r\n    if (this.testRedlineActive()) {\r\n      this.svgArea.redlinesManagement.redline.onMouseDown(ev);\r\n    }\r\n  }\r\n  events(): void {\r\n    this.pad.addEventListener(\"pointerdown\", (ev: PointerEvent) => {\r\n      if (this.type === PanZoomEvt.stop) {\r\n        return;\r\n      }\r\n      this.pad.setAttribute(\"pan\", \"panstart\");\r\n      this.pressed=true;\r\n    })\r\n    this.pad.addEventListener(\"pointerup\", (ev: PointerEvent) => {\r\n      if (this.activeTuft) {\r\n        if (this.activeTuft.type === vertexType.vertex) // pokusi sa vertex odstranit ak to prvok umoznuje\r\n        {\r\n          if (this.activeTuft.dynamic) {\r\n            this.activeTuft.dynamic = false;\r\n          }\r\n          else {\r\n            this.activeTuft.visual.removeVertex(this.activeTuft);\r\n          }\r\n        }\r\n        //this.activeTuft.finalized=false;\r\n        this.activeTuft.finalize(ev);\r\n        return;\r\n      }\r\n      if (this.type === PanZoomEvt.stop) {\r\n        return;\r\n      }\r\n      this.pad.removeAttribute(\"pan\");\r\n      // let p: IPoint = Point.ExactPoint(new Point(ev.offsetX, ev.offsetY), 0);\r\n      // this.touchEnd(p);\r\n      this.pressed = false;\r\n      if (Math.abs(this.trf.trl.x) + Math.abs(this.trf.trl.y) > 0) {\r\n        this.run();\r\n      }\r\n    })\r\n    this.pad.addEventListener(\"pointermove\", (ev: PointerEvent) => {\r\n      if (this.activeTuft) {\r\n        let p: IPoint = Point.ExactPoint(new Point(ev.movementX, ev.movementY), 0);\r\n        let c = this.activeTuft.center.AddPoint(p);\r\n        this.activeTuft.updatePos(c, true);\r\n        this.activeTuft.finalized=false;\r\n        return;\r\n      }\r\n      if (this.type === PanZoomEvt.stop) {\r\n        return;\r\n      }\r\n      if (this.pressed) {\r\n        this.pad.setAttribute(\"pan\", \"pan\");\r\n        let p: IPoint = Point.ExactPoint(new Point(ev.movementX, ev.movementY), 0);\r\n        this.trf.trl = this.trf.trl.AddPoint(p);\r\n        this.grf.setAttribute(\"transform\", `scale(${this.trf.scl}) translate(${this.trf.trl.toString()})`);\r\n      }\r\n    })\r\n\r\n    this.pad.addEventListener(\"wheel\", (ev: any) => {\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n      if (this.type === PanZoomEvt.stop) {\r\n        return false;\r\n      }\r\n      if (this.pressed === false) {\r\n        let p: IPoint = Point.ExactPoint(new Point(ev.offsetX, ev.offsetY), 0);\r\n        this.zoom(p, ev.deltaY, this.sr);\r\n        try {\r\n          if (this.timerScroll === null) {\r\n            this.timerScroll = setTimeout(() => {\r\n              clearTimeout(this.timerScroll);\r\n              this.timerScroll = null;\r\n              const r: Redline = this.svgArea?.redlinesManagement?.redline;\r\n              if (r) {\r\n                r.afterScroll = true;\r\n              }\r\n              this.run();\r\n            }, 600);\r\n          }\r\n        } catch (e) {\r\n          console.log(\"Zooming error: \" + e);\r\n        }\r\n      }\r\n      return false;\r\n    }, { passive: false })\r\n    this.pad.addEventListener(\"pointerleave\", () => {\r\n      if (this.type === PanZoomEvt.stop) {\r\n        return;\r\n      }\r\n      this.pad.removeAttribute(\"pan\");\r\n      this.pressed = false;\r\n    })\r\n    this.pad.addEventListener(\"click\", (ev: PointerEvent) => {\r\n      if (this.type === PanZoomEvt.stop) {\r\n        return;\r\n      }\r\n      this.click(ev);\r\n    })\r\n    window.addEventListener(\"resize\", ev => {\r\n      // spustí prekreslenie ale iba ak sa okno zväčší\r\n      if (this.testSvgManager()) {\r\n        if (this.timeResize === null) {\r\n          this.timeResize = setTimeout(() => {\r\n            const oldsz: IPoint = new Point(this.svgArea.svgManager.size.width, this.svgArea.svgManager.size.height);\r\n            const sz: IPoint = getSize(this.svgArea.container);\r\n            this.svgArea.svgManager.size = { width: sz.x, height: sz.y, origin: new Point() }\r\n            clearTimeout(this.timeResize);\r\n            this.timeResize = null;\r\n            let redraw: boolean = sz.x - oldsz.x > 0 ? true : false;\r\n            redraw = sz.y - oldsz.y > 0 ? true : redraw;\r\n            if (redraw) {\r\n              this.run();\r\n            }\r\n          }, 600)\r\n        }\r\n      }\r\n    })\r\n\r\n  }\r\n  constructor(pad: HTMLElement, svgArea: SvgArea) {\r\n    this.svgArea = svgArea;\r\n    this.pad = pad;\r\n    this.events();\r\n    this.panStart();\r\n  }\r\n}\r\n\r\n","const url: string = \"http://localhost:3000/\";\r\n\r\nimport { svgArea } from \".\";\r\nimport { createFragment, loadData } from \"./Helpers/helper\";\r\nimport { IRedline } from \"./Helpers/interface\";\r\n\r\n\r\nexport const getData = async (): Promise<IRedline[]> => {\r\n\r\n    const path: string = new URL(\"./systemFiles/blockScreenSave.html\", import.meta.url).href;\r\n    let banner: HTMLElement = svgArea.container.querySelector(\"#block-screen-save\");\r\n    if (!banner) {\r\n        await loadData(path).then(data => {\r\n            banner = createFragment(data);\r\n            svgArea.container.appendChild(banner);\r\n        })\r\n    }\r\n    banner.style.display = \"block\"\r\n\r\n    let order: any;\r\n    let unOrderedRedlines: any;\r\n    await fetch(url + \"order?list\")\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            order = data;\r\n        })\r\n    await fetch(url + \"redlines\")\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            unOrderedRedlines = data;\r\n        })\r\n\r\n    banner.style.display = \"none\";\r\n    if (order) {\r\n        let redlines: any = [];\r\n        order.list.forEach((id: string) => {\r\n            let e = unOrderedRedlines.find(f => f.id === id);\r\n            redlines.push(e);\r\n        });\r\n        return redlines as any;\r\n    } else {\r\n        return unOrderedRedlines as any;\r\n    }\r\n}\r\nexport const updateOrder = async (data: string[]): Promise<any> => {\r\n    // aktualizuje cely objekt\r\n    const dataList = {\r\n        \"list\": data\r\n    };\r\n    await fetch(\"http://localhost:3000/order?list\", {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(dataList),\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n    })\r\n        .then(response => response.json())\r\n        .then((data) =>\r\n            console.log(data)\r\n        );\r\n    return Promise.resolve();\r\n}","import { svgArea } from \".\";\r\nimport { GeometryStyle } from \"./geometryStyle\";\r\nimport { PanZoom } from \"./Gestures/panZoom\";\r\nimport { Geometry } from \"./Helpers/geometry\";\r\nimport { createGuid, CreateSvgObject, RemoveChildren } from \"./Helpers/helper\";\r\nimport { IBox, IRedlineFull, ITransformParameters, NodeName } from \"./Helpers/interface\";\r\nimport { IPoint, Point } from \"./Helpers/pointDefs\";\r\nimport { SelBox } from \"./Helpers/selBox\";\r\nimport { Transform } from \"./Helpers/transform\";\r\nimport { Tuft } from \"./Helpers/tuft\";\r\nimport { IRedlineVisual, ITuft, IVisual, RedlineMethod, RedlineTyp, TypeConstant, vertexType } from \"./Helpers/interface\";\r\nimport { RCircle } from \"./Server/Model/Visuals/circle\";\r\nimport { Line, RLine } from \"./Server/Model/Visuals/line\";\r\nimport { RShape } from \"./Server/Model/Visuals/shape\";\r\nimport { RText } from \"./Server/Model/Visuals/text\";\r\nimport { TextStyleManager } from \"./ui/textStyleManager\";\r\nimport { stripVTControlCharacters } from \"util\";\r\nimport { type } from \"os\";\r\n\r\nclass Redline {\r\n    guid: string = \"e70c0e43-731a-416f-82de-aa3958498ff8\";\r\n    transform: ITransformParameters;\r\n    curMethod: RedlineMethod;\r\n    curType: RedlineTyp;\r\n    panZoom: PanZoom;\r\n    rdl: IRedlineFull;\r\n    rdlDock: HTMLElement;\r\n    selBoxDock: HTMLElement;\r\n    miscDock: HTMLElement;\r\n    tuftsDock: HTMLElement;\r\n    curVisual: IRedlineVisual;\r\n    pin: ITuft;\r\n    snap: boolean;\r\n    pause: boolean = false;\r\n    afterScroll: boolean = false;\r\n    buffer: number = 15;\r\n    tippyContextInstance: any;\r\n    textManager: TextStyleManager;\r\n    fillTextDialog: boolean;\r\n    eventFtromTextInput: boolean;\r\n    init(): void {\r\n        let root: HTMLElement = this.panZoom.pad.querySelector(`g[id=\"${this.guid}\"]`);\r\n        if (root) {\r\n            root.remove();\r\n        }\r\n        this.panZoom.grf.setAttribute(\"id\", \"grf-orginal\");\r\n        let grf = CreateSvgObject(NodeName.g, { \"id\": \"grf\" });\r\n        this.panZoom.pad.insertBefore(grf, this.panZoom.grf);\r\n        grf.appendChild(this.panZoom.grf);\r\n        this.panZoom.grf = grf;\r\n        root = CreateSvgObject(NodeName.g, { style: \"fill:none\", id: this.guid });\r\n        this.rdlDock = CreateSvgObject(NodeName.g, { class: \"rdlDock\" });\r\n        this.selBoxDock = CreateSvgObject(NodeName.g, { class: \"selBoxDock\" });\r\n        this.miscDock = CreateSvgObject(NodeName.g, { class: \"miscDock\" });\r\n        this.tuftsDock = CreateSvgObject(NodeName.g, { class: \"tuftsDock\" });\r\n        root.appendChild(this.rdlDock);\r\n        root.appendChild(this.selBoxDock);\r\n        root.appendChild(this.miscDock);\r\n        root.appendChild(this.tuftsDock);\r\n        this.panZoom.grf.appendChild(root);\r\n    }\r\n    // pri starte je potrebné nastavit konkretne triedy objektom\r\n    jsonList2Visual(){\r\n        const visuals:IRedlineVisual[]=[];\r\n        this.rdl.visuals.forEach(e=>{\r\n            let v:IRedlineVisual;\r\n            let _id = createGuid();\r\n            switch(e.type){\r\n                case RedlineTyp.line:\r\n                    v=new RLine();\r\n                    v.points=Point.PointsFromObjects(e.points);\r\n                    v.redline=this;\r\n                    v._id=_id;\r\n                    break;\r\n            }\r\n            if(v){\r\n                visuals.push(v);\r\n            }\r\n        })\r\n        this.rdl.visuals=visuals;\r\n    }\r\n    save(){\r\n        const x:any=[];\r\n        this.rdl.visuals.forEach((v:IRedlineVisual)=>{\r\n            const data:any=v.save();\r\n            if(data){\r\n                x.push(data);\r\n            }\r\n        })\r\n        console.log(JSON.stringify(x));\r\n    }\r\n    editVisual() {\r\n        this.curMethod = RedlineMethod.edit;\r\n        this.curType = RedlineTyp.none;\r\n        let refresh: boolean = false;\r\n        if (this.curVisual) {\r\n            let _id: string = this.curVisual._id;\r\n            this.finalize();\r\n            let v: IRedlineVisual = this.rdl.visuals.find(f => f._id === _id);\r\n            v.isEdited = true;\r\n            SelBox.create(v);\r\n            // v.edit();\r\n        } else {\r\n            let v: IRedlineVisual = this.rdl.visuals.find(f => f.isEdited);\r\n            if (v) {\r\n                v.isEdited = false; v.selBox.target.remove(); RemoveChildren(this.tuftsDock);\r\n            } else {\r\n                let sel: IRedlineVisual[] = this.getSelected();\r\n                if (sel.length === 1) {\r\n                    const sel0: IRedlineVisual = sel[0];\r\n                    if (sel0.type === TypeConstant.redlinetext) {\r\n                        this.fillTextDialog = true;\r\n                    }\r\n                    sel0.isEdited = true;\r\n                    sel0.edit();\r\n                    refresh = true;\r\n                } else if (sel.length > 1) {\r\n                    sel.forEach((v: IRedlineVisual) => SelBox.destroy(v));\r\n                    refresh = true;\r\n                }\r\n            }\r\n            if (refresh) {\r\n                this.panZoom.run();\r\n            }\r\n        }\r\n    }\r\n    removeSelected() {\r\n        if (this.curVisual) {\r\n            this.curVisual.elem.remove();\r\n            this.curVisual = undefined;\r\n            this.pin.finalize(undefined);\r\n            this.pin.target.remove();\r\n            this.pin = undefined;\r\n        } else {\r\n            // selektované odstrani\r\n            let h: number = this.rdl.visuals.length - 1;\r\n            if (h > -1) {\r\n                for (let i: number = h; i > -1; i--) {\r\n                    if (this.rdl.visuals[i].selBox) {\r\n                        this.rdl.visuals.splice(i, 1)\r\n                    }\r\n                }\r\n                this.panZoom.run();\r\n            }\r\n        }\r\n    }\r\n    moveSelected2Top() {\r\n        let h: number = this.rdl.visuals.length - 1;\r\n        let tmp: any = [];\r\n        if (h > -1) {\r\n            for (let i: number = h; i > -1; i--) {\r\n                if (this.rdl.visuals[i].selBox) {\r\n                    let v = this.rdl.visuals[i];\r\n                    // https://thewebdev.info/2022/02/06/how-to-clone-a-javascript-class-instance/\r\n                    const fooClone: any = Object.assign(Object.create(Object.getPrototypeOf(v)), v)\r\n                    this.rdl.visuals.splice(i, 1);\r\n                    this.rdl.visuals.push(fooClone);\r\n                }\r\n            }\r\n            this.panZoom.run();\r\n        }\r\n    }\r\n    getSelected(): IRedlineVisual[] {\r\n        return this.rdl.visuals.filter(f => f.selBox);\r\n    }\r\n    draw() {\r\n        this.init();\r\n        if (this.rdl.visuals) {\r\n            this.rdl.visuals.forEach((v: IRedlineVisual) => {\r\n                v.trf = this.transform;\r\n                v.init(this.rdlDock);\r\n                v.draw();\r\n                if (v.selBox) {\r\n                    v.selBox.init();\r\n                }\r\n            });\r\n        }\r\n        if (this.curVisual) {\r\n            this.curVisual.init(this.rdlDock);\r\n            this.curVisual.draw();\r\n            const winPoint: IPoint = Transform.transform2Window(this.curVisual.points[this.curVisual.points.length - 1], this.transform);\r\n            this.pin = new Tuft(this.curVisual, winPoint, this.tuftsDock, this, -1, vertexType.tuft);\r\n        }\r\n        //this.addSelectionEvents();\r\n    }\r\n    createOrModifyPin(winPoint: IPoint, dynamic: boolean) {\r\n        if (this.pin) {\r\n            this.pin.updatePos(winPoint, dynamic);\r\n        } else {\r\n            this.pin = new Tuft(this.curVisual, winPoint, this.tuftsDock, this, -1, vertexType.tuft);\r\n        }\r\n    }\r\n    clearEditedVisual = () => {\r\n        let edited = this.rdl.visuals.find(f => f.isEdited === true);\r\n        if (edited) {\r\n            edited.isEdited = false;\r\n            RemoveChildren(this.tuftsDock);\r\n            SelBox.destroy(edited);\r\n        }\r\n    }\r\n    finalize(): void {\r\n        if (this.curVisual) {\r\n            this.curVisual.finalize();\r\n            if (this.curVisual.valid) {\r\n                this.rdl.visuals.push(this.curVisual);\r\n            } else {\r\n                this.rdlDock.querySelectorAll(`*[_id=\"${this.curVisual._id}\"]`).forEach(e => {\r\n                    e.remove();\r\n                })\r\n\r\n            }\r\n            this.curVisual = undefined;\r\n            if (this.pin) {\r\n                this.pin.target.remove();\r\n                this.pin = undefined;\r\n            }\r\n        }\r\n        this.unselectAll();\r\n        this.clearEditedVisual();\r\n    }\r\n    mouseDownContinue(p: IPoint) {\r\n        const b: IPoint = Transform.transform2Real(p, this.transform);\r\n        const stl: GeometryStyle = new GeometryStyle();\r\n        if (!this.curVisual) {\r\n            if (this.curMethod === RedlineMethod.edit) {\r\n                if (this.curType === RedlineTyp.none) {\r\n                    // posun editovaneho Tuftu\r\n                    if (this.pin && this.pin.type === vertexType.vertex) {\r\n                        this.pin.dynamic = false;\r\n                        this.pin.finalize(null);\r\n                    }\r\n                } else {\r\n                    let _id = createGuid();\r\n                    switch (this.curType) {\r\n                        case RedlineTyp.line:\r\n                            this.curVisual = new RLine();\r\n                            this.curVisual.firstStep(this, stl, _id, b);\r\n                            break;\r\n                        case RedlineTyp.shp:\r\n                            this.curVisual = new RShape();\r\n                            this.curVisual.firstStep(this, stl, _id, b);\r\n                            break;\r\n                        case RedlineTyp.circle:\r\n                            this.curVisual = new RCircle();\r\n                            this.curVisual.firstStep(this, stl, _id, b);\r\n                            break;\r\n                        case RedlineTyp.redlinetext:\r\n                            const rt: RText = new RText();\r\n                            rt.firstStep(this, stl, _id, b);\r\n                            rt.drawFromDialog();\r\n                            this.curVisual = rt;\r\n                            break;\r\n                    }\r\n                }\r\n            } else if (this.curMethod === RedlineMethod.select) {\r\n                console.log(\"select\");\r\n            }\r\n        } else {\r\n            this.curVisual.addPoint(b);\r\n        }\r\n        if (this.curVisual) {\r\n            this.createOrModifyPin(p, false);\r\n        }\r\n    }\r\n    unselectAll() {\r\n        this.getSelected().forEach(v => SelBox.destroy(v));\r\n        //this.rdl.visuals.filter(f => f.isEdited).forEach(v=>v.isEdited=false);\r\n    }\r\n    onMouseDown(ev: PointerEvent) {\r\n        if (this.pause) {// brani nechcenému kliknutiu po refresh [panZoom.run()]\r\n            this.pause = false;\r\n            return;\r\n        }\r\n        if (this.eventFtromTextInput) {\r\n            this.finalize();\r\n            this.eventFtromTextInput = false;\r\n        }\r\n        let p: IPoint = Point.ExactPoint(new Point(ev.offsetX, ev.offsetY), 0);\r\n        if (this.curMethod === RedlineMethod.select) {\r\n            if (this.tippyContextInstance) {\r\n                this.tippyContextInstance.destroy();\r\n                this.tippyContextInstance = undefined;\r\n            }\r\n            Geometry.selectByPosition(p, ev, this, false, this.pin);\r\n            return;\r\n        }\r\n        else if (this.curMethod === RedlineMethod.edit && this.curType === RedlineTyp.none) {\r\n            this.unselectAll();\r\n            this.clearEditedVisual();\r\n            this.rdl.visuals.filter(f => f.isEdited === true).forEach(v => v.isEdited = false);\r\n            Geometry.selectByPosition(p, ev, this, false, this.pin);\r\n            //this.editVisual();\r\n            return;\r\n        }\r\n        if (this.snap) {\r\n            Geometry.selectByPosition(p, ev, this, true, this.pin);\r\n            return;\r\n        }\r\n        this.mouseDownContinue(p);\r\n    }\r\n\r\n    constructor(rdl: IRedlineFull, transform: ITransformParameters, panZoom: PanZoom) {\r\n        this.rdl = rdl;\r\n        this.transform = transform;\r\n        this.panZoom = panZoom;\r\n        //this.init();\r\n        this.jsonList2Visual();\r\n        this.draw();\r\n        this.curMethod = RedlineMethod.select;\r\n        panZoom.setCursor(\"select\")\r\n    }\r\n}\r\n\r\nexport default Redline;","import { svgArea } from \"..\";\r\nimport { createFragment, loadData } from \"../Helpers/helper\";\r\nimport { backColor, IDialog } from \"../Helpers/interface\";\r\n\r\nexport class ConfirmationDialog implements IDialog {\r\n    parent: HTMLElement;\r\n    panel: HTMLElement;\r\n    show(redlineName: string): void {\r\n        this.panel.querySelector(\".modal-title\").innerHTML\r\n            = `Aktívna redline vrstva <b>${redlineName}</b>`;\r\n        this.panel.querySelector(\".modal-body\").innerHTML\r\n            = `<p>Najprv je potrebné aktívnu vrstvu deaktivovať potvtdením alebo zrušením zmien!</p>`;\r\n\r\n        this.panel.style.display = \"block\";\r\n        this.panel.setAttribute(\"role\", \"dialog\");\r\n        this.panel.classList.remove(\"show\");\r\n    }\r\n    close(): void {\r\n        this.panel.style.display = \"none\";\r\n        this.panel.removeAttribute(\"role\");\r\n        this.panel.classList.remove(\"show\");\r\n    }\r\n    events(): void {\r\n        const close: HTMLElement = this.panel.querySelector(\".modal-header .btn-close\");\r\n        close.addEventListener(\"click\", () => {\r\n            this.close();\r\n        })\r\n        const save: HTMLElement = this.panel.querySelector(\".modal-footer .redline-save\");\r\n        save.addEventListener(\"click\", () => {\r\n            // uloží a zneaktívni aktívnu vrstvu\r\n            svgArea.redlinesManagement.saveCurrentRedline();\r\n        })\r\n        const dismiss: HTMLElement = this.panel.querySelector(\".modal-footer [data-bs-dismiss]\");\r\n        dismiss.addEventListener(\"click\", () => {\r\n            // zneaktívni aktívnu vrstvu\r\n            svgArea.redlinesManagement.cancel();\r\n            this.close();\r\n        })\r\n    }\r\n    load(redlineName: string): void {\r\n        const path: string = new URL(\"../systemFiles/confirmationModal.html\", import.meta.url).href;\r\n        loadData(path).then(data => {\r\n            this.panel = createFragment(data);\r\n            this.parent.appendChild(this.panel);\r\n            this.events();\r\n            this.show(redlineName);\r\n        })\r\n    }\r\n    constructor(parent: HTMLElement, redlineName: string) {\r\n        this.parent = parent;\r\n        this.load(redlineName);\r\n    }\r\n}","import { svgArea } from \"..\";\r\nimport { createFragment, loadData } from \"../Helpers/helper\";\r\nimport { backColor, IDialog } from \"../Helpers/interface\";\r\n\r\nexport class CreateRedlineDialog implements IDialog{\r\n    parent: HTMLElement;\r\n    panel: HTMLElement;\r\n    name:string;\r\n    show(){\r\n        if(this.panel.style.display===\"none\"){\r\n            this.panel.style.display=\"\";\r\n        } else{\r\n            this.panel.style.display=\"none\";\r\n        }\r\n        \r\n    }\r\n    events(): void {\r\n        this.panel.querySelector(\"button.close\").addEventListener(\"click\",()=>{\r\n            this.panel.style.display=\"none\";\r\n        })\r\n        this.panel.querySelector(\"button#btnRedlineCancel\").addEventListener(\"click\",()=>{\r\n            this.panel.style.display=\"none\";\r\n        })\r\n        this.panel.querySelector(\"button#btnRedlineAccept\").addEventListener(\"click\",()=>{\r\n            let i:HTMLInputElement=this.panel.querySelector(\"input#rdlName\");\r\n            let val:string=i.value.trim();\r\n            if(val){\r\n                this.name=val;\r\n                svgArea.redlinesManagement.newRedline(this.name);\r\n                i.value=\"\";\r\n                this.panel.style.display=\"none\";\r\n            } else{\r\n                alert(`Najprv je potrebné zadat názov`);\r\n            }\r\n            \r\n        })\r\n    }\r\n    set() {\r\n        this.parent.appendChild(this.panel);\r\n        this.events();\r\n    }\r\n    load(): void {\r\n        const path: string = new URL(\"../systemFiles/createRedlineDialog.html\", import.meta.url).href;\r\n        loadData(path).then(e=>{\r\n            this.panel=createFragment(e);\r\n            this.set();\r\n          })\r\n    }\r\n    constructor(parent:HTMLElement){\r\n        this.parent=parent;\r\n        this.load();\r\n    }\r\n}","import { ITextParams, TextJustification } from \"./interface\";\r\n\r\nexport class TextParams implements ITextParams{\r\n    font: string;\r\n    size: number;\r\n    gap: number;\r\n    color: string;\r\n    alignment: TextJustification;\r\n    lines: string[];\r\n    angle: number;\r\n    bold: boolean;\r\n    italic: boolean;\r\n    underline: boolean;\r\n    opacity?:number;\r\n\r\n    clone(src:TextParams){\r\n        if(src){\r\n            for(const[key,value] of Object.entries(src)) {\r\n                this[key]=value;\r\n            }\r\n        }\r\n    }\r\n    setTextJust():string{\r\n        let anchor:string=\"\"\r\n        let just:string=TextJustification[this.alignment];\r\n        if(this.alignment){\r\n            switch(just.charAt(0)){\r\n                case \"C\":\r\n                    anchor=\"text-anchor:middle\";\r\n                    break;\r\n                case \"R\":\r\n                    anchor=\"text-anchor:end\";\r\n                    break;\r\n            }\r\n        }\r\n        return anchor;\r\n    }\r\n}\r\n\r\n","import { updateColor } from \"../Helpers/helper\";\r\nimport { IPoint, Point } from \"../Helpers/pointDefs\";\r\nimport { backColor, IBarStyleManager, IRedlineVisual, ITransformParameters, RedlineMethod, RedlineTyp, TextJustification, TypeConstant } from \"../Helpers/interface\";\r\nimport { SelBox } from \"../Helpers/selBox\";\r\nimport { BarStyleManager } from \"./barStyleManager\";\r\nimport { RedlinePlatform } from \"./redlinePlatform\";\r\nimport { Transform } from \"../Helpers/transform\";\r\nimport { svgArea } from \"..\";\r\nimport { IpcNetConnectOpts } from \"net\";\r\nimport { TextParams } from \"../Helpers/textParams\";\r\nimport Redline from \"../redline\";\r\nimport { RText } from \"../Server/Model/Visuals/text\";\r\n\r\nexport class TextStyleManager implements IBarStyleManager {\r\n    bar: HTMLElement;\r\n    header: HTMLElement;\r\n    button: HTMLElement;\r\n    btDraw:HTMLElement;\r\n    picker: HTMLInputElement;\r\n    inputs: NodeListOf<HTMLInputElement>;\r\n    textInput: HTMLTextAreaElement;\r\n    chBoxes: NodeListOf<HTMLInputElement>;\r\n    fontButtons: NodeListOf<HTMLInputElement>;\r\n    onSelected: HTMLButtonElement;\r\n    redlinePlatform: RedlinePlatform;\r\n    selElems: NodeListOf<Element>;\r\n    textEditArea: HTMLElement;\r\n    textEditApply: HTMLElement;\r\n    tp: TextParams;\r\n    pos: IPoint;\r\n    trf: ITransformParameters;\r\n    move: boolean = false;\r\n\r\n    getTextParams(): TextParams {\r\n        const getFromSelection = (q: string): string => {\r\n            const e: any = this.bar.querySelector(`select[key='${q}']`) as HTMLSelectElement;\r\n            return e.options[e.selectedIndex].value;\r\n        }\r\n        const getFromButton = (key: string): boolean => {\r\n            return this.bar.querySelector(`div[footer] button[key='${key}']`).classList.contains(\"selected\");\r\n        }\r\n        let tp = new TextParams();\r\n        tp.color = this.picker.value;\r\n        tp.font = getFromSelection(\"textFont\");\r\n        const just: string = getFromSelection(\"textJust\");\r\n        tp.alignment = TextJustification[just]\r\n        tp.bold = getFromButton(\"font_bold\");\r\n        tp.underline = getFromButton(\"font_underline\");\r\n        tp.italic = getFromButton(\"font_italic\");\r\n        let e: HTMLElement = this.bar.querySelector(`input[key='fontSize']`);\r\n        // berie sa z 'title' n nie z value, lebo value je zaokruhlena\r\n        tp.size = parseFloat(e.getAttribute(\"title\"));\r\n        e = this.bar.querySelector(`input[key='lineGap']`);\r\n        tp.gap = parseFloat(e.getAttribute(\"title\"));\r\n        tp.lines = this.textInput.value.split(\"\\n\");\r\n        e = this.bar.querySelector(`input[key='textRotation']`);\r\n        tp.angle = parseFloat((e as HTMLInputElement).value);\r\n        return tp;\r\n    }\r\n    refreshActive(): void {\r\n        let r: Redline = svgArea.redlinesManagement.redline;\r\n        if (r && r.curVisual && r.curVisual.type === TypeConstant.redlinetext) {\r\n            const rtx: RText = (r.curVisual as RText);\r\n            rtx.drawFromDialog();\r\n        } else {\r\n            const rtxEdited: RText = r.rdl.visuals.find(f => f.isEdited === true && f.type === TypeConstant.redlinetext);\r\n            if (rtxEdited) {\r\n                rtxEdited.drawFromDialog();\r\n                SelBox.destroy(rtxEdited);\r\n                SelBox.create(rtxEdited);\r\n            }\r\n        }\r\n    }\r\n    setPreview(refreshActive: boolean = true): void {\r\n        // urobí preview a naplní this.tp\r\n        const setJust = (just: string) => {\r\n            let j: string[] = [\"right\", \"center\"];\r\n            j.forEach(q => {\r\n                this.textInput.classList.remove(\"text-\" + q);\r\n            })\r\n            let q: string = just.charAt(0);\r\n            switch (q) {\r\n                case \"C\":\r\n                    this.textInput.classList.add(\"text-center\");\r\n                    break;\r\n                case \"R\":\r\n                    this.textInput.classList.add(\"text-right\");\r\n                    break;\r\n            }\r\n        }\r\n        const setFontStyleData = (tp: TextParams) => {\r\n            let stl: string;\r\n            const bc: backColor = this.redlinePlatform.svgArea.background;\r\n            stl = `font-family:${tp.font};color:${tp.color};background-color:${bc === backColor.black ? \"#000\" : \"#fff\"};`\r\n            if (tp.bold) {\r\n                stl += \";font-weight:bold\";\r\n            }\r\n            if (tp.underline) {\r\n                stl += \";text-decoration:underline\";\r\n            }\r\n            if (tp.italic) {\r\n                stl += \";font-style:italic\";\r\n            }\r\n            this.textInput.setAttribute(\"style\", stl);\r\n        }\r\n        this.updateColor();\r\n        this.tp = this.getTextParams();\r\n        setJust(TextJustification[this.tp.alignment]);\r\n        setFontStyleData(this.tp);\r\n        if (refreshActive) {\r\n            this.refreshActive();\r\n        }\r\n    }\r\n    updateColor(): void {\r\n        let col: string = updateColor(this.picker.value, this.redlinePlatform.svgArea.background);\r\n        if (col === \"#000\") {\r\n            col = \"#000000\";\r\n        } else if (col === \"#fff\") {\r\n            col = \"#ffffff\";\r\n        }\r\n        this.picker.parentElement.style.backgroundColor = col;\r\n        this.picker.value = col;\r\n    }\r\n    prepareFontSize() {\r\n        let val: any = {};\r\n        let qq: string[] = [\"fontSize\", \"lineGap\"];\r\n        qq.forEach(q => {\r\n            const e: HTMLInputElement = this.bar.querySelector(`input[key='${q}']`);\r\n            const x: number = parseFloat(e.value);\r\n            val[q] = Transform.scale2Real(x, this.trf.scl, 6)\r\n            e.setAttribute(\"title\", val[q]);\r\n            e.value = val[q].toFixed(3);\r\n            if (q === \"lineGap\") e.setAttribute(\"step\", val[q]);\r\n        });\r\n        const e: HTMLInputElement = this.bar.querySelector(`input[key='lineGap']`);\r\n        e.setAttribute(\"step\", (val.fontSize / 10) + \"\"); // aby automaticky skok bol 0.1 z vyšky fontu\r\n        this.tp.size = val.fontSize;\r\n        this.tp.gap = val.lineGap;\r\n    }\r\n    modifiVisual(keyValue: any, c: IRedlineVisual): void {\r\n\r\n    }\r\n    modifiVisuals(keyValue: any): void {\r\n        console.log(\"modifiVisuals() textStyleManager\");\r\n    }\r\n    showHide(pos: IPoint): void {\r\n        const hide: boolean = BarStyleManager.ShowHide(this, pos);\r\n        const r: Redline = this.redlinePlatform.redline;\r\n        this.pos = new Point(parseInt(this.bar.style.left, 10), parseInt(this.bar.style.top, 10));\r\n        this.move = false;\r\n        if (hide){\r\n            r.curMethod = RedlineMethod.select;\r\n            r.curType=RedlineTyp.none;\r\n            this.redlinePlatform.setButtons(\"select\",undefined);\r\n        }else {\r\n            r.curMethod = RedlineMethod.edit;\r\n            r.curType = RedlineTyp.redlinetext;\r\n        }\r\n    }\r\n    getDialogText(pos: IPoint) {\r\n        alert(pos.toString());\r\n    }\r\n    events(): void {\r\n        let pickerMethod = (e: HTMLInputElement): void => {\r\n            let key: string = e.getAttribute(\"key\");\r\n            let value: string = updateColor(e.value, this.redlinePlatform.svgArea.background);\r\n            this.updateColor();\r\n            if (key !== \"fill\") {\r\n                this.setPreview();\r\n            }\r\n            this.modifiVisuals({ key, value });\r\n        }\r\n        if (this.picker) {\r\n            this.picker.addEventListener(\"input\", (e: any) => {\r\n                pickerMethod(e.target);\r\n                this.refreshActive();\r\n            });\r\n            this.picker.addEventListener(\"change\", (e: any) => {\r\n                pickerMethod(e.target);\r\n                this.refreshActive();\r\n            });\r\n        }\r\n        this.selElems.forEach((e: any) => {\r\n            e.addEventListener(\"change\", () => {\r\n                this.setPreview();\r\n            })\r\n        })\r\n        this.inputs.forEach((e: any) => {\r\n            e.addEventListener(\"change\", (e: any) => {\r\n                let el: HTMLInputElement = e.target;\r\n                let key: string = el.getAttribute(\"key\");\r\n                let n: number = parseFloat(el.value);\r\n                if (isNaN(n)) {\r\n                    el.value = \"0\";\r\n                } else {\r\n                    if (key === \"textRotation\") {\r\n                        n = (n % 360);\r\n                        el.value = n.toFixed(0);\r\n                    }\r\n                    if (n < 0) {\r\n                        el.value = \"0\";\r\n                        n = 0;\r\n                    }\r\n                }\r\n                el.setAttribute(\"title\", n as any)\r\n                this.refreshActive();\r\n            })\r\n        })\r\n\r\n        this.fontButtons.forEach((e: any) => {\r\n            e.addEventListener(\"click\", (e: any) => {\r\n                const btn: HTMLElement = e.target;\r\n                const s: string = \"selected\";\r\n                btn.classList.contains(s) ? btn.classList.remove(s) : btn.classList.add(s);\r\n                this.setPreview();\r\n            })\r\n        })\r\n        this.textEditApply.querySelectorAll(\"div[footer] button[key]\").forEach(button => {\r\n            button.addEventListener(\"click\", e => {\r\n                let bt: HTMLElement = e.target as any;\r\n                switch (bt.getAttribute(\"key\")) {\r\n                    case \"apply\":\r\n                        break;\r\n                    case \"clear\":\r\n                        let checks = this.textEditApply.querySelectorAll(\"input[type='checkbox']:checked\")\r\n                        checks.forEach((e: HTMLInputElement) => {\r\n                            e.checked = false;\r\n                        });\r\n                        break;\r\n                    case \"cancel\":\r\n                        this.textEditArea.style.display = \"\";\r\n                        this.textEditApply.style.display = \"none\";\r\n                        break;\r\n                }\r\n            })\r\n        })\r\n\r\n        this.onSelected.addEventListener(\"click\", () => {\r\n            this.textEditArea.style.display = \"none\";\r\n            this.textEditApply.style.display = \"\";\r\n        })\r\n        this.textInput.addEventListener(\"input\", () => {\r\n            // ak sa klikne po editacii textu\r\n            this.redlinePlatform.redline.eventFtromTextInput=true;\r\n            this.refreshActive();\r\n        })\r\n        this.header.addEventListener(\"pointerdown\", () => {\r\n            this.move = true;\r\n        })\r\n        this.header.addEventListener(\"pointerup\", () => {\r\n            this.move = false;\r\n        })\r\n        this.header.addEventListener(\"pointerleave\", () => {\r\n            this.move = false;\r\n        })\r\n        this.header.addEventListener(\"pointercancel\", () => {\r\n            this.move = false;\r\n        })\r\n        this.btDraw.addEventListener(\"click\",()=>{\r\n            const key:string=\"text\";\r\n            const rp:RedlinePlatform=this.redlinePlatform;\r\n            rp.redline.finalize();\r\n            rp.setButtons(key,undefined);\r\n            rp.redline.curMethod = RedlineMethod.edit;\r\n            rp.redline.curType=RedlineTyp.redlinetext;\r\n            rp.panZoom.setCursor(key);\r\n        })\r\n        this.redlinePlatform.svgArea.container.addEventListener(\"pointermove\", (ev: PointerEvent) => {\r\n            if (this.move) {\r\n                let p: IPoint = Point.ExactPoint(new Point(ev.movementX, ev.movementY), 0);\r\n                this.pos.x += p.x;\r\n                this.pos.y += p.y;\r\n                this.bar.style.left = this.pos.x.toFixed(0) + \"px\";\r\n                this.bar.style.top = this.pos.y.toFixed(0) + \"px\";\r\n            }\r\n        });\r\n    }\r\n    setByParams(tp: TextParams) {\r\n        let tx: string = null;\r\n        tp.lines.forEach((t: string) => {\r\n            if (tx) {\r\n                tx += \"\\n\" + t\r\n            } else {\r\n                tx = t;\r\n            }\r\n        })\r\n        this.textInput.value = tx;\r\n        this.picker.value = tp.color;\r\n        const inputs: HTMLInputElement[] = Array.from(this.inputs);\r\n        const fSize: HTMLInputElement = inputs.find(f => f.getAttribute(\"key\") === \"fontSize\");\r\n        fSize.value = tp.size + \"\";\r\n        fSize.setAttribute(\"title\", fSize.value);\r\n        const lGap: HTMLInputElement = inputs.find(f => f.getAttribute(\"key\") === \"lineGap\");\r\n        lGap.value = tp.gap + \"\";\r\n        lGap.setAttribute(\"step\", (tp.size / 10).toFixed(6));\r\n        const rt: HTMLInputElement = inputs.find(f => f.getAttribute(\"key\") === \"textRotation\");\r\n        rt.value = tp.angle + \"\";\r\n        const select: HTMLSelectElement[] = Array.from(this.selElems) as any;\r\n        const fnt: HTMLSelectElement = select.find(f => f.getAttribute(\"key\") === \"textFont\");\r\n        fnt.value = tp.font;\r\n        const alin: HTMLSelectElement = select.find(f => f.getAttribute(\"key\") === \"textJust\");\r\n        alin.value = TextJustification[tp.alignment];\r\n        const fontButtons: HTMLInputElement[] = Array.from(this.fontButtons);\r\n        this.setPreview(false);\r\n    }\r\n    constructor(rp: RedlinePlatform, styleBarId: string, buttonKey: string) {\r\n        this.redlinePlatform = rp;\r\n        this.bar = rp.parent.querySelector(`div[id='${styleBarId}']`);\r\n        this.trf = rp.redline.transform;\r\n        if (this.bar) {\r\n            this.header = this.bar.querySelector(\"div[header]\");\r\n            this.bar.style.zIndex = \"100\";\r\n            this.button = rp.parent.querySelector(`div[id=\"rdlToolbar\"] button[f=\"${buttonKey}\"]`);\r\n            this.selElems = this.bar.querySelectorAll(\"select[key]\");\r\n            this.inputs = this.bar.querySelectorAll(\"input[type='number'][key]\");\r\n            this.chBoxes = this.bar.querySelectorAll(\"input[type='checkbox'][key]\");\r\n            this.fontButtons = this.bar.querySelectorAll(\"button[key^='font_']\");\r\n            this.picker = this.bar.querySelector(\"input[type='color'][key]\");\r\n            this.textInput = this.bar.querySelector(\"textarea[f='input']\");\r\n            this.onSelected = this.bar.querySelector(\"button[key='applyOnSelected']\");\r\n            this.textEditArea = this.bar.querySelector(\"div[id='switch-text-edit']\");\r\n            this.textEditApply = this.bar.querySelector(\"div[id='apply-sel-changes']\");\r\n            this.btDraw=this.header.querySelector(\"button[key='draw-text']\")\r\n            this.setPreview();\r\n            this.prepareFontSize();\r\n            this.events();\r\n        } else {\r\n            console.log(`Missing bar ${styleBarId}`);\r\n        }\r\n    }\r\n}","import { createFragment, GetScreenCordinates, loadData } from \"../Helpers/helper\";\r\nimport { svgArea } from \"..\";\r\nimport tippy from \"tippy.js\";\r\nimport { backColor, IDialog } from \"../Helpers/interface\";\r\nimport Redline from \"../redline\";\r\nimport { IRedlineVisual, RedlineMethod, RedlineTyp } from \"../Helpers/interface\";\r\nimport SvgArea from \"../svgArea\";\r\nimport { PanZoom } from \"../Gestures/panZoom\";\r\nimport { BarStyleManager } from \"./barStyleManager\";\r\nimport { IPoint, Point } from \"../Helpers/pointDefs\";\r\nimport { TextStyleManager } from \"./textStyleManager\";\r\nexport class RedlinePlatform implements IDialog {\r\n    parent: HTMLElement;\r\n    panel: HTMLElement;\r\n    svgArea: SvgArea;\r\n    redline: Redline;\r\n    panZoom: PanZoom;\r\n    strokeManager: BarStyleManager;\r\n    fillManager: BarStyleManager;\r\n    snapManager: BarStyleManager;\r\n    allBars: BarStyleManager[] = [];\r\n    btns: NodeListOf<Element>;\r\n    acceptButton: HTMLElement;\r\n    allignAcceptButton() {\r\n        const btSelect: HTMLElement = this.panel.querySelector(\"button[f='select']\");\r\n        if (btSelect) {\r\n            const click: IPoint = GetScreenCordinates(btSelect);\r\n            const offsetLeft: number = click.x + btSelect.offsetWidth;\r\n            //const offsetTop:number=click.y - btSelect.offsetHeight;\r\n            this.acceptButton.style.left = offsetLeft + \"px\";\r\n            this.acceptButton.style.top = \"5px\";\r\n        }\r\n    }\r\n    hide() {\r\n        this.panel.style.display = \"none\";\r\n    }\r\n    show() {\r\n        this.panel.style.display = \"\";\r\n        this.allignAcceptButton();\r\n    }\r\n    setButtons(key: string, f?: HTMLElement) {\r\n        if (key.startsWith(\"snap\")) {\r\n            return;\r\n        }\r\n        const active: string = \"rdl-active-method\";\r\n        const clearButtons = () => {\r\n            this.btns.forEach((e: HTMLElement) => {\r\n                e.classList.remove(active);\r\n                if (e.hasAttribute(\"expandable\")) {\r\n                    e.style.width = \"100%\"\r\n                }\r\n            })\r\n        }\r\n        if (key === \"remove\") { // animacia červená\r\n\r\n        } else if (key === \"move-top\") { // animácia modrá\r\n\r\n        }\r\n        else if (key === \"stroke-picker\" || key === \"fill-picker\") { // rozbalí bočný dialog\r\n\r\n        } else {\r\n            clearButtons();\r\n            if (f) {\r\n                f.classList.add(active);\r\n                if (f.hasAttribute(\"expandable\")) {\r\n                    f.style.width = \"120%\"\r\n                }\r\n            }\r\n            const hideTextDialog = (): boolean => {\r\n                const q: string[] = [\"text\", \"select\", \"modify\"];\r\n                return !q.includes(key);\r\n            }\r\n            if (hideTextDialog()) { //hide textDialog\r\n                BarStyleManager.Hide(this.redline.textManager);\r\n            }\r\n        }\r\n    }\r\n    events(): void {\r\n        this.btns = this.panel.querySelectorAll(\"button[f]\");\r\n        const pos = (click: PointerEvent): IPoint => {\r\n            return new Point(click.clientX, click.clientY);\r\n        }\r\n        const animeButton = (bc: string, col: string, f: HTMLElement) => {\r\n            f.style.backgroundColor = col;\r\n            setTimeout(() => {\r\n                f.style.backgroundColor = bc;\r\n            }, 400);\r\n        };\r\n        this.btns.forEach(e => {\r\n            e.addEventListener(\"click\", (click: PointerEvent) => {\r\n                const f: HTMLElement = (click.target as HTMLElement);\r\n\r\n                if (f.hasAttribute(\"f\")) {\r\n                    const bc: string = f.style.backgroundColor;\r\n                    const key: string = f.getAttribute(\"f\");\r\n                    this.panZoom.setCursor(key);\r\n                    this.setButtons(key, f);\r\n                    switch (key) {\r\n                        case \"select\":\r\n                            this.redline.finalize();\r\n                            this.redline.curMethod = RedlineMethod.select;\r\n                            this.redline.curType = RedlineTyp.none;\r\n                            break;\r\n                        case \"modify\":\r\n                            this.redline.curMethod = RedlineMethod.edit;\r\n                            this.redline.clearEditedVisual();\r\n                            this.redline.editVisual();\r\n                            break;\r\n                        case \"remove\":\r\n                            animeButton(bc, \"#ff3300\", f);\r\n                            this.redline.removeSelected();\r\n                            break;\r\n                        case \"lineString\":\r\n                            this.redline.finalize();\r\n                            this.redline.curMethod = RedlineMethod.edit;\r\n                            this.redline.curType = RedlineTyp.line;\r\n                            break;\r\n                        case \"shape\":\r\n                            this.redline.finalize();\r\n                            this.redline.curMethod = RedlineMethod.edit;\r\n                            this.redline.curType = RedlineTyp.shp;\r\n                            break;\r\n                        case \"circle\":\r\n                            this.redline.finalize();\r\n                            this.redline.curMethod = RedlineMethod.edit;\r\n                            this.redline.curType = RedlineTyp.circle;\r\n                            break;\r\n                        case \"text\":\r\n                            this.redline.finalize();\r\n                            this.redline.curMethod = RedlineMethod.edit;\r\n                            this.redline.textManager.showHide(pos(click));\r\n                            break;\r\n                        case \"stroke-picker\":\r\n                            this.strokeManager.showHide(pos(click));\r\n                            break;\r\n                        case \"fill-picker\":\r\n                            this.fillManager.showHide(pos(click));\r\n                            break;\r\n                        case \"copy\":\r\n                            break;\r\n                        case \"move-top\":\r\n                            animeButton(bc, \"#198754\", f);\r\n                            this.redline.moveSelected2Top();\r\n                            break;\r\n                        case \"snap\":\r\n                            // this.snapManager.showHide(pos(click));\r\n                            this.redline.snap = true;\r\n                            animeButton(bc, \"#5bc0de\", f);\r\n                            e.setAttribute(\"f\", \"snap-active\");\r\n                            break;\r\n                        case \"snap-active\":\r\n                            f.style.backgroundColor = \"#5cb85c\";\r\n                            setTimeout(() => {\r\n                                f.style.backgroundColor = bc;\r\n                            }, 400);\r\n                            e.setAttribute(\"f\", \"snap\");\r\n                            this.redline.snap = false;\r\n                            break;\r\n                    }\r\n                }\r\n            })\r\n        });\r\n        this.strokeManager = new BarStyleManager(this, \"rdl-stroke-manager\", \"stroke-picker\");\r\n        this.fillManager = new BarStyleManager(this, \"rdl-fill-manager\", \"fill-picker\");\r\n        this.snapManager = new BarStyleManager(this, \"rdl-snap-manager\", \"snap\");\r\n        this.redline.textManager = new TextStyleManager(this, \"rdl-textPickerBox\", \"text\")\r\n        this.allBars.push(this.strokeManager);\r\n        this.allBars.push(this.fillManager);\r\n        this.allBars.push(this.snapManager);\r\n        this.allBars.push(this.redline.textManager as any);\r\n        this.acceptButton = this.parent.querySelector(\"div[id='redline-accept-button']\");\r\n        this.acceptButton.addEventListener(\"click\", () => {\r\n            alert(\"ahoj\");\r\n        })\r\n    }\r\n    updateTheme?(bc: backColor, btns: any): void {\r\n        svgArea.background = bc\r\n        switch (bc) {\r\n            case backColor.black:\r\n                svgArea.drawing.style.background = \"#000\";\r\n                break;\r\n            case backColor.white:\r\n                svgArea.drawing.style.background = \"#fff\";\r\n                break;\r\n        }\r\n        const h: number = btns.length;\r\n        for (let i = 0; i < h; i++) {\r\n            let btn: HTMLElement = btns[i] as any;\r\n            let btn1: HTMLElement = createFragment(btn.outerHTML);\r\n            btn1.outerHTML = btn.outerHTML;\r\n            btn.parentNode.insertBefore(btn1, btn);\r\n            btn.remove();\r\n            tippy(btn1, {\r\n                content: btn1.getAttribute(\"tip\"),\r\n                placement: \"right-start\",\r\n                theme: bc === backColor.black ? \"light\" : \"dark\"\r\n            });\r\n        }\r\n        this.events();\r\n    }\r\n    set() {\r\n        // this.parent.appendChild(this.panel);\r\n        const btns: NodeListOf<Element> = this.panel.querySelectorAll(\"*[tip]\");\r\n        btns.forEach((e: HTMLElement) => {\r\n            tippy(e, {\r\n                content: e.getAttribute(\"tip\"),\r\n                placement: \"right-start\",\r\n                theme: svgArea.background === backColor.black ? \"light\" : \"dark\"\r\n            });\r\n        });\r\n        this.events();\r\n        this.show();\r\n    }\r\n    load(): void {\r\n        const path: string = new URL(\"../systemFiles/redlineBarPanel.html\", import.meta.url).href;\r\n        loadData(path).then(data => {\r\n            const svg: any = this.parent.querySelector(\"svg.canvas\");\r\n            const node: HTMLElement = createFragment(data);\r\n            this.parent.insertBefore(node, svg);\r\n            this.panel = this.parent.querySelector(\"div[id='rdlToolbar'\");\r\n            this.panel.setAttribute(\"block-pointer-events\", \"\");\r\n            this.set();\r\n        })\r\n    }\r\n    constructor(svgArea: SvgArea, redline: Redline) {\r\n        this.redline = redline;\r\n        this.svgArea = svgArea;\r\n        this.parent = svgArea.drawing;\r\n        this.panZoom = svgArea.panZoom;\r\n        this.load();\r\n    }\r\n}","import { constants } from \"buffer\";\r\nimport { json } from \"stream/consumers\";\r\nimport tippy, { followCursor } from \"tippy.js\";\r\nimport { CloneJson, createFragment, createGuid, loadData } from \"../Helpers/helper\";\r\nimport { IDialog, IRedline, IRedlineFull } from \"../Helpers/interface\";\r\nimport Redline from \"../redline\";\r\nimport SvgArea from \"../svgArea\";\r\nimport { ConfirmationDialog } from \"./confirmationDialog\";\r\nimport { CreateRedlineDialog } from \"./createRedlineDialog\";\r\nimport { RedlinePlatform } from \"./redlinePlatform\";\r\nexport class RedlinesManagement implements IDialog {\r\n    svgArea:SvgArea;\r\n    parent: HTMLElement;\r\n    panel: HTMLElement;\r\n    data: IRedlineFull[];\r\n    unmodifiedActive:any;\r\n    create: CreateRedlineDialog;\r\n    redlinePlatform: RedlinePlatform;\r\n    redline: Redline;\r\n    confirmationDialog: ConfirmationDialog\r\n    newRedline(name: string): void {\r\n        const r: IRedlineFull = { name, id: createGuid(), selected: true, visible: true, active: true, visuals: [] }\r\n        this.data.push(r);\r\n        //this.parent.innerHTML = \"\";\r\n        this.setTable(this.data);\r\n    }\r\n    getId(e: HTMLElement): string {\r\n        while (e.nodeName.toLocaleLowerCase() !== \"tr\") {\r\n            e = e.parentElement;\r\n        }\r\n        return e.id;\r\n    }\r\n    set() {\r\n        this.parent.innerHTML = \"\";\r\n        this.parent.appendChild(this.panel)\r\n        this.setTable(this.data);\r\n    }\r\n    hiliteName(id: string) {\r\n        const nl: any = this.panel.querySelectorAll(\"tr[id][selected]\");\r\n        nl.forEach(e => {\r\n            e.removeAttribute(\"selected\");\r\n        });\r\n        const tr: HTMLElement = this.panel.querySelector(`tr[id='${id}']`);\r\n        tr.setAttribute(\"selected\", \"\");\r\n    }\r\n    moveRowPosition(row: HTMLElement, rowPins: NodeListOf<Element>) {\r\n        const id: string = row.getAttribute(\"id\");\r\n        const q: string = \"selected\";\r\n        // presun poradia redline\r\n        let a: number = this.data.findIndex(f => f.selected === true && f.id !== id);\r\n        if (a > -1) {\r\n            let b: number = this.data.findIndex(f => f.id === id);\r\n            const itm: IRedlineFull = this.data.splice(a, 1)[0];\r\n            // itm.selected = false;\r\n            this.data.splice(b, 0, itm);\r\n            this.setTable(this.data);\r\n            return;\r\n        }\r\n        // časť toogle\r\n\r\n        let r: IRedlineFull = this.data.find(f => f.id === id);\r\n        r.selected = false;\r\n        if (row.classList.contains(q)) {\r\n            row.classList.remove(q);\r\n        } else {\r\n            rowPins.forEach(e => {\r\n                e.parentElement.classList.remove(q);\r\n            })\r\n            row.classList.add(q);\r\n            r.selected = true;\r\n        }\r\n    }\r\n\r\n    active(radios: NodeListOf<HTMLInputElement>): void {\r\n        const clear = (src: HTMLInputElement) => {\r\n            const selected: any = Array.from(radios).find(f => (f as any).checked === true && f !== src);\r\n            if (selected) {\r\n                selected.checked = false;\r\n            }\r\n            const active: any = this.data.find(f => f.active === true);\r\n            if (active) {\r\n                active.active = false;\r\n            }\r\n        }\r\n        const testActive = (radio: HTMLElement): boolean => {\r\n            const rdl: IRedlineFull = this.data.find(f => f.active === true);\r\n            if (!rdl) {\r\n                return false;\r\n            }\r\n            if (!this.confirmationDialog) {\r\n                this.confirmationDialog = new ConfirmationDialog(this.svgArea.drawing, rdl.name);\r\n            } else {\r\n                this.confirmationDialog.show(rdl.name);\r\n            }\r\n            return true;\r\n        }\r\n        // prepínanie vrstiev\r\n        radios.forEach((radio: HTMLElement) => {\r\n            radio.addEventListener(\"change\", e => {\r\n                if (testActive(radio)) {\r\n                    // ak je redline vrstva aktívna nie je možné aktivovať inú\r\n                    (radio as HTMLInputElement).checked = false;\r\n                    return;\r\n                }\r\n                const r: HTMLInputElement = e.target as any;\r\n                const id: string = this.getId(r);\r\n                this.hiliteName(id);\r\n                clear(r);\r\n                const i: number = this.data.findIndex(f => f.id === id)\r\n                const rdl: IRedlineFull = this.data[i];\r\n                this.unmodifiedActive=CloneJson(rdl.visuals);\r\n                rdl.active = true;\r\n               \r\n                this.redline=new Redline(rdl,this.svgArea.svgManager.transform,this.svgArea.panZoom);\r\n                if (this.redlinePlatform) {\r\n                    this.redlinePlatform.show();\r\n                } else {\r\n                    this.redlinePlatform = new RedlinePlatform(this.svgArea,this.redline);\r\n                }\r\n                // if (this.redline) {\r\n\r\n                // } else {\r\n                //     this.redline=new Redline(rdl);\r\n                // }\r\n                if (rdl.visible === false) {\r\n                    rdl.visible = true;\r\n                    const chVisible: HTMLInputElement = this.panel.querySelector(`tbody tr[id=\"${id}\"] input[f=\"visible\"]`) as any;\r\n                    chVisible.checked = true;\r\n                }\r\n            })\r\n        });\r\n    }\r\n    visibility(chbs: NodeListOf<HTMLInputElement>): void {\r\n\r\n        chbs.forEach((chb: HTMLInputElement) => {\r\n            chb.addEventListener(\"change\", e => {\r\n                const id: string = this.getId(e.target as any);\r\n                const rdl: IRedlineFull = this.data.find(f => f.id === id);\r\n                chb.checked = (rdl.active) ? rdl.active : chb.checked;\r\n                rdl.visible = chb.checked;\r\n            })\r\n        });\r\n    }\r\n    events(): void {\r\n        const rowPins: NodeListOf<Element> = this.panel.querySelectorAll(\"tbody th[scope='row'] button.rdl-move\");\r\n        rowPins.forEach(rowPin => {\r\n            rowPin.addEventListener(\"click\", e => {\r\n                this.moveRowPosition(rowPin.parentElement.parentElement, rowPins);\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            })\r\n        });\r\n        this.active(this.panel.querySelectorAll(\"tbody td input[f='active']\"))\r\n        this.visibility(this.panel.querySelectorAll(\"tbody td input[f='visible']\"));\r\n\r\n    }\r\n    setTable(data: IRedlineFull[]) {\r\n        let content: string = \"\";\r\n        data.forEach((e: IRedlineFull, i: number) => {\r\n            const tr: string = `<tr id=\"${e.id}\"  ${e.selected ? \"class='selected'\" : \"\"}>\r\n                <th scope=\"row\"><button class=\"rdl-move\"></button></th>\r\n                <th scope=\"row\"><span>${i + 1}.</span></th>\r\n                <td><input type=\"text\" value=\"${e.name}\" f=\"name\"></td>\r\n                <td><input type=\"radio\" f=\"active\" ${e.active ? \"checked\" : \"\"}></td>\r\n                <td><input type=\"checkbox\" ${e.visible ? \"checked\" : \"\"} f=\"visible\"></td>\r\n                <td>${e.visuals ? e.visuals.length : 0}</td>\r\n                <td f=\"save\" class=\"bt-ico-small\"></td>\r\n                <td f=\"delete\" class=\"bt-ico-small\"></td>\r\n            </tr>`;\r\n            content += tr;\r\n        });\r\n        if (content) {\r\n            this.panel.querySelector(\"tbody\").innerHTML = content;\r\n            this.events();\r\n            const r: IRedlineFull = this.data.find(f => f.active === true);\r\n            if (r) {\r\n                this.hiliteName(r.id);\r\n            }\r\n        }\r\n    }\r\n    async save(): Promise<void> {\r\n        let banner: HTMLElement = this.svgArea.container.querySelector(\"#block-screen-save\");\r\n        const dataOrder: string[] = [];\r\n        const doSaving = () => {\r\n            const data = {\r\n                \"list\": dataOrder\r\n            };\r\n            fetch(\"http://localhost:3000/order?list\", {\r\n                method: \"PUT\",\r\n                body: JSON.stringify(data),\r\n                headers: { \"Content-Type\": \"application/json\" }\r\n            })\r\n                .then(response => response.json())\r\n                .then((data) => {\r\n                    banner.style.display = \"none\";\r\n                    const s:HTMLElement= this.panel.querySelector(\"tbody tr.selected\");\r\n                    if(s){\r\n                        s.classList.remove(\"selected\")\r\n                    }\r\n                });\r\n        }\r\n\r\n        this.data.map(f => dataOrder.push(f.id))\r\n\r\n        if (banner) {\r\n            banner.style.display = \"block\"\r\n            doSaving();\r\n        } else {\r\n            const path: string = new URL(\"../systemFiles/blockScreenSave.html\", import.meta.url).href;\r\n            await loadData(path).then(data => {\r\n                banner = createFragment(data);\r\n                this.svgArea.container.appendChild(banner);\r\n            });\r\n            doSaving();\r\n        }\r\n\r\n    }\r\n    load(): void {\r\n        const path: string = new URL(\"../systemFiles/redlineLeftLayout.html\", import.meta.url).href;\r\n        loadData(path).then(e => {\r\n            this.panel = createFragment(e);\r\n            this.set();\r\n            const createSave: any = this.parent.querySelectorAll(\"[id='redline-create-save'] [f][tip]\");\r\n            createSave.forEach(btn => {\r\n                const f: string = btn.getAttribute(\"f\");\r\n                tippy(btn, {\r\n                    content: btn.getAttribute(\"tip\"),\r\n                    placement: \"bottom\",\r\n                    plugins: [followCursor]\r\n                });\r\n                btn.addEventListener(\"click\", e => {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    switch (f) {\r\n                        case \"new\":\r\n                            if (this.create) {\r\n                                this.create.show();\r\n                            } else {\r\n                                this.create = new CreateRedlineDialog(this.svgArea.drawing);\r\n                            }\r\n                            break;\r\n                        case \"save-all\":\r\n                            this.save();\r\n                            break;\r\n                        case \"refresh-from-db\":\r\n\r\n                            break;\r\n                    }\r\n                })\r\n            });\r\n        })\r\n    }\r\n    async render():Promise<void>{\r\n        // prekreslí všetky vrstvy podľa this.data\r\n        console.log(\"------ render ------\");\r\n    }\r\n    cancel():void{\r\n        const i:number=this.data.findIndex(f=>f.active===true);\r\n        if(i>-1){\r\n            const rdl:IRedlineFull=this.data[i];\r\n            rdl.active=false;\r\n            const tr:HTMLElement=this.panel.querySelector(`tbody tr[id=\"${rdl.id}\"`);\r\n            const e:HTMLInputElement=tr.querySelector(`input[f=\"active\"]`);\r\n            tr.removeAttribute(\"selected\");\r\n            e.checked=false;\r\n            rdl.visuals=CloneJson(this.unmodifiedActive);\r\n            this.unmodifiedActive=null;\r\n            this.render();\r\n        }\r\n    }\r\n    async saveCurrentRedline():Promise<void>{\r\n        const rdl=this.data.find(f=>f.active===true);\r\n        if(!rdl){\r\n            // nie je čo uložiť\r\n            return;\r\n        }\r\n        // todoo fetch save\r\n        \r\n        this.cancel();\r\n    }\r\n    constructor(svgArea:SvgArea, data: IRedline[]) {\r\n        const test:HTMLElement= svgArea.drawing.querySelector(\"div#rdlToolbar\");\r\n        if(test){\r\n            test.style.display=\"none\"\r\n        }\r\n        this.svgArea=svgArea;\r\n        this.parent = svgArea.layout;\r\n        this.data = data as any;\r\n        this.load();\r\n    }\r\n}","import { readSync } from \"fs\";\r\nimport tippy, { followCursor } from \"tippy.js\";\r\nimport { initSvgArea, svgArea } from \"..\";\r\nimport { createFragment, getSize, loadData } from \"../Helpers/helper\";\r\nimport { backColor, IBox, IDialog, IRedline, loadType } from \"../Helpers/interface\";\r\nimport { Point } from \"../Helpers/pointDefs\";\r\nimport { RangeManager } from \"../Helpers/rangeManager\";\r\nimport { Transform } from \"../Helpers/transform\";\r\nimport Redline from \"../redline\";\r\nimport { getData } from \"../requests\";\r\nimport { SvgManager } from \"../Server/svgManager\";\r\nimport SvgArea from \"../svgArea\";\r\nimport { RedlinesManagement } from \"./redlinesManagement\";\r\nexport class Toolbar implements IDialog {\r\n  parent: HTMLElement;\r\n  panel: HTMLElement;\r\n  svgArea: SvgArea;\r\n  events() {\r\n    const btns: NodeListOf<Element> = this.panel.querySelectorAll(\"button[tip]\");\r\n    btns.forEach(e => {\r\n      e.addEventListener(\"click\", btn => {\r\n        // btn.stopPropagation();\r\n        // btn.preventDefault();\r\n        // btn.cancelBubble=true;\r\n        const f: HTMLElement = (btn.target as HTMLElement);\r\n        if (f.hasAttribute(\"f\")) {\r\n          const value: string = f.getAttribute(\"f\");\r\n          if (svgArea.svgManager) {\r\n            switch (value) {\r\n              case \"background-black\":\r\n                f.setAttribute(\"f\", \"background-white\");\r\n                this.updateTheme(backColor.white, btns);\r\n                break;\r\n              case \"background-white\":\r\n                f.setAttribute(\"f\", \"background-black\");\r\n                this.updateTheme(backColor.black, btns);\r\n                break;\r\n              case \"redline\":\r\n                getData().then(\r\n                  (data: IRedline[]) => {\r\n                    svgArea.redlinesManagement = new RedlinesManagement(svgArea, data)\r\n                  }\r\n                )\r\n                break;\r\n            }\r\n          }\r\n          switch (value) {\r\n            case \"fit\":\r\n              let mg: SvgManager = svgArea.svgManager;\r\n              if (mg) {\r\n                let sz = getSize(svgArea.drawing);\r\n                const size: IBox = { width: sz.x, height: sz.y, origin: new Point() };\r\n                let rg: IBox = mg.getRange(mg.visuals);\r\n                let transform;\r\n                mg.range = rg;\r\n                transform = Transform.getDefaultTP(size, rg);\r\n                const r: Redline = svgArea?.redlinesManagement?.redline;\r\n                if (r) {\r\n                  let rgs: IBox[] = [];\r\n                  if (r.curVisual) {\r\n                    r.finalize();\r\n                  }\r\n                  r.rdl.visuals.forEach(e => {\r\n                    rgs.push(e.getRange());\r\n                  });\r\n                  if (rgs.length > 0) {\r\n                    rgs.push(rg);\r\n                    rg = RangeManager.rangeByRanges(rgs)\r\n                    transform = Transform.getDefaultTP(size, rg);\r\n                  }\r\n                }\r\n                mg.transform = transform;\r\n                svgArea.panZoom.run();\r\n              } else{\r\n                initSvgArea(document.getElementById(\"micro-drawing\"));\r\n              }\r\n              break;\r\n          }\r\n        }\r\n      })\r\n    });\r\n  }\r\n  updateTheme(bc: backColor, btns: NodeListOf<Element>) {\r\n    this.svgArea.background = bc\r\n    switch (bc) {\r\n      case backColor.black:\r\n        this.svgArea.drawing.style.background = \"#000\";\r\n        break;\r\n      case backColor.white:\r\n        this.svgArea.drawing.style.background = \"#fff\";\r\n        break;\r\n    }\r\n    const h: number = btns.length;\r\n    for (let i = 0; i < h; i++) {\r\n      let btn: HTMLElement = btns[i] as any;\r\n      let btn1: HTMLElement = btn.cloneNode(true) as any;\r\n      btn.parentNode.insertBefore(btn1, btn);\r\n      btn.remove();\r\n      tippy(btn1, {\r\n        content: btn1.getAttribute(\"tip\"),\r\n        placement: \"right-start\",\r\n        theme: bc === backColor.black ? \"light\" : \"dark\"\r\n      });\r\n    }\r\n    this.events();\r\n    this.svgArea.panZoom.run();\r\n  }\r\n  set() {\r\n    this.parent.appendChild(this.panel);\r\n    const btns: NodeListOf<Element> = document.querySelectorAll(\"#toolbarPanel button[tip]\");\r\n    btns.forEach(e => {\r\n      tippy(e, {\r\n        content: e.getAttribute(\"tip\"),\r\n        placement: \"right-start\",\r\n        plugins: [followCursor],\r\n        theme: this.svgArea.background === backColor.black ? \"light\" : \"dark\"\r\n      });\r\n    });\r\n    this.events();\r\n  }\r\n  load() {\r\n    const path: string = new URL(\"../systemFiles/toolbarPanel.html\", import.meta.url).href\r\n    loadData(path).then(e => {\r\n      const d: HTMLElement = createFragment(e);\r\n      this.panel = createFragment(e);\r\n      this.panel.setAttribute(\"block-pointer-events\", \"\");\r\n      this.set()\r\n    })\r\n  }\r\n\r\n  constructor(parent: HTMLElement, svgArea: SvgArea) {\r\n    this.svgArea = svgArea;\r\n    this.parent = parent;\r\n    this.load();\r\n  }\r\n}\r\n","import { PanZoom } from \"./Gestures/panZoom\";\r\nimport { createFragment, getSize, loadData } from \"./Helpers/helper\";\r\nimport { backColor, sliderEvents } from \"./Helpers/interface\";\r\nimport { IPoint, Point } from \"./Helpers/pointDefs\";\r\nimport { SvgManager } from \"./Server/svgManager\";\r\nimport { RedlinesManagement } from \"./ui/redlinesManagement\";\r\nimport { Toolbar } from \"./ui/toolbar\";\r\n\r\nconst drawingAreaName: string = \"svgArea\";\r\nconst drawingLayoutName: string = \"svg-layout\";\r\nconst drawingleftSliderName: string = \"svg-left-slider\";\r\nclass SvgArea {\r\n    panZoom: PanZoom;\r\n    container: HTMLElement;\r\n    layout: HTMLElement;\r\n    slider: HTMLElement;\r\n    drawing: HTMLElement;\r\n    background: backColor;\r\n    toolbar: Toolbar;\r\n    svgManager: SvgManager;\r\n    redlinesManagement: RedlinesManagement;\r\n\r\n    manageSlider(): void {\r\n        let s: sliderEvents = sliderEvents.stop;\r\n        let startOffset: number;\r\n        this.slider = document.createElement(\"div\");\r\n        this.slider.setAttribute(\"id\", drawingleftSliderName);\r\n        this.container.appendChild(this.slider);\r\n        this.slider.addEventListener(\"pointerdown\", e => {\r\n            startOffset = this.slider.offsetLeft;\r\n            s = sliderEvents.change;\r\n        })\r\n        this.container.addEventListener(\"mousemove\", e => {\r\n            if (s === sliderEvents.change) {\r\n                let w: number = e.clientX;\r\n                if (w > 10) {\r\n                    this.container.style.gridTemplateColumns = `${w}px 10px 1fr`;\r\n                }\r\n                if (w > this.container.offsetWidth - 10) {\r\n                    s = sliderEvents.stop;\r\n                    this.container.style.gridTemplateColumns = `1fr 10px 5fr`;\r\n                }\r\n                this.redlinesManagement.redlinePlatform.allignAcceptButton();\r\n            }\r\n        })\r\n\r\n        const refreshView = () => {\r\n            if (this.svgManager && this.panZoom && startOffset) {\r\n                const sz = getSize(this.container);\r\n                this.svgManager.size = { width: sz.x, height: sz.y, origin: new Point() }\r\n                const ofs: number = this.slider.offsetLeft;\r\n                const delta: number = (ofs - startOffset);\r\n                // okno sa zväčší a je potrebný refresh\r\n                if (delta < 0) {\r\n                    this.panZoom.run();\r\n                }\r\n                startOffset=undefined;\r\n            }\r\n        }\r\n\r\n        this.container.addEventListener(\"mouseup\", e => {\r\n            s = sliderEvents.stop;\r\n            refreshView();\r\n        })\r\n        this.container.addEventListener(\"mouseleave\", e => {\r\n            s = sliderEvents.stop;\r\n            refreshView();\r\n        })\r\n    }\r\n    manageLayout(): void {\r\n        this.layout = document.createElement(\"div\");\r\n        this.layout.setAttribute(\"id\", drawingLayoutName);\r\n        this.container.appendChild(this.layout);\r\n    }\r\n    async createSvgCanvas(): Promise<void> {\r\n        const path: string = new URL(\"./systemFiles/svgCanvas.html\", import.meta.url).href\r\n        await loadData(path).then(e => {\r\n            const d: HTMLElement = createFragment(e);\r\n            this.drawing.appendChild(d);\r\n            this.panZoom = new PanZoom(d,this);\r\n        })\r\n    }\r\n    async manageDrawingArea(): Promise<void> {\r\n        this.drawing = document.createElement(\"div\");\r\n        this.drawing.setAttribute(\"id\", drawingAreaName);\r\n        switch (this.background) {\r\n            case backColor.black:\r\n                this.drawing.style.backgroundColor = \"#000\"\r\n                break\r\n            case backColor.white:\r\n                this.drawing.style.backgroundColor = \"#fff\"\r\n                break;\r\n        }\r\n        this.container.appendChild(this.drawing);\r\n        this.toolbar = new Toolbar(this.drawing,this);\r\n        await this.createSvgCanvas();\r\n        // this.panZoom=new PanZoom(this.drawing);\r\n    }\r\n    makeSceleton(): void {\r\n        this.container.innerHTML = \"\";\r\n        this.manageLayout();\r\n        this.manageSlider();\r\n        this.manageDrawingArea();\r\n    }\r\n    constructor(container: HTMLElement, bc: backColor) {\r\n        this.background = bc;\r\n        this.container = container;\r\n        this.container.style.gridTemplateColumns = `2fr 10px 5fr`;\r\n        this.makeSceleton();\r\n    }\r\n}\r\nexport default SvgArea;","import \"./styles/main.css\"\r\nimport \"./styles/overlay.css\"\r\nimport \"./styles/redline.css\"\r\nimport \"./styles/toolbar.css\"\r\nimport \"tippy.js/dist/tippy.css\"\r\nimport \"tippy.js/themes/light.css\";\r\nimport \"./dialogs\"\r\nimport { backColor } from \"./Helpers/interface\"\r\nimport SvgArea from \"./svgArea\"\r\nimport { getOS } from \"./Helpers/helper\"\r\n\r\nexport let svgArea:SvgArea;\r\nexport const initSvgArea=(root:HTMLElement)=>{\r\n    getOS();\r\n    svgArea=new SvgArea(root,backColor.black);\r\n}\r\n"],"names":["svgNs","effect","isElement","min","max","mathMax","mathMin","getBasePlacement","hash","allPlacements","placements","debounce","popperOffsets","computeStyles","applyStyles","offset","flip","preventOverflow","arrow","hide","getData"],"mappings":"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"}