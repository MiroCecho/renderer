{"version":3,"file":"index.95ddf7c3.js","sources":["../../vite/modulepreload-polyfill","../../src/index.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","const info:HTMLElement=document.getElementById(\"info\") as any;\r\n\r\ndocument.getElementById(\"btTest\")?.addEventListener(\"click\", () => {\r\n   const URL = \"https://rendererdatastorage.blob.core.windows.net/renderdata/data.json?sp=r&st=2023-01-30T08:32:17Z&se=2023-12-31T16:32:17Z&spr=https&sv=2021-06-08&sr=b&sig=D7tzNUh3UNVHCK8BYTOOwM4J8jj6D%2Bvg%2BwlTHMGnKpo%3D\";\r\n  fetch(URL, {\r\n    mode: 'cors',\r\n    method: 'GET',\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"https://rendererdatastorage.blob.core.windows.net\",\r\n      'Content-Type': \"application/json\"\r\n    }\r\n  })\r\n    .then(response => response.json())\r\n    .then((data) => {\r\n      info.innerText=JSON.stringify(data);\r\n    }\r\n    ).catch(e =>{ \r\n      info.innerText=JSON.stringify(e);\r\n    }); \r\n})\r\n\r\n"],"names":[],"mappings":"AAAA;AAAA,MAAM,IAAI,SAAS,WAAW;AAC1B,QAAM,UAAU,SAAS,cAAc,MAAM,EAAE;AAC/C,MAAI,WAAW,QAAQ,YAAY,QAAQ,SAAS,eAAe,GAAG;AAClE;AAAA,EACH;AACD,aAAW,QAAQ,SAAS,iBAAiB,2BAA2B,GAAG;AACvE,mBAAe,IAAI;AAAA,EACtB;AACD,MAAI,iBAAiB,CAAC,cAAc;AAChC,eAAW,YAAY,WAAW;AAC9B,UAAI,SAAS,SAAS,aAAa;AAC/B;AAAA,MACH;AACD,iBAAW,QAAQ,SAAS,YAAY;AACpC,YAAI,KAAK,YAAY,UAAU,KAAK,QAAQ;AACxC,yBAAe,IAAI;AAAA,MAC1B;AAAA,IACJ;AAAA,EACT,CAAK,EAAE,QAAQ,UAAU,EAAE,WAAW,MAAM,SAAS,KAAI,CAAE;AACvD,WAAS,aAAa,QAAQ;AAC1B,UAAM,YAAY,CAAA;AAClB,QAAI,OAAO;AACP,gBAAU,YAAY,OAAO;AACjC,QAAI,OAAO;AACP,gBAAU,iBAAiB,OAAO;AACtC,QAAI,OAAO,gBAAgB;AACvB,gBAAU,cAAc;AAAA,aACnB,OAAO,gBAAgB;AAC5B,gBAAU,cAAc;AAAA;AAExB,gBAAU,cAAc;AAC5B,WAAO;AAAA,EACV;AACD,WAAS,eAAe,MAAM;AAC1B,QAAI,KAAK;AAEL;AACJ,SAAK,KAAK;AAEV,UAAM,YAAY,aAAa,IAAI;AACnC,UAAM,KAAK,MAAM,SAAS;AAAA,EAC7B;AACL;AAAsB,EAAG;AC1CzB,MAAM,OAAiB,SAAS,eAAe,MAAM;AAAA,CAErD,cAAS,eAAe,QAAQ,MAAhC,mBAAmC,iBAAiB,SAAS,MAAM;AAChE,QAAM,MAAM;AACb,QAAM,KAAK;AAAA,IACT,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,SAAS;AAAA,MACP,+BAA+B;AAAA,MAC/B,gBAAgB;AAAA,IAClB;AAAA,EAAA,CACD,EACE,KAAK,cAAY,SAAS,KAAM,CAAA,EAChC;AAAA,IAAK,CAAC,SAAS;AACT,WAAA,YAAU,KAAK,UAAU,IAAI;AAAA,IACpC;AAAA,EAAA,EACE,MAAM,CAAI,MAAA;AACL,SAAA,YAAU,KAAK,UAAU,CAAC;AAAA,EAAA,CAChC;AACL;"}